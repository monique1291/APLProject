
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementsAND ARRAY BOOL BREAK CASE CLASS CLOSECLASS CLOSEFUNC COLON COMMA COMMENTS DEF DIVIDE DIVIDEEQUAL DO DOUBLEQUOTES ELIF ELSE ENDFOR ENDIF ENDWHILE EQUAL EQUALEQUAL FALSE FINALLY FLOAT FLT FOR FUNC GLOBAL GREATEREQUAL GREATERTHAN IDENTIFIER IF IMPORT IN INT INTEGER IS LCURVEDBRACE LESSEQUAL LESSTHAN LPAREN LSQUAREDBRACKET MAIN MINUS MINUSEQUAL NOT NOTEQUAL OR PLUS PLUSEQUAL PRINT RANGE RANGE RCURVEDBRACE RETURN RPAREN RSQUAREDBRACKET RULE_CLOSE RULE_OPEN SINGLEQUOTES STR STRING SWITCH THEN TIMES TIMESEQUAL TRUE UNTIL VARIABLE WHILE\n    statements : statement statements\n               | statement\n               | empty\n    \n    statement : conditional\n              | expression\n              | array_assignment_statement\n              | assignment_statement\n              | function_call\n              | print_statement\n              | function_declaration\n              | array_declaration\n              | variable_declaration\n              | class_declaration\n              | main_function\n              | empty\n    \n    main_function : MAIN LPAREN RPAREN COLON statements\n    \n    conditional : inline_if_statement\n                | for_statement\n                | while_statement\n    \n    variable_declaration : type IDENTIFIER\n    \n    array_declaration : ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET\n                      | ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET EQUAL LSQUAREDBRACKET array_values RSQUAREDBRACKET\n    \n    function_declaration : FUNC type IDENTIFIER LPAREN argument_list RPAREN statements CLOSEFUNC\n    \n    class_declaration : CLASS IDENTIFIER COLON statements CLOSECLASS\n    inline_if_statement : IF expression COLON statements ENDIF\n                           | IF expression COLON statements ELSE COLON statements ENDIF\n                           \n    for_statement : FOR expression IN range_expression COLON statements ENDFOR\n    \n    range_expression : RANGE INTEGER COMMA INTEGER\n    \n    while_statement : WHILE expression COLON statements ENDWHILE\n    \n    bool : TRUE\n         | FALSE\n    \n    print_statement : PRINT LPAREN STRING RPAREN\n    \n    expression : expression GREATERTHAN expression\n               | expression LESSTHAN expression\n               | expression GREATEREQUAL expression\n               | expression LESSEQUAL expression\n               | expression EQUAL expression\n               | expression EQUALEQUAL expression\n               | expression NOTEQUAL expression\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | token\n               | data\n    \n    data : INTEGER\n             | FLOAT\n             | STRING\n             | IDENTIFIER\n             | bool\n    \n    token : COLON\n          | EQUAL\n    array_values : data\n                    | COMMA dataassignment_statement : IDENTIFIER EQUAL expressionarray_assignment_statement : IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET EQUAL LSQUAREDBRACKET array_values RSQUAREDBRACKETfunction_call : IDENTIFIER LPAREN argument_list RPARENargument_list : type IDENTIFIER COMMA argument_list\n                     | type IDENTIFIER\n                     | empty\n    type : INT\n         | FLT\n         | STR\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,91,93,97,106,107,108,112,116,126,128,130,132,134,],[-64,0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,-57,-32,-64,-24,-16,-25,-29,-21,-27,-56,-23,-26,-22,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,57,58,59,63,66,67,68,69,70,71,72,73,74,75,76,78,80,85,87,89,91,93,97,106,107,108,110,112,113,115,116,117,122,126,128,130,131,132,134,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,58,60,-51,63,63,63,-47,-50,-61,-62,-63,-30,-31,-1,63,63,63,63,63,63,63,63,63,63,63,63,83,-20,84,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,92,21,21,21,-57,-32,21,-24,-16,-25,21,-29,63,21,-21,21,63,-27,-56,-23,63,-26,-22,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,23,23,23,-57,-32,23,-24,-16,-25,23,-29,23,-21,23,-27,-56,-23,-26,-22,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,25,25,25,-57,-32,25,-24,-16,-25,25,-29,25,-21,25,-27,-56,-23,-26,-22,]),'ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,27,27,27,-57,-32,27,-24,-16,-25,27,-29,27,-21,27,-27,-56,-23,-26,-22,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,28,28,28,-57,-32,28,-24,-16,-25,28,-29,28,-21,28,-27,-56,-23,-26,-22,]),'MAIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,30,30,30,-57,-32,30,-24,-16,-25,30,-29,30,-21,30,-27,-56,-23,-26,-22,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,31,31,31,-57,-32,31,-24,-16,-25,31,-29,31,-21,31,-27,-56,-23,-26,-22,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,32,32,32,-57,-32,32,-24,-16,-25,32,-29,32,-21,32,-27,-56,-23,-26,-22,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,33,33,33,-57,-32,33,-24,-16,-25,33,-29,33,-21,33,-27,-56,-23,-26,-22,]),'COLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,58,60,62,63,65,66,67,68,69,70,71,72,73,74,75,76,78,85,86,87,89,91,93,97,99,106,107,108,109,110,112,115,116,117,126,127,128,130,132,134,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,29,29,29,-47,-50,-30,-31,-1,29,29,29,29,29,29,29,29,29,29,29,29,-20,85,87,-49,89,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,29,97,29,29,-57,-32,29,110,-24,-16,-25,117,29,-29,29,-21,29,-27,-28,-56,-23,-26,-22,]),'EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,90,91,93,97,106,107,108,110,112,115,116,117,126,128,130,132,134,],[18,18,-3,-4,46,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,54,-46,-48,-51,18,18,18,-47,-50,-30,-31,-1,18,18,18,18,18,18,18,18,18,18,18,18,-20,46,-49,46,46,46,46,46,46,46,46,46,46,46,46,46,46,18,18,18,102,-57,-32,18,-24,-16,-25,18,-29,18,124,18,-27,-56,-23,-26,-22,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,95,97,100,106,107,108,110,112,113,115,116,117,119,122,126,128,130,131,132,134,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,22,22,22,-47,-50,-30,-31,-1,22,22,22,22,22,22,22,22,22,22,22,77,22,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,22,22,22,-57,-32,105,22,111,-24,-16,-25,22,-29,22,22,-21,22,127,22,-27,-56,-23,22,-26,-22,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,113,115,116,117,122,126,128,130,131,132,134,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,34,34,34,-47,-50,-30,-31,-1,34,34,34,34,34,34,34,34,34,34,34,34,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,34,34,34,-57,-32,34,-24,-16,-25,34,-29,34,34,-21,34,34,-27,-56,-23,34,-26,-22,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,56,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,113,115,116,117,122,126,128,130,131,132,134,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,24,24,24,-47,-50,-30,-31,-1,24,24,24,24,24,24,24,24,24,24,24,24,82,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,24,24,24,-57,-32,24,-24,-16,-25,24,-29,24,24,-21,24,24,-27,-56,-23,24,-26,-22,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,29,34,35,39,40,41,55,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,94,97,103,106,107,108,110,112,115,116,117,126,128,130,132,134,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,36,36,-51,-47,-50,-30,-31,-1,36,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,36,36,36,-57,-32,36,36,36,-24,-16,-25,36,-29,36,-21,36,-27,-56,-23,-26,-22,]),'FLT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,29,34,35,39,40,41,55,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,94,97,103,106,107,108,110,112,115,116,117,126,128,130,132,134,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,37,37,-51,-47,-50,-30,-31,-1,37,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,37,37,37,-57,-32,37,37,37,-24,-16,-25,37,-29,37,-21,37,-27,-56,-23,-26,-22,]),'STR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,29,34,35,39,40,41,55,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,94,97,103,106,107,108,110,112,115,116,117,126,128,130,132,134,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,38,38,-51,-47,-50,-30,-31,-1,38,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,38,38,38,-57,-32,38,38,38,-24,-16,-25,38,-29,38,-21,38,-27,-56,-23,-26,-22,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,113,115,116,117,122,126,128,130,131,132,134,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,39,39,39,-47,-50,-30,-31,-1,39,39,39,39,39,39,39,39,39,39,39,39,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,39,39,39,-57,-32,39,-24,-16,-25,39,-29,39,39,-21,39,39,-27,-56,-23,39,-26,-22,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,87,89,91,93,97,106,107,108,110,112,113,115,116,117,122,126,128,130,131,132,134,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,40,40,40,-47,-50,-30,-31,-1,40,40,40,40,40,40,40,40,40,40,40,40,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,40,40,40,-57,-32,40,-24,-16,-25,40,-29,40,40,-21,40,40,-27,-56,-23,40,-26,-22,]),'CLOSECLASS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,85,91,93,96,97,106,107,108,112,116,126,128,130,132,134,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,-64,-57,-32,106,-64,-24,-16,-25,-29,-21,-27,-56,-23,-26,-22,]),'ENDIF':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,87,91,93,97,98,106,107,108,112,116,117,125,126,128,130,132,134,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,-64,-57,-32,-64,108,-24,-16,-25,-29,-21,-64,132,-27,-56,-23,-26,-22,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,87,91,93,97,98,106,107,108,112,116,126,128,130,132,134,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,-64,-57,-32,-64,109,-24,-16,-25,-29,-21,-27,-56,-23,-26,-22,]),'ENDWHILE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,89,91,93,97,101,106,107,108,112,116,126,128,130,132,134,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,-64,-57,-32,-64,112,-24,-16,-25,-29,-21,-27,-56,-23,-26,-22,]),'ENDFOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,91,93,97,106,107,108,110,112,116,118,126,128,130,132,134,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,-57,-32,-64,-24,-16,-25,-64,-29,-21,126,-27,-56,-23,-26,-22,]),'CLOSEFUNC':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,29,34,35,39,40,41,58,63,66,67,68,69,70,71,72,73,74,75,76,78,91,93,97,106,107,108,112,115,116,123,126,128,130,132,134,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-17,-18,-19,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,-1,-20,-49,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-55,-57,-32,-64,-24,-16,-25,-29,-64,-21,130,-27,-56,-23,-26,-22,]),'GREATERTHAN':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[42,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,42,-49,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'LESSTHAN':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[43,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,43,-49,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'GREATEREQUAL':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[44,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,44,-49,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'LESSEQUAL':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[45,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,45,-49,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'EQUALEQUAL':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[47,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,47,-49,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'NOTEQUAL':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[48,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,48,-49,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'PLUS':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[49,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,49,-49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'MINUS':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[50,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,50,-49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'TIMES':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[51,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,51,-49,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'DIVIDE':([5,18,19,20,21,22,24,29,34,35,39,40,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,],[52,-52,-44,-45,-49,-46,-48,-51,-47,-50,-30,-31,52,-49,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'IN':([18,19,20,22,24,29,34,35,39,40,63,64,66,67,68,69,70,71,72,73,74,75,76,],[-52,-44,-45,-46,-48,-51,-47,-50,-30,-31,-49,88,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,]),'LSQUAREDBRACKET':([21,84,102,124,],[53,95,113,131,]),'LPAREN':([21,23,30,83,],[55,56,61,94,]),'RSQUAREDBRACKET':([22,24,34,35,39,40,63,77,105,120,121,129,133,],[-46,-48,-47,-50,-30,-31,-49,90,116,128,-53,-54,134,]),'RPAREN':([55,61,79,81,82,92,94,103,104,114,],[-64,86,91,-60,93,-59,-64,-64,115,-58,]),'RANGE':([88,],[100,]),'COMMA':([92,111,113,131,],[103,119,122,122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,2,85,87,89,97,110,115,117,],[1,41,96,98,101,107,118,123,125,]),'statement':([0,2,85,87,89,97,110,115,117,],[2,2,2,2,2,2,2,2,2,]),'empty':([0,2,55,85,87,89,94,97,103,110,115,117,],[3,3,81,3,3,3,81,3,81,3,3,3,]),'conditional':([0,2,85,87,89,97,110,115,117,],[4,4,4,4,4,4,4,4,4,]),'expression':([0,2,31,32,33,42,43,44,45,46,47,48,49,50,51,52,54,85,87,89,97,110,115,117,],[5,5,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,5,5,5,5,5,5,5,]),'array_assignment_statement':([0,2,85,87,89,97,110,115,117,],[6,6,6,6,6,6,6,6,6,]),'assignment_statement':([0,2,85,87,89,97,110,115,117,],[7,7,7,7,7,7,7,7,7,]),'function_call':([0,2,85,87,89,97,110,115,117,],[8,8,8,8,8,8,8,8,8,]),'print_statement':([0,2,85,87,89,97,110,115,117,],[9,9,9,9,9,9,9,9,9,]),'function_declaration':([0,2,85,87,89,97,110,115,117,],[10,10,10,10,10,10,10,10,10,]),'array_declaration':([0,2,85,87,89,97,110,115,117,],[11,11,11,11,11,11,11,11,11,]),'variable_declaration':([0,2,85,87,89,97,110,115,117,],[12,12,12,12,12,12,12,12,12,]),'class_declaration':([0,2,85,87,89,97,110,115,117,],[13,13,13,13,13,13,13,13,13,]),'main_function':([0,2,85,87,89,97,110,115,117,],[14,14,14,14,14,14,14,14,14,]),'inline_if_statement':([0,2,85,87,89,97,110,115,117,],[15,15,15,15,15,15,15,15,15,]),'for_statement':([0,2,85,87,89,97,110,115,117,],[16,16,16,16,16,16,16,16,16,]),'while_statement':([0,2,85,87,89,97,110,115,117,],[17,17,17,17,17,17,17,17,17,]),'token':([0,2,31,32,33,42,43,44,45,46,47,48,49,50,51,52,54,85,87,89,97,110,115,117,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'data':([0,2,31,32,33,42,43,44,45,46,47,48,49,50,51,52,54,85,87,89,97,110,113,115,117,122,131,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,121,20,20,129,121,]),'type':([0,2,25,27,55,85,87,89,94,97,103,110,115,117,],[26,26,57,59,80,26,26,26,80,26,80,26,26,26,]),'bool':([0,2,31,32,33,42,43,44,45,46,47,48,49,50,51,52,54,85,87,89,97,110,113,115,117,122,131,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'argument_list':([55,94,103,],[79,104,114,]),'range_expression':([88,],[99,]),'array_values':([113,131,],[120,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement statements','statements',2,'p_statements','newParser.py',12),
  ('statements -> statement','statements',1,'p_statements','newParser.py',13),
  ('statements -> empty','statements',1,'p_statements','newParser.py',14),
  ('statement -> conditional','statement',1,'p_statement','newParser.py',26),
  ('statement -> expression','statement',1,'p_statement','newParser.py',27),
  ('statement -> array_assignment_statement','statement',1,'p_statement','newParser.py',28),
  ('statement -> assignment_statement','statement',1,'p_statement','newParser.py',29),
  ('statement -> function_call','statement',1,'p_statement','newParser.py',30),
  ('statement -> print_statement','statement',1,'p_statement','newParser.py',31),
  ('statement -> function_declaration','statement',1,'p_statement','newParser.py',32),
  ('statement -> array_declaration','statement',1,'p_statement','newParser.py',33),
  ('statement -> variable_declaration','statement',1,'p_statement','newParser.py',34),
  ('statement -> class_declaration','statement',1,'p_statement','newParser.py',35),
  ('statement -> main_function','statement',1,'p_statement','newParser.py',36),
  ('statement -> empty','statement',1,'p_statement','newParser.py',37),
  ('main_function -> MAIN LPAREN RPAREN COLON statements','main_function',5,'p_main_function','newParser.py',44),
  ('conditional -> inline_if_statement','conditional',1,'p_conditional','newParser.py',51),
  ('conditional -> for_statement','conditional',1,'p_conditional','newParser.py',52),
  ('conditional -> while_statement','conditional',1,'p_conditional','newParser.py',53),
  ('variable_declaration -> type IDENTIFIER','variable_declaration',2,'p_variable_declaration','newParser.py',61),
  ('array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET','array_declaration',6,'p_array_declaration','newParser.py',69),
  ('array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET EQUAL LSQUAREDBRACKET array_values RSQUAREDBRACKET','array_declaration',10,'p_array_declaration','newParser.py',70),
  ('function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN statements CLOSEFUNC','function_declaration',8,'p_function_declaration','newParser.py',80),
  ('class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS','class_declaration',5,'p_class_declaration','newParser.py',88),
  ('inline_if_statement -> IF expression COLON statements ENDIF','inline_if_statement',5,'p_inline_if_statement','newParser.py',95),
  ('inline_if_statement -> IF expression COLON statements ELSE COLON statements ENDIF','inline_if_statement',8,'p_inline_if_statement','newParser.py',96),
  ('for_statement -> FOR expression IN range_expression COLON statements ENDFOR','for_statement',7,'p_for_statement','newParser.py',106),
  ('range_expression -> RANGE INTEGER COMMA INTEGER','range_expression',4,'p_range_expression','newParser.py',113),
  ('while_statement -> WHILE expression COLON statements ENDWHILE','while_statement',5,'p_while_statement','newParser.py',120),
  ('bool -> TRUE','bool',1,'p_bool','newParser.py',127),
  ('bool -> FALSE','bool',1,'p_bool','newParser.py',128),
  ('print_statement -> PRINT LPAREN STRING RPAREN','print_statement',4,'p_print_statement','newParser.py',135),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','newParser.py',142),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','newParser.py',143),
  ('expression -> expression GREATEREQUAL expression','expression',3,'p_expression','newParser.py',144),
  ('expression -> expression LESSEQUAL expression','expression',3,'p_expression','newParser.py',145),
  ('expression -> expression EQUAL expression','expression',3,'p_expression','newParser.py',146),
  ('expression -> expression EQUALEQUAL expression','expression',3,'p_expression','newParser.py',147),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression','newParser.py',148),
  ('expression -> expression PLUS expression','expression',3,'p_expression','newParser.py',149),
  ('expression -> expression MINUS expression','expression',3,'p_expression','newParser.py',150),
  ('expression -> expression TIMES expression','expression',3,'p_expression','newParser.py',151),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','newParser.py',152),
  ('expression -> token','expression',1,'p_expression','newParser.py',153),
  ('expression -> data','expression',1,'p_expression','newParser.py',154),
  ('data -> INTEGER','data',1,'p_data','newParser.py',177),
  ('data -> FLOAT','data',1,'p_data','newParser.py',178),
  ('data -> STRING','data',1,'p_data','newParser.py',179),
  ('data -> IDENTIFIER','data',1,'p_data','newParser.py',180),
  ('data -> bool','data',1,'p_data','newParser.py',181),
  ('token -> COLON','token',1,'p_tokens','newParser.py',188),
  ('token -> EQUAL','token',1,'p_tokens','newParser.py',189),
  ('array_values -> data','array_values',1,'p_array_values','newParser.py',195),
  ('array_values -> COMMA data','array_values',2,'p_array_values','newParser.py',196),
  ('assignment_statement -> IDENTIFIER EQUAL expression','assignment_statement',3,'p_assignment_statement','newParser.py',204),
  ('array_assignment_statement -> IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET EQUAL LSQUAREDBRACKET array_values RSQUAREDBRACKET','array_assignment_statement',8,'p_array_assignment_statement','newParser.py',209),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','newParser.py',214),
  ('argument_list -> type IDENTIFIER COMMA argument_list','argument_list',4,'p_argument_list','newParser.py',219),
  ('argument_list -> type IDENTIFIER','argument_list',2,'p_argument_list','newParser.py',220),
  ('argument_list -> empty','argument_list',1,'p_argument_list','newParser.py',221),
  ('type -> INT','type',1,'p_type','newParser.py',232),
  ('type -> FLT','type',1,'p_type','newParser.py',233),
  ('type -> STR','type',1,'p_type','newParser.py',234),
  ('empty -> <empty>','empty',0,'p_empty','newParser.py',241),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementsAND ARRAY BREAK Bool CASE CLASS CLOSECLASS CLOSEFUNC COLON COMMA COMMENTS DEF DIVIDE DIVIDEEQUAL DO DOUBLEQUOTES Double ELIF ELSE ENDIF EQUAL EQUALEQUAL EQUALTO FALSE FINALLY FLOAT FOR FUNC Float GLOBAL GREATEREQUAL GREATERTHAN IDENTIFIER IF IMPORT IN INT INTEGER IS LCURVEDBRACE LESSEQUAL LESSTHAN LPAREN LSQUAREDBRACKET MAIN MINUS MINUSEQUAL NOT NOTEQUAL OR PLUS PLUSEQUAL PRINT RANGE RCURVEDBRACE RESERVEDWORD RETURN RPAREN RSQUAREDBRACKET RULE_CLOSE RULE_OPEN SINGLEQUOTES STRING SWITCH Str THEN TIMES TIMESEQUAL TRUE UNTIL VARIABLE WHILE\n    statements : statement statements\n               | statement\n               | empty\n    \n    statement : conditional\n              | expression\n              | assignment_statement\n              | function_call\n              | print_statement\n              | empty\n    \n    conditional : inline_if_statement\n                | for_statement\n                | while_statement\n    \n    variable_declaration : VARIABLE datatype IDENTIFIER\n    \n    array_declaration : ARRAY datatype IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET\n    \n    function_declaration : FUNC datatype IDENTIFIER LPAREN argument_list RPAREN statements CLOSEFUNC\n    \n    class_declaration : CLASS IDENTIFIER COLON statements CLOSECLASS\n    inline_if_statement : IF expression COLON statements ENDIF\n                           | IF expression COLON statements ELSE statements\n                           \n    for_statement : FOR expression IN range_expression\n    \n    range_expression : RANGE expression COMMA expression\n    \n    while_statement : WHILE expression COLON statements\n    \n    bool : TRUE\n         | FALSE\n    \n    print_statement : PRINT LPAREN expression RPAREN\n    \n    expression : expression GREATERTHAN datatype\n               | expression PLUS datatype\n               | expression MINUS datatype\n               | expression TIMES datatype\n               | expression DIVIDE datatype\n               | expression EQUAL datatype\n               | LPAREN expression RPAREN\n               | LSQUAREDBRACKET expression RSQUAREDBRACKET\n               | token\n               | datatype\n    \n    datatype : INTEGER\n             | FLOAT\n             | STRING\n             | IDENTIFIER\n             | bool\n    \n    token : COLON\n          | EQUAL\n    assignment_statement : IDENTIFIER EQUAL expressionfunction_call : IDENTIFIER LPAREN argument_list RPARENargument_list : datatype IDENTIFIER COMMA argument_list\n                     | datatype IDENTIFIER\n                     | empty\n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,20,23,24,25,26,27,28,29,37,45,46,47,48,49,50,51,52,53,60,61,63,65,67,69,70,73,75,],[-47,0,-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,-1,-38,-25,-26,-27,-28,-29,-30,-31,-32,-42,-47,-43,-24,-19,-21,-17,-47,-18,-20,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,37,39,41,45,46,47,48,49,50,51,52,53,58,60,61,63,65,66,67,69,70,73,74,75,],[14,14,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,14,14,-33,40,41,14,-40,14,14,-35,-36,-37,-39,-22,-23,-1,-38,14,14,-25,-26,-27,-28,-29,-30,-31,-32,-42,14,14,-43,-24,-19,14,-21,-17,14,-18,14,-20,]),'LSQUAREDBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,37,39,41,45,46,47,48,49,50,51,52,53,58,60,61,63,65,66,67,69,70,73,74,75,],[15,15,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,15,15,-33,-38,15,-40,15,15,-35,-36,-37,-39,-22,-23,-1,-38,15,15,-25,-26,-27,-28,-29,-30,-31,-32,-42,15,15,-43,-24,-19,15,-21,-17,15,-18,15,-20,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,45,46,47,48,49,50,51,52,53,55,58,60,61,63,65,66,67,68,69,70,73,74,75,],[17,17,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,37,37,-33,-38,37,-40,37,37,-35,-36,-37,-39,-22,-23,-1,37,37,37,37,37,37,-38,37,37,37,-25,-26,-27,-28,-29,-30,-31,-32,-42,62,17,17,-43,-24,-19,37,-21,37,-17,17,-18,37,-20,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,20,23,24,25,26,27,28,29,37,45,46,47,48,49,50,51,52,53,58,60,61,63,65,67,69,70,73,75,],[18,18,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,-1,-38,-25,-26,-27,-28,-29,-30,-31,-32,-42,18,18,-43,-24,-19,-21,-17,18,-18,-20,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,20,23,24,25,26,27,28,29,37,45,46,47,48,49,50,51,52,53,58,60,61,63,65,67,69,70,73,75,],[19,19,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,-1,-38,-25,-26,-27,-28,-29,-30,-31,-32,-42,19,19,-43,-24,-19,-21,-17,19,-18,-20,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,20,23,24,25,26,27,28,29,37,45,46,47,48,49,50,51,52,53,58,60,61,63,65,67,69,70,73,75,],[21,21,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,-1,-38,-25,-26,-27,-28,-29,-30,-31,-32,-42,21,21,-43,-24,-19,-21,-17,21,-18,-20,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,20,23,24,25,26,27,28,29,37,45,46,47,48,49,50,51,52,53,58,60,61,63,65,67,69,70,73,75,],[22,22,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,-1,-38,-25,-26,-27,-28,-29,-30,-31,-32,-42,22,22,-43,-24,-19,-21,-17,22,-18,-20,]),'COLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,37,39,41,42,44,45,46,47,48,49,50,51,52,53,58,60,61,63,65,66,67,69,70,73,74,75,],[20,20,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,20,20,-33,-38,20,-40,20,20,-35,-36,-37,-39,-22,-23,-1,-38,20,20,58,60,-25,-26,-27,-28,-29,-30,-31,-32,-42,20,20,-43,-24,-19,20,-21,-17,20,-18,20,-20,]),'EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,60,61,63,65,66,67,69,70,71,73,74,75,],[13,13,-3,-4,35,-6,-7,-8,-10,-11,-12,-34,-41,13,13,-33,39,13,-40,13,13,-35,-36,-37,-39,-22,-23,-1,35,-38,35,13,13,35,35,35,-25,-26,-27,-28,-29,-30,-31,-32,35,35,13,13,-43,-24,-19,13,-21,-17,13,35,-18,13,35,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,45,46,47,48,49,50,51,52,53,58,60,61,63,65,66,67,68,69,70,73,74,75,],[23,23,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,23,23,-33,-38,23,-40,23,23,-35,-36,-37,-39,-22,-23,-1,23,23,23,23,23,23,-38,23,23,23,-25,-26,-27,-28,-29,-30,-31,-32,-42,23,23,-43,-24,-19,23,-21,23,-17,23,-18,23,-20,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,45,46,47,48,49,50,51,52,53,58,60,61,63,65,66,67,68,69,70,73,74,75,],[24,24,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,24,24,-33,-38,24,-40,24,24,-35,-36,-37,-39,-22,-23,-1,24,24,24,24,24,24,-38,24,24,24,-25,-26,-27,-28,-29,-30,-31,-32,-42,24,24,-43,-24,-19,24,-21,24,-17,24,-18,24,-20,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,45,46,47,48,49,50,51,52,53,58,60,61,63,65,66,67,68,69,70,73,74,75,],[25,25,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,25,25,-33,-38,25,-40,25,25,-35,-36,-37,-39,-22,-23,-1,25,25,25,25,25,25,-38,25,25,25,-25,-26,-27,-28,-29,-30,-31,-32,-42,25,25,-43,-24,-19,25,-21,25,-17,25,-18,25,-20,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,45,46,47,48,49,50,51,52,53,58,60,61,63,65,66,67,68,69,70,73,74,75,],[27,27,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,27,27,-33,-38,27,-40,27,27,-35,-36,-37,-39,-22,-23,-1,27,27,27,27,27,27,-38,27,27,27,-25,-26,-27,-28,-29,-30,-31,-32,-42,27,27,-43,-24,-19,27,-21,27,-17,27,-18,27,-20,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,41,45,46,47,48,49,50,51,52,53,58,60,61,63,65,66,67,68,69,70,73,74,75,],[28,28,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,28,28,-33,-38,28,-40,28,28,-35,-36,-37,-39,-22,-23,-1,28,28,28,28,28,28,-38,28,28,28,-25,-26,-27,-28,-29,-30,-31,-32,-42,28,28,-43,-24,-19,28,-21,28,-17,28,-18,28,-20,]),'ENDIF':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,20,23,24,25,26,27,28,29,37,45,46,47,48,49,50,51,52,53,58,60,61,63,64,65,67,69,70,73,75,],[-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,-1,-38,-25,-26,-27,-28,-29,-30,-31,-32,-42,-47,-47,-43,-24,69,-19,-21,-17,-47,-18,-20,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,16,17,20,23,24,25,26,27,28,29,37,45,46,47,48,49,50,51,52,53,58,60,61,63,64,65,67,69,70,73,75,],[-2,-3,-4,-5,-6,-7,-8,-10,-11,-12,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,-1,-38,-25,-26,-27,-28,-29,-30,-31,-32,-42,-47,-47,-43,-24,70,-19,-21,-17,-47,-18,-20,]),'GREATERTHAN':([5,12,13,16,17,20,23,24,25,26,27,28,36,37,38,42,43,44,45,46,47,48,49,50,51,52,53,57,71,75,],[30,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,30,-38,30,30,30,30,-25,-26,-27,-28,-29,-30,-31,-32,30,30,30,30,]),'PLUS':([5,12,13,16,17,20,23,24,25,26,27,28,36,37,38,42,43,44,45,46,47,48,49,50,51,52,53,57,71,75,],[31,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,31,-38,31,31,31,31,-25,-26,-27,-28,-29,-30,-31,-32,31,31,31,31,]),'MINUS':([5,12,13,16,17,20,23,24,25,26,27,28,36,37,38,42,43,44,45,46,47,48,49,50,51,52,53,57,71,75,],[32,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,32,-38,32,32,32,32,-25,-26,-27,-28,-29,-30,-31,-32,32,32,32,32,]),'TIMES':([5,12,13,16,17,20,23,24,25,26,27,28,36,37,38,42,43,44,45,46,47,48,49,50,51,52,53,57,71,75,],[33,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,33,-38,33,33,33,33,-25,-26,-27,-28,-29,-30,-31,-32,33,33,33,33,]),'DIVIDE':([5,12,13,16,17,20,23,24,25,26,27,28,36,37,38,42,43,44,45,46,47,48,49,50,51,52,53,57,71,75,],[34,-34,-41,-33,-38,-40,-35,-36,-37,-39,-22,-23,34,-38,34,34,34,34,-25,-26,-27,-28,-29,-30,-31,-32,34,34,34,34,]),'RPAREN':([12,13,16,20,23,24,25,26,27,28,36,37,40,45,46,47,48,49,50,51,52,54,56,57,62,68,72,],[-34,-41,-33,-40,-35,-36,-37,-39,-22,-23,51,-38,-47,-25,-26,-27,-28,-29,-30,-31,-32,61,-46,63,-45,-47,-44,]),'RSQUAREDBRACKET':([12,13,16,20,23,24,25,26,27,28,37,38,45,46,47,48,49,50,51,52,],[-34,-41,-33,-40,-35,-36,-37,-39,-22,-23,-38,52,-25,-26,-27,-28,-29,-30,-31,-32,]),'IN':([12,13,16,20,23,24,25,26,27,28,37,43,45,46,47,48,49,50,51,52,],[-34,-41,-33,-40,-35,-36,-37,-39,-22,-23,-38,59,-25,-26,-27,-28,-29,-30,-31,-32,]),'COMMA':([12,13,16,20,23,24,25,26,27,28,37,45,46,47,48,49,50,51,52,62,71,],[-34,-41,-33,-40,-35,-36,-37,-39,-22,-23,-38,-25,-26,-27,-28,-29,-30,-31,-32,68,74,]),'RANGE':([59,],[66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,2,58,60,70,],[1,29,64,67,73,]),'statement':([0,2,58,60,70,],[2,2,2,2,2,]),'empty':([0,2,40,58,60,68,70,],[3,3,56,3,3,56,3,]),'conditional':([0,2,58,60,70,],[4,4,4,4,4,]),'expression':([0,2,14,15,19,21,22,39,41,58,60,66,70,74,],[5,5,36,38,42,43,44,53,57,5,5,71,5,75,]),'assignment_statement':([0,2,58,60,70,],[6,6,6,6,6,]),'function_call':([0,2,58,60,70,],[7,7,7,7,7,]),'print_statement':([0,2,58,60,70,],[8,8,8,8,8,]),'inline_if_statement':([0,2,58,60,70,],[9,9,9,9,9,]),'for_statement':([0,2,58,60,70,],[10,10,10,10,10,]),'while_statement':([0,2,58,60,70,],[11,11,11,11,11,]),'datatype':([0,2,14,15,19,21,22,30,31,32,33,34,35,39,40,41,58,60,66,68,70,74,],[12,12,12,12,12,12,12,45,46,47,48,49,50,12,55,12,12,12,12,55,12,12,]),'token':([0,2,14,15,19,21,22,39,41,58,60,66,70,74,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'bool':([0,2,14,15,19,21,22,30,31,32,33,34,35,39,40,41,58,60,66,68,70,74,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'argument_list':([40,68,],[54,72,]),'range_expression':([59,],[65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement statements','statements',2,'p_statements','newParser.py',12),
  ('statements -> statement','statements',1,'p_statements','newParser.py',13),
  ('statements -> empty','statements',1,'p_statements','newParser.py',14),
  ('statement -> conditional','statement',1,'p_statement','newParser.py',26),
  ('statement -> expression','statement',1,'p_statement','newParser.py',27),
  ('statement -> assignment_statement','statement',1,'p_statement','newParser.py',28),
  ('statement -> function_call','statement',1,'p_statement','newParser.py',29),
  ('statement -> print_statement','statement',1,'p_statement','newParser.py',30),
  ('statement -> empty','statement',1,'p_statement','newParser.py',31),
  ('conditional -> inline_if_statement','conditional',1,'p_conditional','newParser.py',38),
  ('conditional -> for_statement','conditional',1,'p_conditional','newParser.py',39),
  ('conditional -> while_statement','conditional',1,'p_conditional','newParser.py',40),
  ('variable_declaration -> VARIABLE datatype IDENTIFIER','variable_declaration',3,'p_variable_declaration','newParser.py',48),
  ('array_declaration -> ARRAY datatype IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET','array_declaration',6,'p_array_declaration','newParser.py',56),
  ('function_declaration -> FUNC datatype IDENTIFIER LPAREN argument_list RPAREN statements CLOSEFUNC','function_declaration',8,'p_function_declaration','newParser.py',64),
  ('class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS','class_declaration',5,'p_class_declaration','newParser.py',72),
  ('inline_if_statement -> IF expression COLON statements ENDIF','inline_if_statement',5,'p_inline_if_statement','newParser.py',79),
  ('inline_if_statement -> IF expression COLON statements ELSE statements','inline_if_statement',6,'p_inline_if_statement','newParser.py',80),
  ('for_statement -> FOR expression IN range_expression','for_statement',4,'p_for_statement','newParser.py',90),
  ('range_expression -> RANGE expression COMMA expression','range_expression',4,'p_range_expression','newParser.py',97),
  ('while_statement -> WHILE expression COLON statements','while_statement',4,'p_while_statement','newParser.py',104),
  ('bool -> TRUE','bool',1,'p_bool','newParser.py',111),
  ('bool -> FALSE','bool',1,'p_bool','newParser.py',112),
  ('print_statement -> PRINT LPAREN expression RPAREN','print_statement',4,'p_print_statement','newParser.py',119),
  ('expression -> expression GREATERTHAN datatype','expression',3,'p_expression','newParser.py',126),
  ('expression -> expression PLUS datatype','expression',3,'p_expression','newParser.py',127),
  ('expression -> expression MINUS datatype','expression',3,'p_expression','newParser.py',128),
  ('expression -> expression TIMES datatype','expression',3,'p_expression','newParser.py',129),
  ('expression -> expression DIVIDE datatype','expression',3,'p_expression','newParser.py',130),
  ('expression -> expression EQUAL datatype','expression',3,'p_expression','newParser.py',131),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','newParser.py',132),
  ('expression -> LSQUAREDBRACKET expression RSQUAREDBRACKET','expression',3,'p_expression','newParser.py',133),
  ('expression -> token','expression',1,'p_expression','newParser.py',134),
  ('expression -> datatype','expression',1,'p_expression','newParser.py',135),
  ('datatype -> INTEGER','datatype',1,'p_datatype','newParser.py',157),
  ('datatype -> FLOAT','datatype',1,'p_datatype','newParser.py',158),
  ('datatype -> STRING','datatype',1,'p_datatype','newParser.py',159),
  ('datatype -> IDENTIFIER','datatype',1,'p_datatype','newParser.py',160),
  ('datatype -> bool','datatype',1,'p_datatype','newParser.py',161),
  ('token -> COLON','token',1,'p_tokens','newParser.py',168),
  ('token -> EQUAL','token',1,'p_tokens','newParser.py',169),
  ('assignment_statement -> IDENTIFIER EQUAL expression','assignment_statement',3,'p_assignment_statement','newParser.py',175),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','newParser.py',180),
  ('argument_list -> datatype IDENTIFIER COMMA argument_list','argument_list',4,'p_argument_list','newParser.py',185),
  ('argument_list -> datatype IDENTIFIER','argument_list',2,'p_argument_list','newParser.py',186),
  ('argument_list -> empty','argument_list',1,'p_argument_list','newParser.py',187),
  ('empty -> <empty>','empty',0,'p_empty','newParser.py',197),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'statementsAND ARRAY BOOL BREAK CASE CLASS CLOSECLASS CLOSEFUNC COLON COMMA COMMENTS DEF DIVIDE DIVIDEEQUAL DO DOUBLEQUOTES ELIF ELSE ENDIF EQUAL EQUALEQUAL FALSE FINALLY FLOAT FLT FOR FUNC GLOBAL GREATEREQUAL GREATERTHAN IDENTIFIER IF IMPORT IN INT INTEGER IS LCURVEDBRACE LESSEQUAL LESSTHAN LPAREN LSQUAREDBRACKET MAIN MINUS MINUSEQUAL NOT NOTEQUAL OR PLUS PLUSEQUAL PRINT RANGE RCURVEDBRACE RETURN RPAREN RSQUAREDBRACKET RULE_CLOSE RULE_OPEN SINGLEQUOTES STR STRING SWITCH THEN TIMES TIMESEQUAL TRUE UNTIL VARIABLE WHILE\n    statements : statement statements\n               | statement\n               | empty\n    \n    statement : conditional\n              | expression\n              | assignment_statement\n              | function_call\n              | print_statement\n              | function_declaration\n              | variable_declaration\n              | array_declaration\n              | class_declaration\n              | main_function\n              | empty\n    \n    main_function : MAIN LPAREN RPAREN COLON statements\n    \n    conditional : inline_if_statement\n                | for_statement\n                | while_statement\n    \n    variable_declaration : type IDENTIFIER\n    \n    array_declaration : ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET\n    \n    function_declaration : FUNC type IDENTIFIER LPAREN argument_list RPAREN statements CLOSEFUNC\n    \n    class_declaration : CLASS IDENTIFIER COLON statements CLOSECLASS\n    inline_if_statement : IF expression COLON statements ENDIF\n                           | IF expression COLON statements ELSE COLON statements ENDIF\n                           \n    for_statement : FOR expression IN range_expression\n    \n    range_expression : RANGE expression COMMA expression\n    \n    while_statement : WHILE expression COLON statements\n    \n    bool : TRUE\n         | FALSE\n    \n    print_statement : PRINT LPAREN STRING RPAREN\n    \n    expression : expression GREATERTHAN expression\n               | expression LESSTHAN expression\n               | expression GREATEREQUAL expression\n               | expression LESSEQUAL expression\n               | expression EQUALEQUAL expression\n               | expression NOTEQUAL expression\n               | expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression EQUAL expression\n               | LPAREN expression RPAREN\n               | LSQUAREDBRACKET expression RSQUAREDBRACKET\n               | token\n               | data\n    \n    data : INTEGER\n             | FLOAT\n             | STRING\n             | IDENTIFIER\n             | bool\n    \n    token : COLON\n          | EQUAL\n    assignment_statement : IDENTIFIER EQUAL expressionfunction_call : IDENTIFIER LPAREN argument_list RPARENargument_list : type IDENTIFIER COMMA argument_list\n                     | type IDENTIFIER\n                     | empty\n    type : INT\n         | FLT\n         | STR\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,92,93,95,99,101,103,107,108,109,114,119,120,121,],[-61,0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,-61,-54,-30,-61,-25,-27,-22,-15,-23,-20,-26,-21,-24,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,86,88,90,92,93,95,99,101,102,103,107,108,109,113,114,115,116,119,120,121,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,18,18,-44,-45,58,59,-48,-46,-51,64,18,18,18,-47,-50,-28,-29,-1,18,18,18,18,18,18,18,18,18,18,18,-49,18,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,96,18,18,18,-54,-30,18,-25,18,-27,-22,-15,-23,18,-20,18,18,-26,-21,-24,]),'LSQUAREDBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,28,30,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,88,90,92,93,95,99,101,102,103,107,108,109,113,114,115,116,119,120,121,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,19,19,-44,-45,-49,-48,-46,-51,19,19,19,-47,-50,-28,-29,-1,19,19,19,19,19,19,19,19,19,19,19,-49,19,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,97,19,19,19,-54,-30,19,-25,19,-27,-22,-15,-23,19,-20,19,19,-26,-21,-24,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,60,61,62,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,88,90,92,93,95,99,101,102,103,107,108,109,113,114,115,116,119,120,121,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,55,55,-44,-45,-49,-48,61,-46,63,-51,55,55,55,-47,-50,-58,-59,-60,-28,-29,-1,55,55,55,55,55,55,55,55,55,55,55,-49,55,86,-19,87,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,94,22,22,22,-54,-30,22,-25,55,-27,-22,-15,-23,22,-20,22,55,-26,-21,-24,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,103,107,108,109,113,114,115,119,120,121,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,23,23,23,-54,-30,23,-25,-27,-22,-15,-23,23,-20,23,-26,-21,-24,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,103,107,108,109,113,114,115,119,120,121,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,25,25,25,-54,-30,25,-25,-27,-22,-15,-23,25,-20,25,-26,-21,-24,]),'ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,103,107,108,109,113,114,115,119,120,121,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,27,27,27,-54,-30,27,-25,-27,-22,-15,-23,27,-20,27,-26,-21,-24,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,103,107,108,109,113,114,115,119,120,121,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,29,29,29,-54,-30,29,-25,-27,-22,-15,-23,29,-20,29,-26,-21,-24,]),'MAIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,103,107,108,109,113,114,115,119,120,121,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,31,31,31,-54,-30,31,-25,-27,-22,-15,-23,31,-20,31,-26,-21,-24,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,103,107,108,109,113,114,115,119,120,121,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,32,32,32,-54,-30,32,-25,-27,-22,-15,-23,32,-20,32,-26,-21,-24,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,103,107,108,109,113,114,115,119,120,121,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,33,33,33,-54,-30,33,-25,-27,-22,-15,-23,33,-20,33,-26,-21,-24,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,103,107,108,109,113,114,115,119,120,121,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,34,34,34,-54,-30,34,-25,-27,-22,-15,-23,34,-20,34,-26,-21,-24,]),'COLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,28,30,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,61,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,89,90,92,93,95,99,101,102,103,107,108,109,110,113,114,115,116,119,120,121,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,30,30,-44,-45,-49,-48,-46,-51,30,30,30,-47,-50,-28,-29,-1,30,30,30,30,30,30,30,30,30,30,30,-49,30,-19,88,90,92,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,30,99,30,30,-54,-30,30,-25,30,-27,-22,-15,-23,115,30,-20,30,30,-26,-21,-24,]),'EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,28,30,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,102,103,107,108,109,111,113,114,115,116,119,120,121,],[17,17,-3,-4,53,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,17,17,-44,-45,57,-48,-46,-51,17,17,17,-47,-50,-28,-29,-1,17,17,17,17,17,17,17,17,17,17,17,53,-49,53,17,-19,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-42,-43,53,17,17,17,-54,-30,17,-25,17,-27,-22,-15,-23,53,17,-20,17,17,53,-21,-24,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,28,30,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,97,99,101,102,103,107,108,109,113,114,115,116,119,120,121,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,28,28,-44,-45,-49,-48,-46,-51,28,28,28,-47,-50,-28,-29,-1,28,28,28,28,28,28,28,28,28,28,28,-49,28,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,28,28,28,-54,-30,106,28,-25,28,-27,-22,-15,-23,28,-20,28,28,-26,-21,-24,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,28,30,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,102,103,107,108,109,113,114,115,116,119,120,121,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,35,35,-44,-45,-49,-48,-46,-51,35,35,35,-47,-50,-28,-29,-1,35,35,35,35,35,35,35,35,35,35,35,-49,35,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,35,35,35,-54,-30,35,-25,35,-27,-22,-15,-23,35,-20,35,35,-26,-21,-24,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,28,30,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,59,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,102,103,107,108,109,113,114,115,116,119,120,121,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,24,24,-44,-45,-49,-48,-46,-51,24,24,24,-47,-50,-28,-29,-1,24,24,24,24,24,24,24,24,24,24,24,-49,24,85,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,24,24,24,-54,-30,24,-25,24,-27,-22,-15,-23,24,-20,24,24,-26,-21,-24,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,25,27,28,30,35,36,40,41,42,55,58,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,96,99,101,103,104,107,108,109,113,114,115,119,120,121,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,37,37,-46,-51,-47,-50,-28,-29,-1,-49,37,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,37,37,37,-54,-30,37,37,-25,-27,37,-22,-15,-23,37,-20,37,-26,-21,-24,]),'FLT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,25,27,28,30,35,36,40,41,42,55,58,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,96,99,101,103,104,107,108,109,113,114,115,119,120,121,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,38,38,-46,-51,-47,-50,-28,-29,-1,-49,38,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,38,38,38,-54,-30,38,38,-25,-27,38,-22,-15,-23,38,-20,38,-26,-21,-24,]),'STR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,25,27,28,30,35,36,40,41,42,55,58,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,96,99,101,103,104,107,108,109,113,114,115,119,120,121,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,39,39,-46,-51,-47,-50,-28,-29,-1,-49,39,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,39,39,39,-54,-30,39,39,-25,-27,39,-22,-15,-23,39,-20,39,-26,-21,-24,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,28,30,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,102,103,107,108,109,113,114,115,116,119,120,121,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,40,40,-44,-45,-49,-48,-46,-51,40,40,40,-47,-50,-28,-29,-1,40,40,40,40,40,40,40,40,40,40,40,-49,40,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,40,40,40,-54,-30,40,-25,40,-27,-22,-15,-23,40,-20,40,40,-26,-21,-24,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,28,30,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,90,92,93,95,99,101,102,103,107,108,109,113,114,115,116,119,120,121,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,41,41,-44,-45,-49,-48,-46,-51,41,41,41,-47,-50,-28,-29,-1,41,41,41,41,41,41,41,41,41,41,41,-49,41,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,41,41,41,-54,-30,41,-25,41,-27,-22,-15,-23,41,-20,41,41,-26,-21,-24,]),'CLOSECLASS':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,88,92,93,95,98,99,101,103,107,108,109,114,119,120,121,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,-61,-61,-54,-30,107,-61,-25,-27,-22,-15,-23,-20,-26,-21,-24,]),'ENDIF':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,90,92,93,95,99,100,101,103,107,108,109,114,115,118,119,120,121,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,-61,-61,-54,-30,-61,109,-25,-27,-22,-15,-23,-20,-61,121,-26,-21,-24,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,90,92,93,95,99,100,101,103,107,108,109,114,119,120,121,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,-61,-61,-54,-30,-61,110,-25,-27,-22,-15,-23,-20,-26,-21,-24,]),'CLOSEFUNC':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,24,28,30,35,36,40,41,42,55,61,68,69,70,71,72,73,74,75,76,77,78,79,80,81,92,93,95,99,101,103,107,108,109,113,114,117,119,120,121,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-17,-18,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,-1,-49,-19,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-53,-61,-54,-30,-61,-25,-27,-22,-15,-23,-61,-20,120,-26,-21,-24,]),'GREATERTHAN':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[43,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,43,-49,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-42,-43,43,43,43,]),'LESSTHAN':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[44,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,44,-49,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-42,-43,44,44,44,]),'GREATEREQUAL':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[45,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,45,-49,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-42,-43,45,45,45,]),'LESSEQUAL':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[46,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,46,-49,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-42,-43,46,46,46,]),'EQUALEQUAL':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[47,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,47,-49,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-42,-43,47,47,47,]),'NOTEQUAL':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[48,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,48,-49,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-42,-43,48,48,48,]),'PLUS':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[49,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,49,-49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-42,-43,49,49,49,]),'MINUS':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[50,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,50,-49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-42,-43,50,50,50,]),'TIMES':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[51,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,51,-49,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-42,-43,51,51,51,]),'DIVIDE':([5,17,20,21,22,24,28,30,35,36,40,41,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,111,119,],[52,-52,-44,-45,-49,-48,-46,-51,-47,-50,-28,-29,52,-49,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-42,-43,52,52,52,]),'RPAREN':([17,20,21,24,28,30,35,36,40,41,54,55,58,64,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,85,94,96,104,105,112,],[-52,-44,-45,-48,-46,-51,-47,-50,-28,-29,79,-49,-61,89,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,93,-57,95,-56,-61,-61,113,-55,]),'RSQUAREDBRACKET':([17,20,21,24,28,30,35,36,40,41,55,56,68,69,70,71,72,73,74,75,76,77,78,79,80,106,],[-52,-44,-45,-48,-46,-51,-47,-50,-28,-29,-49,80,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,114,]),'IN':([17,20,21,24,28,30,35,36,40,41,55,66,68,69,70,71,72,73,74,75,76,77,78,79,80,],[-52,-44,-45,-48,-46,-51,-47,-50,-28,-29,-49,91,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,]),'COMMA':([17,20,21,24,28,30,35,36,40,41,55,68,69,70,71,72,73,74,75,76,77,78,79,80,94,111,],[-52,-44,-45,-48,-46,-51,-47,-50,-28,-29,-49,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,104,116,]),'RANGE':([91,],[102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,2,88,90,92,99,113,115,],[1,42,98,100,103,108,117,118,]),'statement':([0,2,88,90,92,99,113,115,],[2,2,2,2,2,2,2,2,]),'empty':([0,2,58,88,90,92,96,99,104,113,115,],[3,3,84,3,3,3,84,3,84,3,3,]),'conditional':([0,2,88,90,92,99,113,115,],[4,4,4,4,4,4,4,4,]),'expression':([0,2,18,19,32,33,34,43,44,45,46,47,48,49,50,51,52,53,57,88,90,92,99,102,113,115,116,],[5,5,54,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,5,5,5,5,111,5,5,119,]),'assignment_statement':([0,2,88,90,92,99,113,115,],[6,6,6,6,6,6,6,6,]),'function_call':([0,2,88,90,92,99,113,115,],[7,7,7,7,7,7,7,7,]),'print_statement':([0,2,88,90,92,99,113,115,],[8,8,8,8,8,8,8,8,]),'function_declaration':([0,2,88,90,92,99,113,115,],[9,9,9,9,9,9,9,9,]),'variable_declaration':([0,2,88,90,92,99,113,115,],[10,10,10,10,10,10,10,10,]),'array_declaration':([0,2,88,90,92,99,113,115,],[11,11,11,11,11,11,11,11,]),'class_declaration':([0,2,88,90,92,99,113,115,],[12,12,12,12,12,12,12,12,]),'main_function':([0,2,88,90,92,99,113,115,],[13,13,13,13,13,13,13,13,]),'inline_if_statement':([0,2,88,90,92,99,113,115,],[14,14,14,14,14,14,14,14,]),'for_statement':([0,2,88,90,92,99,113,115,],[15,15,15,15,15,15,15,15,]),'while_statement':([0,2,88,90,92,99,113,115,],[16,16,16,16,16,16,16,16,]),'token':([0,2,18,19,32,33,34,43,44,45,46,47,48,49,50,51,52,53,57,88,90,92,99,102,113,115,116,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'data':([0,2,18,19,32,33,34,43,44,45,46,47,48,49,50,51,52,53,57,88,90,92,99,102,113,115,116,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'type':([0,2,25,27,58,88,90,92,96,99,104,113,115,],[26,26,60,62,83,26,26,26,83,26,83,26,26,]),'bool':([0,2,18,19,32,33,34,43,44,45,46,47,48,49,50,51,52,53,57,88,90,92,99,102,113,115,116,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'argument_list':([58,96,104,],[82,105,112,]),'range_expression':([91,],[101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement statements','statements',2,'p_statements','newParser.py',12),
  ('statements -> statement','statements',1,'p_statements','newParser.py',13),
  ('statements -> empty','statements',1,'p_statements','newParser.py',14),
  ('statement -> conditional','statement',1,'p_statement','newParser.py',26),
  ('statement -> expression','statement',1,'p_statement','newParser.py',27),
  ('statement -> assignment_statement','statement',1,'p_statement','newParser.py',28),
  ('statement -> function_call','statement',1,'p_statement','newParser.py',29),
  ('statement -> print_statement','statement',1,'p_statement','newParser.py',30),
  ('statement -> function_declaration','statement',1,'p_statement','newParser.py',31),
  ('statement -> variable_declaration','statement',1,'p_statement','newParser.py',32),
  ('statement -> array_declaration','statement',1,'p_statement','newParser.py',33),
  ('statement -> class_declaration','statement',1,'p_statement','newParser.py',34),
  ('statement -> main_function','statement',1,'p_statement','newParser.py',35),
  ('statement -> empty','statement',1,'p_statement','newParser.py',36),
  ('main_function -> MAIN LPAREN RPAREN COLON statements','main_function',5,'p_main_function','newParser.py',43),
  ('conditional -> inline_if_statement','conditional',1,'p_conditional','newParser.py',50),
  ('conditional -> for_statement','conditional',1,'p_conditional','newParser.py',51),
  ('conditional -> while_statement','conditional',1,'p_conditional','newParser.py',52),
  ('variable_declaration -> type IDENTIFIER','variable_declaration',2,'p_variable_declaration','newParser.py',60),
  ('array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET','array_declaration',6,'p_array_declaration','newParser.py',68),
  ('function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN statements CLOSEFUNC','function_declaration',8,'p_function_declaration','newParser.py',76),
  ('class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS','class_declaration',5,'p_class_declaration','newParser.py',84),
  ('inline_if_statement -> IF expression COLON statements ENDIF','inline_if_statement',5,'p_inline_if_statement','newParser.py',91),
  ('inline_if_statement -> IF expression COLON statements ELSE COLON statements ENDIF','inline_if_statement',8,'p_inline_if_statement','newParser.py',92),
  ('for_statement -> FOR expression IN range_expression','for_statement',4,'p_for_statement','newParser.py',102),
  ('range_expression -> RANGE expression COMMA expression','range_expression',4,'p_range_expression','newParser.py',109),
  ('while_statement -> WHILE expression COLON statements','while_statement',4,'p_while_statement','newParser.py',116),
  ('bool -> TRUE','bool',1,'p_bool','newParser.py',123),
  ('bool -> FALSE','bool',1,'p_bool','newParser.py',124),
  ('print_statement -> PRINT LPAREN STRING RPAREN','print_statement',4,'p_print_statement','newParser.py',131),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression','newParser.py',138),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','newParser.py',139),
  ('expression -> expression GREATEREQUAL expression','expression',3,'p_expression','newParser.py',140),
  ('expression -> expression LESSEQUAL expression','expression',3,'p_expression','newParser.py',141),
  ('expression -> expression EQUALEQUAL expression','expression',3,'p_expression','newParser.py',142),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression','newParser.py',143),
  ('expression -> expression PLUS expression','expression',3,'p_expression','newParser.py',144),
  ('expression -> expression MINUS expression','expression',3,'p_expression','newParser.py',145),
  ('expression -> expression TIMES expression','expression',3,'p_expression','newParser.py',146),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','newParser.py',147),
  ('expression -> expression EQUAL expression','expression',3,'p_expression','newParser.py',148),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','newParser.py',149),
  ('expression -> LSQUAREDBRACKET expression RSQUAREDBRACKET','expression',3,'p_expression','newParser.py',150),
  ('expression -> token','expression',1,'p_expression','newParser.py',151),
  ('expression -> data','expression',1,'p_expression','newParser.py',152),
  ('data -> INTEGER','data',1,'p_data','newParser.py',175),
  ('data -> FLOAT','data',1,'p_data','newParser.py',176),
  ('data -> STRING','data',1,'p_data','newParser.py',177),
  ('data -> IDENTIFIER','data',1,'p_data','newParser.py',178),
  ('data -> bool','data',1,'p_data','newParser.py',179),
  ('token -> COLON','token',1,'p_tokens','newParser.py',186),
  ('token -> EQUAL','token',1,'p_tokens','newParser.py',187),
  ('assignment_statement -> IDENTIFIER EQUAL expression','assignment_statement',3,'p_assignment_statement','newParser.py',193),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','newParser.py',198),
  ('argument_list -> type IDENTIFIER COMMA argument_list','argument_list',4,'p_argument_list','newParser.py',203),
  ('argument_list -> type IDENTIFIER','argument_list',2,'p_argument_list','newParser.py',204),
  ('argument_list -> empty','argument_list',1,'p_argument_list','newParser.py',205),
  ('type -> INT','type',1,'p_type','newParser.py',216),
  ('type -> FLT','type',1,'p_type','newParser.py',217),
  ('type -> STR','type',1,'p_type','newParser.py',218),
  ('empty -> <empty>','empty',0,'p_empty','newParser.py',225),
]

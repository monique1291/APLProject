import ply.lex as lex
import ply.yacc as yacc
#from parser import parser
import tokens
import parser
import sys


# Define a function for handling errors during parsing
def handle_parse_error(message):
    print(f"Parse Error: {message}")
    sys.exit(1)


try:
    # Open the file in read mode
    with open('example.txt', 'r') as file:
        # Read the contents of the file and store them in a variable
        file_contents = file.read()
except FileNotFoundError:
    print("File 'example.txt' not found.")
    sys.exit(1)
except IOError as e:
    print(f"Error reading file: {e}")
    sys.exit(1)

lexer = lex.lex(module=tokens)
lexer.input(file_contents)
parsed_tokens = []

# Iterate over tokens generated by the lexer
for tok in lexer:
    print(tok)
    parsed_tokens.append(str(tok.value))

# Join the parsed tokens into a string for parsing
input_string = ' '.join(parsed_tokens)

print(input_string)

parse = yacc.yacc(module=parser)
# Parse the input string
try:
    parse.parse(input_string)
except SyntaxError as e:
    handle_parse_error(e)

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BOOL
    BREAK
    Bool
    CASE
    CLASS
    COMMENTS
    DEF
    DO
    DOUBLE
    DOUBLEQUOTES
    Double
    ELIF
    FINALLY
    FUNC
    Float
    GLOBAL
    IMPORT
    INT
    IS
    LCURVEDBRACE
    LSQUAREDBRACKET
    MAIN
    NOT
    OR
    RCURVEDBRACE
    RESERVEDWORD
    RETURN
    RSQUAREDBRACKET
    RULE_CLOSE
    RULE_OPEN
    SINGLEQUOTES
    SWITCH
    Str
    THEN
    UNTIL

Grammar

Rule 0     S' -> newCode
Rule 1     newCode -> statements
Rule 2     statements -> statement statements
Rule 3     statements -> statement
Rule 4     statements -> empty
Rule 5     statement -> conditional
Rule 6     statement -> assignment_statement
Rule 7     statement -> function_call
Rule 8     statement -> print_statement
Rule 9     statement -> declaration
Rule 10    statement -> empty
Rule 11    conditional -> inline_if_statement
Rule 12    conditional -> block_if_else_statement
Rule 13    conditional -> for_statement
Rule 14    conditional -> while_statement
Rule 15    inline_if_statement -> IF expression COLON statements
Rule 16    block_if_else_statement -> IF expression COLON statements block_else_statement
Rule 17    block_else_statement -> ELSE statements
Rule 18    for_statement -> FOR expression IN range_expression
Rule 19    range_expression -> RANGE expression COMMA expression
Rule 20    while_statement -> WHILE expression COLON statements
Rule 21    bool -> TRUE
Rule 22    bool -> FALSE
Rule 23    print_statement -> PRINT LPAREN expression RPAREN
Rule 24    declaration -> var_declaration
Rule 25    declaration -> function_declaration
Rule 26    var_declaration -> STANDARD_DATATYPE IDENTIFIER
Rule 27    var_declaration -> STANDARD_DATATYPE assignment_statement
Rule 28    function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON
Rule 29    function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON
Rule 30    expression -> term
Rule 31    expression -> expression PLUS term
Rule 32    expression -> expression MINUS term
Rule 33    expression -> expression TIMES term
Rule 34    expression -> expression DIVIDE term
Rule 35    expression -> expression EQUALEQUAL term
Rule 36    expression -> expression EQUAL term
Rule 37    expression -> expression NOTEQUAL term
Rule 38    expression -> expression LESSEQUAL term
Rule 39    expression -> expression GREATEREQUAL term
Rule 40    expression -> expression PLUSEQUAL term
Rule 41    expression -> expression MINUSEQUAL term
Rule 42    expression -> expression TIMESEQUAL term
Rule 43    expression -> expression DIVIDEEQUAL term
Rule 44    expression -> expression GREATERTHAN term
Rule 45    expression -> expression LESSTHAN term
Rule 46    expression -> LPAREN expression RPAREN
Rule 47    term -> INTEGER
Rule 48    term -> FLOAT
Rule 49    term -> STRING
Rule 50    term -> IDENTIFIER
Rule 51    term -> bool
Rule 52    assignment_statement -> IDENTIFIER EQUAL expression
Rule 53    function_call -> IDENTIFIER LPAREN argument_list RPAREN
Rule 54    argument_list -> expression
Rule 55    argument_list -> argument_list COMMA expression
Rule 56    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BOOL                 : 
BREAK                : 
Bool                 : 
CASE                 : 
CLASS                : 
COLON                : 15 16 20 28 29
COMMA                : 19 55
COMMENTS             : 
DEF                  : 
DIVIDE               : 34
DIVIDEEQUAL          : 43
DO                   : 
DOUBLE               : 
DOUBLEQUOTES         : 
Double               : 
ELIF                 : 
ELSE                 : 17
EQUAL                : 36 52
EQUALEQUAL           : 35
FALSE                : 22
FINALLY              : 
FLOAT                : 48
FOR                  : 18
FUNC                 : 
Float                : 
GLOBAL               : 
GREATEREQUAL         : 39
GREATERTHAN          : 44
IDENTIFIER           : 26 28 29 50 52 53
IF                   : 15 16
IMPORT               : 
IN                   : 18
INT                  : 
INTEGER              : 47
IS                   : 
LCURVEDBRACE         : 
LESSEQUAL            : 38
LESSTHAN             : 45
LPAREN               : 23 28 29 46 53
LSQUAREDBRACKET      : 
MAIN                 : 
MINUS                : 32
MINUSEQUAL           : 41
NOT                  : 
NOTEQUAL             : 37
OR                   : 
PLUS                 : 31
PLUSEQUAL            : 40
PRINT                : 23
RANGE                : 19
RCURVEDBRACE         : 
RESERVEDWORD         : 
RETURN               : 
RPAREN               : 23 28 29 46 53
RSQUAREDBRACKET      : 
RULE_CLOSE           : 
RULE_OPEN            : 
SINGLEQUOTES         : 
STANDARD_DATATYPE    : 26 27 29
STRING               : 49
SWITCH               : 
Str                  : 
THEN                 : 
TIMES                : 33
TIMESEQUAL           : 42
TRUE                 : 21
UNTIL                : 
VOID                 : 28
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

argument_list        : 28 29 53 55
assignment_statement : 6 27
block_else_statement : 16
block_if_else_statement : 12
bool                 : 51
conditional          : 5
declaration          : 9
empty                : 4 10
expression           : 15 16 18 19 19 20 23 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 52 54 55
for_statement        : 13
function_call        : 7
function_declaration : 25
inline_if_statement  : 11
newCode              : 0
print_statement      : 8
range_expression     : 18
statement            : 2 3
statements           : 1 2 15 16 17 20
term                 : 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
var_declaration      : 24
while_statement      : 14

Parsing method: LALR

state 0

    (0) S' -> . newCode
    (1) newCode -> . statements
    (2) statements -> . statement statements
    (3) statements -> . statement
    (4) statements -> . empty
    (5) statement -> . conditional
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . declaration
    (10) statement -> . empty
    (56) empty -> .
    (11) conditional -> . inline_if_statement
    (12) conditional -> . block_if_else_statement
    (13) conditional -> . for_statement
    (14) conditional -> . while_statement
    (52) assignment_statement -> . IDENTIFIER EQUAL expression
    (53) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (23) print_statement -> . PRINT LPAREN expression RPAREN
    (24) declaration -> . var_declaration
    (25) declaration -> . function_declaration
    (15) inline_if_statement -> . IF expression COLON statements
    (16) block_if_else_statement -> . IF expression COLON statements block_else_statement
    (18) for_statement -> . FOR expression IN range_expression
    (20) while_statement -> . WHILE expression COLON statements
    (26) var_declaration -> . STANDARD_DATATYPE IDENTIFIER
    (27) var_declaration -> . STANDARD_DATATYPE assignment_statement
    (28) function_declaration -> . VOID IDENTIFIER LPAREN argument_list RPAREN COLON
    (29) function_declaration -> . STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STANDARD_DATATYPE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    $end            reduce using rule 56 (empty -> .)
    IDENTIFIER      shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 18
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    STANDARD_DATATYPE shift and go to state 21
    VOID            shift and go to state 22

  ! IDENTIFIER      [ reduce using rule 56 (empty -> .) ]
  ! PRINT           [ reduce using rule 56 (empty -> .) ]
  ! IF              [ reduce using rule 56 (empty -> .) ]
  ! FOR             [ reduce using rule 56 (empty -> .) ]
  ! WHILE           [ reduce using rule 56 (empty -> .) ]
  ! STANDARD_DATATYPE [ reduce using rule 56 (empty -> .) ]
  ! VOID            [ reduce using rule 56 (empty -> .) ]

    newCode                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    declaration                    shift and go to state 9
    inline_if_statement            shift and go to state 10
    block_if_else_statement        shift and go to state 11
    for_statement                  shift and go to state 12
    while_statement                shift and go to state 13
    var_declaration                shift and go to state 16
    function_declaration           shift and go to state 17

state 1

    (0) S' -> newCode .



state 2

    (1) newCode -> statements .

    $end            reduce using rule 1 (newCode -> statements .)


state 3

    (2) statements -> statement . statements
    (3) statements -> statement .
    (2) statements -> . statement statements
    (3) statements -> . statement
    (4) statements -> . empty
    (5) statement -> . conditional
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . declaration
    (10) statement -> . empty
    (56) empty -> .
    (11) conditional -> . inline_if_statement
    (12) conditional -> . block_if_else_statement
    (13) conditional -> . for_statement
    (14) conditional -> . while_statement
    (52) assignment_statement -> . IDENTIFIER EQUAL expression
    (53) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (23) print_statement -> . PRINT LPAREN expression RPAREN
    (24) declaration -> . var_declaration
    (25) declaration -> . function_declaration
    (15) inline_if_statement -> . IF expression COLON statements
    (16) block_if_else_statement -> . IF expression COLON statements block_else_statement
    (18) for_statement -> . FOR expression IN range_expression
    (20) while_statement -> . WHILE expression COLON statements
    (26) var_declaration -> . STANDARD_DATATYPE IDENTIFIER
    (27) var_declaration -> . STANDARD_DATATYPE assignment_statement
    (28) function_declaration -> . VOID IDENTIFIER LPAREN argument_list RPAREN COLON
    (29) function_declaration -> . STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON

  ! reduce/reduce conflict for $end resolved using rule 3 (statements -> statement .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (statements -> statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (statements -> statement .)
  ! reduce/reduce conflict for PRINT resolved using rule 3 (statements -> statement .)
  ! reduce/reduce conflict for IF resolved using rule 3 (statements -> statement .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (statements -> statement .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (statements -> statement .)
  ! reduce/reduce conflict for STANDARD_DATATYPE resolved using rule 3 (statements -> statement .)
  ! reduce/reduce conflict for VOID resolved using rule 3 (statements -> statement .)
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STANDARD_DATATYPE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    $end            reduce using rule 3 (statements -> statement .)
    ELSE            reduce using rule 3 (statements -> statement .)
    IDENTIFIER      shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 18
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    STANDARD_DATATYPE shift and go to state 21
    VOID            shift and go to state 22

  ! IDENTIFIER      [ reduce using rule 3 (statements -> statement .) ]
  ! PRINT           [ reduce using rule 3 (statements -> statement .) ]
  ! IF              [ reduce using rule 3 (statements -> statement .) ]
  ! FOR             [ reduce using rule 3 (statements -> statement .) ]
  ! WHILE           [ reduce using rule 3 (statements -> statement .) ]
  ! STANDARD_DATATYPE [ reduce using rule 3 (statements -> statement .) ]
  ! VOID            [ reduce using rule 3 (statements -> statement .) ]
  ! $end            [ reduce using rule 56 (empty -> .) ]
  ! ELSE            [ reduce using rule 56 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 56 (empty -> .) ]
  ! PRINT           [ reduce using rule 56 (empty -> .) ]
  ! IF              [ reduce using rule 56 (empty -> .) ]
  ! FOR             [ reduce using rule 56 (empty -> .) ]
  ! WHILE           [ reduce using rule 56 (empty -> .) ]
  ! STANDARD_DATATYPE [ reduce using rule 56 (empty -> .) ]
  ! VOID            [ reduce using rule 56 (empty -> .) ]

    statement                      shift and go to state 3
    statements                     shift and go to state 23
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    declaration                    shift and go to state 9
    inline_if_statement            shift and go to state 10
    block_if_else_statement        shift and go to state 11
    for_statement                  shift and go to state 12
    while_statement                shift and go to state 13
    var_declaration                shift and go to state 16
    function_declaration           shift and go to state 17

state 4

    (4) statements -> empty .
    (10) statement -> empty .

  ! reduce/reduce conflict for IDENTIFIER resolved using rule 4 (statements -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 4 (statements -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 4 (statements -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 4 (statements -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 4 (statements -> empty .)
  ! reduce/reduce conflict for STANDARD_DATATYPE resolved using rule 4 (statements -> empty .)
  ! reduce/reduce conflict for VOID resolved using rule 4 (statements -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 4 (statements -> empty .)
  ! reduce/reduce conflict for ELSE resolved using rule 4 (statements -> empty .)
    $end            reduce using rule 4 (statements -> empty .)
    ELSE            reduce using rule 4 (statements -> empty .)
    IDENTIFIER      reduce using rule 4 (statements -> empty .)
    PRINT           reduce using rule 4 (statements -> empty .)
    IF              reduce using rule 4 (statements -> empty .)
    FOR             reduce using rule 4 (statements -> empty .)
    WHILE           reduce using rule 4 (statements -> empty .)
    STANDARD_DATATYPE reduce using rule 4 (statements -> empty .)
    VOID            reduce using rule 4 (statements -> empty .)

  ! IDENTIFIER      [ reduce using rule 10 (statement -> empty .) ]
  ! PRINT           [ reduce using rule 10 (statement -> empty .) ]
  ! IF              [ reduce using rule 10 (statement -> empty .) ]
  ! FOR             [ reduce using rule 10 (statement -> empty .) ]
  ! WHILE           [ reduce using rule 10 (statement -> empty .) ]
  ! STANDARD_DATATYPE [ reduce using rule 10 (statement -> empty .) ]
  ! VOID            [ reduce using rule 10 (statement -> empty .) ]
  ! $end            [ reduce using rule 10 (statement -> empty .) ]
  ! ELSE            [ reduce using rule 10 (statement -> empty .) ]


state 5

    (5) statement -> conditional .

    IDENTIFIER      reduce using rule 5 (statement -> conditional .)
    PRINT           reduce using rule 5 (statement -> conditional .)
    IF              reduce using rule 5 (statement -> conditional .)
    FOR             reduce using rule 5 (statement -> conditional .)
    WHILE           reduce using rule 5 (statement -> conditional .)
    STANDARD_DATATYPE reduce using rule 5 (statement -> conditional .)
    VOID            reduce using rule 5 (statement -> conditional .)
    $end            reduce using rule 5 (statement -> conditional .)
    ELSE            reduce using rule 5 (statement -> conditional .)


state 6

    (6) statement -> assignment_statement .

    IDENTIFIER      reduce using rule 6 (statement -> assignment_statement .)
    PRINT           reduce using rule 6 (statement -> assignment_statement .)
    IF              reduce using rule 6 (statement -> assignment_statement .)
    FOR             reduce using rule 6 (statement -> assignment_statement .)
    WHILE           reduce using rule 6 (statement -> assignment_statement .)
    STANDARD_DATATYPE reduce using rule 6 (statement -> assignment_statement .)
    VOID            reduce using rule 6 (statement -> assignment_statement .)
    $end            reduce using rule 6 (statement -> assignment_statement .)
    ELSE            reduce using rule 6 (statement -> assignment_statement .)


state 7

    (7) statement -> function_call .

    IDENTIFIER      reduce using rule 7 (statement -> function_call .)
    PRINT           reduce using rule 7 (statement -> function_call .)
    IF              reduce using rule 7 (statement -> function_call .)
    FOR             reduce using rule 7 (statement -> function_call .)
    WHILE           reduce using rule 7 (statement -> function_call .)
    STANDARD_DATATYPE reduce using rule 7 (statement -> function_call .)
    VOID            reduce using rule 7 (statement -> function_call .)
    $end            reduce using rule 7 (statement -> function_call .)
    ELSE            reduce using rule 7 (statement -> function_call .)


state 8

    (8) statement -> print_statement .

    IDENTIFIER      reduce using rule 8 (statement -> print_statement .)
    PRINT           reduce using rule 8 (statement -> print_statement .)
    IF              reduce using rule 8 (statement -> print_statement .)
    FOR             reduce using rule 8 (statement -> print_statement .)
    WHILE           reduce using rule 8 (statement -> print_statement .)
    STANDARD_DATATYPE reduce using rule 8 (statement -> print_statement .)
    VOID            reduce using rule 8 (statement -> print_statement .)
    $end            reduce using rule 8 (statement -> print_statement .)
    ELSE            reduce using rule 8 (statement -> print_statement .)


state 9

    (9) statement -> declaration .

    IDENTIFIER      reduce using rule 9 (statement -> declaration .)
    PRINT           reduce using rule 9 (statement -> declaration .)
    IF              reduce using rule 9 (statement -> declaration .)
    FOR             reduce using rule 9 (statement -> declaration .)
    WHILE           reduce using rule 9 (statement -> declaration .)
    STANDARD_DATATYPE reduce using rule 9 (statement -> declaration .)
    VOID            reduce using rule 9 (statement -> declaration .)
    $end            reduce using rule 9 (statement -> declaration .)
    ELSE            reduce using rule 9 (statement -> declaration .)


state 10

    (11) conditional -> inline_if_statement .

    IDENTIFIER      reduce using rule 11 (conditional -> inline_if_statement .)
    PRINT           reduce using rule 11 (conditional -> inline_if_statement .)
    IF              reduce using rule 11 (conditional -> inline_if_statement .)
    FOR             reduce using rule 11 (conditional -> inline_if_statement .)
    WHILE           reduce using rule 11 (conditional -> inline_if_statement .)
    STANDARD_DATATYPE reduce using rule 11 (conditional -> inline_if_statement .)
    VOID            reduce using rule 11 (conditional -> inline_if_statement .)
    $end            reduce using rule 11 (conditional -> inline_if_statement .)
    ELSE            reduce using rule 11 (conditional -> inline_if_statement .)


state 11

    (12) conditional -> block_if_else_statement .

    IDENTIFIER      reduce using rule 12 (conditional -> block_if_else_statement .)
    PRINT           reduce using rule 12 (conditional -> block_if_else_statement .)
    IF              reduce using rule 12 (conditional -> block_if_else_statement .)
    FOR             reduce using rule 12 (conditional -> block_if_else_statement .)
    WHILE           reduce using rule 12 (conditional -> block_if_else_statement .)
    STANDARD_DATATYPE reduce using rule 12 (conditional -> block_if_else_statement .)
    VOID            reduce using rule 12 (conditional -> block_if_else_statement .)
    $end            reduce using rule 12 (conditional -> block_if_else_statement .)
    ELSE            reduce using rule 12 (conditional -> block_if_else_statement .)


state 12

    (13) conditional -> for_statement .

    IDENTIFIER      reduce using rule 13 (conditional -> for_statement .)
    PRINT           reduce using rule 13 (conditional -> for_statement .)
    IF              reduce using rule 13 (conditional -> for_statement .)
    FOR             reduce using rule 13 (conditional -> for_statement .)
    WHILE           reduce using rule 13 (conditional -> for_statement .)
    STANDARD_DATATYPE reduce using rule 13 (conditional -> for_statement .)
    VOID            reduce using rule 13 (conditional -> for_statement .)
    $end            reduce using rule 13 (conditional -> for_statement .)
    ELSE            reduce using rule 13 (conditional -> for_statement .)


state 13

    (14) conditional -> while_statement .

    IDENTIFIER      reduce using rule 14 (conditional -> while_statement .)
    PRINT           reduce using rule 14 (conditional -> while_statement .)
    IF              reduce using rule 14 (conditional -> while_statement .)
    FOR             reduce using rule 14 (conditional -> while_statement .)
    WHILE           reduce using rule 14 (conditional -> while_statement .)
    STANDARD_DATATYPE reduce using rule 14 (conditional -> while_statement .)
    VOID            reduce using rule 14 (conditional -> while_statement .)
    $end            reduce using rule 14 (conditional -> while_statement .)
    ELSE            reduce using rule 14 (conditional -> while_statement .)


state 14

    (52) assignment_statement -> IDENTIFIER . EQUAL expression
    (53) function_call -> IDENTIFIER . LPAREN argument_list RPAREN

    EQUAL           shift and go to state 24
    LPAREN          shift and go to state 25


state 15

    (23) print_statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 26


state 16

    (24) declaration -> var_declaration .

    IDENTIFIER      reduce using rule 24 (declaration -> var_declaration .)
    PRINT           reduce using rule 24 (declaration -> var_declaration .)
    IF              reduce using rule 24 (declaration -> var_declaration .)
    FOR             reduce using rule 24 (declaration -> var_declaration .)
    WHILE           reduce using rule 24 (declaration -> var_declaration .)
    STANDARD_DATATYPE reduce using rule 24 (declaration -> var_declaration .)
    VOID            reduce using rule 24 (declaration -> var_declaration .)
    $end            reduce using rule 24 (declaration -> var_declaration .)
    ELSE            reduce using rule 24 (declaration -> var_declaration .)


state 17

    (25) declaration -> function_declaration .

    IDENTIFIER      reduce using rule 25 (declaration -> function_declaration .)
    PRINT           reduce using rule 25 (declaration -> function_declaration .)
    IF              reduce using rule 25 (declaration -> function_declaration .)
    FOR             reduce using rule 25 (declaration -> function_declaration .)
    WHILE           reduce using rule 25 (declaration -> function_declaration .)
    STANDARD_DATATYPE reduce using rule 25 (declaration -> function_declaration .)
    VOID            reduce using rule 25 (declaration -> function_declaration .)
    $end            reduce using rule 25 (declaration -> function_declaration .)
    ELSE            reduce using rule 25 (declaration -> function_declaration .)


state 18

    (15) inline_if_statement -> IF . expression COLON statements
    (16) block_if_else_statement -> IF . expression COLON statements block_else_statement
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 27
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 19

    (18) for_statement -> FOR . expression IN range_expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 37
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 20

    (20) while_statement -> WHILE . expression COLON statements
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 38
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 21

    (26) var_declaration -> STANDARD_DATATYPE . IDENTIFIER
    (27) var_declaration -> STANDARD_DATATYPE . assignment_statement
    (29) function_declaration -> STANDARD_DATATYPE . IDENTIFIER LPAREN argument_list RPAREN COLON
    (52) assignment_statement -> . IDENTIFIER EQUAL expression

    IDENTIFIER      shift and go to state 39

    assignment_statement           shift and go to state 40

state 22

    (28) function_declaration -> VOID . IDENTIFIER LPAREN argument_list RPAREN COLON

    IDENTIFIER      shift and go to state 41


state 23

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)
    ELSE            reduce using rule 2 (statements -> statement statements .)
    IDENTIFIER      reduce using rule 2 (statements -> statement statements .)
    PRINT           reduce using rule 2 (statements -> statement statements .)
    IF              reduce using rule 2 (statements -> statement statements .)
    FOR             reduce using rule 2 (statements -> statement statements .)
    WHILE           reduce using rule 2 (statements -> statement statements .)
    STANDARD_DATATYPE reduce using rule 2 (statements -> statement statements .)
    VOID            reduce using rule 2 (statements -> statement statements .)


state 24

    (52) assignment_statement -> IDENTIFIER EQUAL . expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 42
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 25

    (53) function_call -> IDENTIFIER LPAREN . argument_list RPAREN
    (54) argument_list -> . expression
    (55) argument_list -> . argument_list COMMA expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    argument_list                  shift and go to state 43
    expression                     shift and go to state 44
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 26

    (23) print_statement -> PRINT LPAREN . expression RPAREN
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 45
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 27

    (15) inline_if_statement -> IF expression . COLON statements
    (16) block_if_else_statement -> IF expression . COLON statements block_else_statement
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    COLON           shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 28

    (30) expression -> term .

    COLON           reduce using rule 30 (expression -> term .)
    PLUS            reduce using rule 30 (expression -> term .)
    MINUS           reduce using rule 30 (expression -> term .)
    TIMES           reduce using rule 30 (expression -> term .)
    DIVIDE          reduce using rule 30 (expression -> term .)
    EQUALEQUAL      reduce using rule 30 (expression -> term .)
    EQUAL           reduce using rule 30 (expression -> term .)
    NOTEQUAL        reduce using rule 30 (expression -> term .)
    LESSEQUAL       reduce using rule 30 (expression -> term .)
    GREATEREQUAL    reduce using rule 30 (expression -> term .)
    PLUSEQUAL       reduce using rule 30 (expression -> term .)
    MINUSEQUAL      reduce using rule 30 (expression -> term .)
    TIMESEQUAL      reduce using rule 30 (expression -> term .)
    DIVIDEEQUAL     reduce using rule 30 (expression -> term .)
    GREATERTHAN     reduce using rule 30 (expression -> term .)
    LESSTHAN        reduce using rule 30 (expression -> term .)
    IN              reduce using rule 30 (expression -> term .)
    IDENTIFIER      reduce using rule 30 (expression -> term .)
    PRINT           reduce using rule 30 (expression -> term .)
    IF              reduce using rule 30 (expression -> term .)
    FOR             reduce using rule 30 (expression -> term .)
    WHILE           reduce using rule 30 (expression -> term .)
    STANDARD_DATATYPE reduce using rule 30 (expression -> term .)
    VOID            reduce using rule 30 (expression -> term .)
    $end            reduce using rule 30 (expression -> term .)
    ELSE            reduce using rule 30 (expression -> term .)
    RPAREN          reduce using rule 30 (expression -> term .)
    COMMA           reduce using rule 30 (expression -> term .)


state 29

    (46) expression -> LPAREN . expression RPAREN
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 62
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 30

    (47) term -> INTEGER .

    COLON           reduce using rule 47 (term -> INTEGER .)
    PLUS            reduce using rule 47 (term -> INTEGER .)
    MINUS           reduce using rule 47 (term -> INTEGER .)
    TIMES           reduce using rule 47 (term -> INTEGER .)
    DIVIDE          reduce using rule 47 (term -> INTEGER .)
    EQUALEQUAL      reduce using rule 47 (term -> INTEGER .)
    EQUAL           reduce using rule 47 (term -> INTEGER .)
    NOTEQUAL        reduce using rule 47 (term -> INTEGER .)
    LESSEQUAL       reduce using rule 47 (term -> INTEGER .)
    GREATEREQUAL    reduce using rule 47 (term -> INTEGER .)
    PLUSEQUAL       reduce using rule 47 (term -> INTEGER .)
    MINUSEQUAL      reduce using rule 47 (term -> INTEGER .)
    TIMESEQUAL      reduce using rule 47 (term -> INTEGER .)
    DIVIDEEQUAL     reduce using rule 47 (term -> INTEGER .)
    GREATERTHAN     reduce using rule 47 (term -> INTEGER .)
    LESSTHAN        reduce using rule 47 (term -> INTEGER .)
    IN              reduce using rule 47 (term -> INTEGER .)
    IDENTIFIER      reduce using rule 47 (term -> INTEGER .)
    PRINT           reduce using rule 47 (term -> INTEGER .)
    IF              reduce using rule 47 (term -> INTEGER .)
    FOR             reduce using rule 47 (term -> INTEGER .)
    WHILE           reduce using rule 47 (term -> INTEGER .)
    STANDARD_DATATYPE reduce using rule 47 (term -> INTEGER .)
    VOID            reduce using rule 47 (term -> INTEGER .)
    $end            reduce using rule 47 (term -> INTEGER .)
    ELSE            reduce using rule 47 (term -> INTEGER .)
    RPAREN          reduce using rule 47 (term -> INTEGER .)
    COMMA           reduce using rule 47 (term -> INTEGER .)


state 31

    (48) term -> FLOAT .

    COLON           reduce using rule 48 (term -> FLOAT .)
    PLUS            reduce using rule 48 (term -> FLOAT .)
    MINUS           reduce using rule 48 (term -> FLOAT .)
    TIMES           reduce using rule 48 (term -> FLOAT .)
    DIVIDE          reduce using rule 48 (term -> FLOAT .)
    EQUALEQUAL      reduce using rule 48 (term -> FLOAT .)
    EQUAL           reduce using rule 48 (term -> FLOAT .)
    NOTEQUAL        reduce using rule 48 (term -> FLOAT .)
    LESSEQUAL       reduce using rule 48 (term -> FLOAT .)
    GREATEREQUAL    reduce using rule 48 (term -> FLOAT .)
    PLUSEQUAL       reduce using rule 48 (term -> FLOAT .)
    MINUSEQUAL      reduce using rule 48 (term -> FLOAT .)
    TIMESEQUAL      reduce using rule 48 (term -> FLOAT .)
    DIVIDEEQUAL     reduce using rule 48 (term -> FLOAT .)
    GREATERTHAN     reduce using rule 48 (term -> FLOAT .)
    LESSTHAN        reduce using rule 48 (term -> FLOAT .)
    IN              reduce using rule 48 (term -> FLOAT .)
    IDENTIFIER      reduce using rule 48 (term -> FLOAT .)
    PRINT           reduce using rule 48 (term -> FLOAT .)
    IF              reduce using rule 48 (term -> FLOAT .)
    FOR             reduce using rule 48 (term -> FLOAT .)
    WHILE           reduce using rule 48 (term -> FLOAT .)
    STANDARD_DATATYPE reduce using rule 48 (term -> FLOAT .)
    VOID            reduce using rule 48 (term -> FLOAT .)
    $end            reduce using rule 48 (term -> FLOAT .)
    ELSE            reduce using rule 48 (term -> FLOAT .)
    RPAREN          reduce using rule 48 (term -> FLOAT .)
    COMMA           reduce using rule 48 (term -> FLOAT .)


state 32

    (49) term -> STRING .

    COLON           reduce using rule 49 (term -> STRING .)
    PLUS            reduce using rule 49 (term -> STRING .)
    MINUS           reduce using rule 49 (term -> STRING .)
    TIMES           reduce using rule 49 (term -> STRING .)
    DIVIDE          reduce using rule 49 (term -> STRING .)
    EQUALEQUAL      reduce using rule 49 (term -> STRING .)
    EQUAL           reduce using rule 49 (term -> STRING .)
    NOTEQUAL        reduce using rule 49 (term -> STRING .)
    LESSEQUAL       reduce using rule 49 (term -> STRING .)
    GREATEREQUAL    reduce using rule 49 (term -> STRING .)
    PLUSEQUAL       reduce using rule 49 (term -> STRING .)
    MINUSEQUAL      reduce using rule 49 (term -> STRING .)
    TIMESEQUAL      reduce using rule 49 (term -> STRING .)
    DIVIDEEQUAL     reduce using rule 49 (term -> STRING .)
    GREATERTHAN     reduce using rule 49 (term -> STRING .)
    LESSTHAN        reduce using rule 49 (term -> STRING .)
    IN              reduce using rule 49 (term -> STRING .)
    IDENTIFIER      reduce using rule 49 (term -> STRING .)
    PRINT           reduce using rule 49 (term -> STRING .)
    IF              reduce using rule 49 (term -> STRING .)
    FOR             reduce using rule 49 (term -> STRING .)
    WHILE           reduce using rule 49 (term -> STRING .)
    STANDARD_DATATYPE reduce using rule 49 (term -> STRING .)
    VOID            reduce using rule 49 (term -> STRING .)
    $end            reduce using rule 49 (term -> STRING .)
    ELSE            reduce using rule 49 (term -> STRING .)
    RPAREN          reduce using rule 49 (term -> STRING .)
    COMMA           reduce using rule 49 (term -> STRING .)


state 33

    (50) term -> IDENTIFIER .

    COLON           reduce using rule 50 (term -> IDENTIFIER .)
    PLUS            reduce using rule 50 (term -> IDENTIFIER .)
    MINUS           reduce using rule 50 (term -> IDENTIFIER .)
    TIMES           reduce using rule 50 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 50 (term -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 50 (term -> IDENTIFIER .)
    EQUAL           reduce using rule 50 (term -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 50 (term -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 50 (term -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 50 (term -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 50 (term -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 50 (term -> IDENTIFIER .)
    TIMESEQUAL      reduce using rule 50 (term -> IDENTIFIER .)
    DIVIDEEQUAL     reduce using rule 50 (term -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 50 (term -> IDENTIFIER .)
    LESSTHAN        reduce using rule 50 (term -> IDENTIFIER .)
    IN              reduce using rule 50 (term -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 50 (term -> IDENTIFIER .)
    PRINT           reduce using rule 50 (term -> IDENTIFIER .)
    IF              reduce using rule 50 (term -> IDENTIFIER .)
    FOR             reduce using rule 50 (term -> IDENTIFIER .)
    WHILE           reduce using rule 50 (term -> IDENTIFIER .)
    STANDARD_DATATYPE reduce using rule 50 (term -> IDENTIFIER .)
    VOID            reduce using rule 50 (term -> IDENTIFIER .)
    $end            reduce using rule 50 (term -> IDENTIFIER .)
    ELSE            reduce using rule 50 (term -> IDENTIFIER .)
    RPAREN          reduce using rule 50 (term -> IDENTIFIER .)
    COMMA           reduce using rule 50 (term -> IDENTIFIER .)


state 34

    (51) term -> bool .

    COLON           reduce using rule 51 (term -> bool .)
    PLUS            reduce using rule 51 (term -> bool .)
    MINUS           reduce using rule 51 (term -> bool .)
    TIMES           reduce using rule 51 (term -> bool .)
    DIVIDE          reduce using rule 51 (term -> bool .)
    EQUALEQUAL      reduce using rule 51 (term -> bool .)
    EQUAL           reduce using rule 51 (term -> bool .)
    NOTEQUAL        reduce using rule 51 (term -> bool .)
    LESSEQUAL       reduce using rule 51 (term -> bool .)
    GREATEREQUAL    reduce using rule 51 (term -> bool .)
    PLUSEQUAL       reduce using rule 51 (term -> bool .)
    MINUSEQUAL      reduce using rule 51 (term -> bool .)
    TIMESEQUAL      reduce using rule 51 (term -> bool .)
    DIVIDEEQUAL     reduce using rule 51 (term -> bool .)
    GREATERTHAN     reduce using rule 51 (term -> bool .)
    LESSTHAN        reduce using rule 51 (term -> bool .)
    IN              reduce using rule 51 (term -> bool .)
    IDENTIFIER      reduce using rule 51 (term -> bool .)
    PRINT           reduce using rule 51 (term -> bool .)
    IF              reduce using rule 51 (term -> bool .)
    FOR             reduce using rule 51 (term -> bool .)
    WHILE           reduce using rule 51 (term -> bool .)
    STANDARD_DATATYPE reduce using rule 51 (term -> bool .)
    VOID            reduce using rule 51 (term -> bool .)
    $end            reduce using rule 51 (term -> bool .)
    ELSE            reduce using rule 51 (term -> bool .)
    RPAREN          reduce using rule 51 (term -> bool .)
    COMMA           reduce using rule 51 (term -> bool .)


state 35

    (21) bool -> TRUE .

    COLON           reduce using rule 21 (bool -> TRUE .)
    PLUS            reduce using rule 21 (bool -> TRUE .)
    MINUS           reduce using rule 21 (bool -> TRUE .)
    TIMES           reduce using rule 21 (bool -> TRUE .)
    DIVIDE          reduce using rule 21 (bool -> TRUE .)
    EQUALEQUAL      reduce using rule 21 (bool -> TRUE .)
    EQUAL           reduce using rule 21 (bool -> TRUE .)
    NOTEQUAL        reduce using rule 21 (bool -> TRUE .)
    LESSEQUAL       reduce using rule 21 (bool -> TRUE .)
    GREATEREQUAL    reduce using rule 21 (bool -> TRUE .)
    PLUSEQUAL       reduce using rule 21 (bool -> TRUE .)
    MINUSEQUAL      reduce using rule 21 (bool -> TRUE .)
    TIMESEQUAL      reduce using rule 21 (bool -> TRUE .)
    DIVIDEEQUAL     reduce using rule 21 (bool -> TRUE .)
    GREATERTHAN     reduce using rule 21 (bool -> TRUE .)
    LESSTHAN        reduce using rule 21 (bool -> TRUE .)
    IN              reduce using rule 21 (bool -> TRUE .)
    IDENTIFIER      reduce using rule 21 (bool -> TRUE .)
    PRINT           reduce using rule 21 (bool -> TRUE .)
    IF              reduce using rule 21 (bool -> TRUE .)
    FOR             reduce using rule 21 (bool -> TRUE .)
    WHILE           reduce using rule 21 (bool -> TRUE .)
    STANDARD_DATATYPE reduce using rule 21 (bool -> TRUE .)
    VOID            reduce using rule 21 (bool -> TRUE .)
    $end            reduce using rule 21 (bool -> TRUE .)
    ELSE            reduce using rule 21 (bool -> TRUE .)
    RPAREN          reduce using rule 21 (bool -> TRUE .)
    COMMA           reduce using rule 21 (bool -> TRUE .)


state 36

    (22) bool -> FALSE .

    COLON           reduce using rule 22 (bool -> FALSE .)
    PLUS            reduce using rule 22 (bool -> FALSE .)
    MINUS           reduce using rule 22 (bool -> FALSE .)
    TIMES           reduce using rule 22 (bool -> FALSE .)
    DIVIDE          reduce using rule 22 (bool -> FALSE .)
    EQUALEQUAL      reduce using rule 22 (bool -> FALSE .)
    EQUAL           reduce using rule 22 (bool -> FALSE .)
    NOTEQUAL        reduce using rule 22 (bool -> FALSE .)
    LESSEQUAL       reduce using rule 22 (bool -> FALSE .)
    GREATEREQUAL    reduce using rule 22 (bool -> FALSE .)
    PLUSEQUAL       reduce using rule 22 (bool -> FALSE .)
    MINUSEQUAL      reduce using rule 22 (bool -> FALSE .)
    TIMESEQUAL      reduce using rule 22 (bool -> FALSE .)
    DIVIDEEQUAL     reduce using rule 22 (bool -> FALSE .)
    GREATERTHAN     reduce using rule 22 (bool -> FALSE .)
    LESSTHAN        reduce using rule 22 (bool -> FALSE .)
    IN              reduce using rule 22 (bool -> FALSE .)
    IDENTIFIER      reduce using rule 22 (bool -> FALSE .)
    PRINT           reduce using rule 22 (bool -> FALSE .)
    IF              reduce using rule 22 (bool -> FALSE .)
    FOR             reduce using rule 22 (bool -> FALSE .)
    WHILE           reduce using rule 22 (bool -> FALSE .)
    STANDARD_DATATYPE reduce using rule 22 (bool -> FALSE .)
    VOID            reduce using rule 22 (bool -> FALSE .)
    $end            reduce using rule 22 (bool -> FALSE .)
    ELSE            reduce using rule 22 (bool -> FALSE .)
    RPAREN          reduce using rule 22 (bool -> FALSE .)
    COMMA           reduce using rule 22 (bool -> FALSE .)


state 37

    (18) for_statement -> FOR expression . IN range_expression
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    IN              shift and go to state 63
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 38

    (20) while_statement -> WHILE expression . COLON statements
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    COLON           shift and go to state 64
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 39

    (26) var_declaration -> STANDARD_DATATYPE IDENTIFIER .
    (29) function_declaration -> STANDARD_DATATYPE IDENTIFIER . LPAREN argument_list RPAREN COLON
    (52) assignment_statement -> IDENTIFIER . EQUAL expression

    IDENTIFIER      reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    PRINT           reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    IF              reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    FOR             reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    WHILE           reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    STANDARD_DATATYPE reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    VOID            reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    $end            reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    ELSE            reduce using rule 26 (var_declaration -> STANDARD_DATATYPE IDENTIFIER .)
    LPAREN          shift and go to state 65
    EQUAL           shift and go to state 24


state 40

    (27) var_declaration -> STANDARD_DATATYPE assignment_statement .

    IDENTIFIER      reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)
    PRINT           reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)
    IF              reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)
    FOR             reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)
    WHILE           reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)
    STANDARD_DATATYPE reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)
    VOID            reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)
    $end            reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)
    ELSE            reduce using rule 27 (var_declaration -> STANDARD_DATATYPE assignment_statement .)


state 41

    (28) function_declaration -> VOID IDENTIFIER . LPAREN argument_list RPAREN COLON

    LPAREN          shift and go to state 66


state 42

    (52) assignment_statement -> IDENTIFIER EQUAL expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    IDENTIFIER      reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    PRINT           reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    IF              reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FOR             reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    WHILE           reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    STANDARD_DATATYPE reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    VOID            reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    $end            reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    ELSE            reduce using rule 52 (assignment_statement -> IDENTIFIER EQUAL expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 43

    (53) function_call -> IDENTIFIER LPAREN argument_list . RPAREN
    (55) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 67
    COMMA           shift and go to state 68


state 44

    (54) argument_list -> expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    RPAREN          reduce using rule 54 (argument_list -> expression .)
    COMMA           reduce using rule 54 (argument_list -> expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 45

    (23) print_statement -> PRINT LPAREN expression . RPAREN
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 46

    (15) inline_if_statement -> IF expression COLON . statements
    (16) block_if_else_statement -> IF expression COLON . statements block_else_statement
    (2) statements -> . statement statements
    (3) statements -> . statement
    (4) statements -> . empty
    (5) statement -> . conditional
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . declaration
    (10) statement -> . empty
    (56) empty -> .
    (11) conditional -> . inline_if_statement
    (12) conditional -> . block_if_else_statement
    (13) conditional -> . for_statement
    (14) conditional -> . while_statement
    (52) assignment_statement -> . IDENTIFIER EQUAL expression
    (53) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (23) print_statement -> . PRINT LPAREN expression RPAREN
    (24) declaration -> . var_declaration
    (25) declaration -> . function_declaration
    (15) inline_if_statement -> . IF expression COLON statements
    (16) block_if_else_statement -> . IF expression COLON statements block_else_statement
    (18) for_statement -> . FOR expression IN range_expression
    (20) while_statement -> . WHILE expression COLON statements
    (26) var_declaration -> . STANDARD_DATATYPE IDENTIFIER
    (27) var_declaration -> . STANDARD_DATATYPE assignment_statement
    (28) function_declaration -> . VOID IDENTIFIER LPAREN argument_list RPAREN COLON
    (29) function_declaration -> . STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STANDARD_DATATYPE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    $end            reduce using rule 56 (empty -> .)
    ELSE            reduce using rule 56 (empty -> .)
    IDENTIFIER      shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 18
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    STANDARD_DATATYPE shift and go to state 21
    VOID            shift and go to state 22

  ! IDENTIFIER      [ reduce using rule 56 (empty -> .) ]
  ! PRINT           [ reduce using rule 56 (empty -> .) ]
  ! IF              [ reduce using rule 56 (empty -> .) ]
  ! FOR             [ reduce using rule 56 (empty -> .) ]
  ! WHILE           [ reduce using rule 56 (empty -> .) ]
  ! STANDARD_DATATYPE [ reduce using rule 56 (empty -> .) ]
  ! VOID            [ reduce using rule 56 (empty -> .) ]

    statements                     shift and go to state 70
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    declaration                    shift and go to state 9
    inline_if_statement            shift and go to state 10
    block_if_else_statement        shift and go to state 11
    for_statement                  shift and go to state 12
    while_statement                shift and go to state 13
    var_declaration                shift and go to state 16
    function_declaration           shift and go to state 17

state 47

    (31) expression -> expression PLUS . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 71
    bool                           shift and go to state 34

state 48

    (32) expression -> expression MINUS . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 72
    bool                           shift and go to state 34

state 49

    (33) expression -> expression TIMES . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 73
    bool                           shift and go to state 34

state 50

    (34) expression -> expression DIVIDE . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 74
    bool                           shift and go to state 34

state 51

    (35) expression -> expression EQUALEQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 75
    bool                           shift and go to state 34

state 52

    (36) expression -> expression EQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 76
    bool                           shift and go to state 34

state 53

    (37) expression -> expression NOTEQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 77
    bool                           shift and go to state 34

state 54

    (38) expression -> expression LESSEQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 78
    bool                           shift and go to state 34

state 55

    (39) expression -> expression GREATEREQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 79
    bool                           shift and go to state 34

state 56

    (40) expression -> expression PLUSEQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 80
    bool                           shift and go to state 34

state 57

    (41) expression -> expression MINUSEQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 81
    bool                           shift and go to state 34

state 58

    (42) expression -> expression TIMESEQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 82
    bool                           shift and go to state 34

state 59

    (43) expression -> expression DIVIDEEQUAL . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 83
    bool                           shift and go to state 34

state 60

    (44) expression -> expression GREATERTHAN . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 84
    bool                           shift and go to state 34

state 61

    (45) expression -> expression LESSTHAN . term
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    term                           shift and go to state 85
    bool                           shift and go to state 34

state 62

    (46) expression -> LPAREN expression . RPAREN
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 63

    (18) for_statement -> FOR expression IN . range_expression
    (19) range_expression -> . RANGE expression COMMA expression

    RANGE           shift and go to state 88

    range_expression               shift and go to state 87

state 64

    (20) while_statement -> WHILE expression COLON . statements
    (2) statements -> . statement statements
    (3) statements -> . statement
    (4) statements -> . empty
    (5) statement -> . conditional
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . declaration
    (10) statement -> . empty
    (56) empty -> .
    (11) conditional -> . inline_if_statement
    (12) conditional -> . block_if_else_statement
    (13) conditional -> . for_statement
    (14) conditional -> . while_statement
    (52) assignment_statement -> . IDENTIFIER EQUAL expression
    (53) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (23) print_statement -> . PRINT LPAREN expression RPAREN
    (24) declaration -> . var_declaration
    (25) declaration -> . function_declaration
    (15) inline_if_statement -> . IF expression COLON statements
    (16) block_if_else_statement -> . IF expression COLON statements block_else_statement
    (18) for_statement -> . FOR expression IN range_expression
    (20) while_statement -> . WHILE expression COLON statements
    (26) var_declaration -> . STANDARD_DATATYPE IDENTIFIER
    (27) var_declaration -> . STANDARD_DATATYPE assignment_statement
    (28) function_declaration -> . VOID IDENTIFIER LPAREN argument_list RPAREN COLON
    (29) function_declaration -> . STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STANDARD_DATATYPE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    $end            reduce using rule 56 (empty -> .)
    ELSE            reduce using rule 56 (empty -> .)
    IDENTIFIER      shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 18
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    STANDARD_DATATYPE shift and go to state 21
    VOID            shift and go to state 22

  ! IDENTIFIER      [ reduce using rule 56 (empty -> .) ]
  ! PRINT           [ reduce using rule 56 (empty -> .) ]
  ! IF              [ reduce using rule 56 (empty -> .) ]
  ! FOR             [ reduce using rule 56 (empty -> .) ]
  ! WHILE           [ reduce using rule 56 (empty -> .) ]
  ! STANDARD_DATATYPE [ reduce using rule 56 (empty -> .) ]
  ! VOID            [ reduce using rule 56 (empty -> .) ]

    statements                     shift and go to state 89
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    declaration                    shift and go to state 9
    inline_if_statement            shift and go to state 10
    block_if_else_statement        shift and go to state 11
    for_statement                  shift and go to state 12
    while_statement                shift and go to state 13
    var_declaration                shift and go to state 16
    function_declaration           shift and go to state 17

state 65

    (29) function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN . argument_list RPAREN COLON
    (54) argument_list -> . expression
    (55) argument_list -> . argument_list COMMA expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    argument_list                  shift and go to state 90
    expression                     shift and go to state 44
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 66

    (28) function_declaration -> VOID IDENTIFIER LPAREN . argument_list RPAREN COLON
    (54) argument_list -> . expression
    (55) argument_list -> . argument_list COMMA expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    argument_list                  shift and go to state 91
    expression                     shift and go to state 44
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 67

    (53) function_call -> IDENTIFIER LPAREN argument_list RPAREN .

    IDENTIFIER      reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    IF              reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FOR             reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    STANDARD_DATATYPE reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    VOID            reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    $end            reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 53 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)


state 68

    (55) argument_list -> argument_list COMMA . expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 92
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 69

    (23) print_statement -> PRINT LPAREN expression RPAREN .

    IDENTIFIER      reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)
    FOR             reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)
    STANDARD_DATATYPE reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)
    VOID            reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)
    ELSE            reduce using rule 23 (print_statement -> PRINT LPAREN expression RPAREN .)


state 70

    (15) inline_if_statement -> IF expression COLON statements .
    (16) block_if_else_statement -> IF expression COLON statements . block_else_statement
    (17) block_else_statement -> . ELSE statements

  ! shift/reduce conflict for ELSE resolved as shift
    IDENTIFIER      reduce using rule 15 (inline_if_statement -> IF expression COLON statements .)
    PRINT           reduce using rule 15 (inline_if_statement -> IF expression COLON statements .)
    IF              reduce using rule 15 (inline_if_statement -> IF expression COLON statements .)
    FOR             reduce using rule 15 (inline_if_statement -> IF expression COLON statements .)
    WHILE           reduce using rule 15 (inline_if_statement -> IF expression COLON statements .)
    STANDARD_DATATYPE reduce using rule 15 (inline_if_statement -> IF expression COLON statements .)
    VOID            reduce using rule 15 (inline_if_statement -> IF expression COLON statements .)
    $end            reduce using rule 15 (inline_if_statement -> IF expression COLON statements .)
    ELSE            shift and go to state 94

  ! ELSE            [ reduce using rule 15 (inline_if_statement -> IF expression COLON statements .) ]

    block_else_statement           shift and go to state 93

state 71

    (31) expression -> expression PLUS term .

    COLON           reduce using rule 31 (expression -> expression PLUS term .)
    PLUS            reduce using rule 31 (expression -> expression PLUS term .)
    MINUS           reduce using rule 31 (expression -> expression PLUS term .)
    TIMES           reduce using rule 31 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 31 (expression -> expression PLUS term .)
    EQUALEQUAL      reduce using rule 31 (expression -> expression PLUS term .)
    EQUAL           reduce using rule 31 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 31 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 31 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 31 (expression -> expression PLUS term .)
    PLUSEQUAL       reduce using rule 31 (expression -> expression PLUS term .)
    MINUSEQUAL      reduce using rule 31 (expression -> expression PLUS term .)
    TIMESEQUAL      reduce using rule 31 (expression -> expression PLUS term .)
    DIVIDEEQUAL     reduce using rule 31 (expression -> expression PLUS term .)
    GREATERTHAN     reduce using rule 31 (expression -> expression PLUS term .)
    LESSTHAN        reduce using rule 31 (expression -> expression PLUS term .)
    IN              reduce using rule 31 (expression -> expression PLUS term .)
    IDENTIFIER      reduce using rule 31 (expression -> expression PLUS term .)
    PRINT           reduce using rule 31 (expression -> expression PLUS term .)
    IF              reduce using rule 31 (expression -> expression PLUS term .)
    FOR             reduce using rule 31 (expression -> expression PLUS term .)
    WHILE           reduce using rule 31 (expression -> expression PLUS term .)
    STANDARD_DATATYPE reduce using rule 31 (expression -> expression PLUS term .)
    VOID            reduce using rule 31 (expression -> expression PLUS term .)
    $end            reduce using rule 31 (expression -> expression PLUS term .)
    ELSE            reduce using rule 31 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 31 (expression -> expression PLUS term .)
    COMMA           reduce using rule 31 (expression -> expression PLUS term .)


state 72

    (32) expression -> expression MINUS term .

    COLON           reduce using rule 32 (expression -> expression MINUS term .)
    PLUS            reduce using rule 32 (expression -> expression MINUS term .)
    MINUS           reduce using rule 32 (expression -> expression MINUS term .)
    TIMES           reduce using rule 32 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 32 (expression -> expression MINUS term .)
    EQUALEQUAL      reduce using rule 32 (expression -> expression MINUS term .)
    EQUAL           reduce using rule 32 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 32 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 32 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 32 (expression -> expression MINUS term .)
    PLUSEQUAL       reduce using rule 32 (expression -> expression MINUS term .)
    MINUSEQUAL      reduce using rule 32 (expression -> expression MINUS term .)
    TIMESEQUAL      reduce using rule 32 (expression -> expression MINUS term .)
    DIVIDEEQUAL     reduce using rule 32 (expression -> expression MINUS term .)
    GREATERTHAN     reduce using rule 32 (expression -> expression MINUS term .)
    LESSTHAN        reduce using rule 32 (expression -> expression MINUS term .)
    IN              reduce using rule 32 (expression -> expression MINUS term .)
    IDENTIFIER      reduce using rule 32 (expression -> expression MINUS term .)
    PRINT           reduce using rule 32 (expression -> expression MINUS term .)
    IF              reduce using rule 32 (expression -> expression MINUS term .)
    FOR             reduce using rule 32 (expression -> expression MINUS term .)
    WHILE           reduce using rule 32 (expression -> expression MINUS term .)
    STANDARD_DATATYPE reduce using rule 32 (expression -> expression MINUS term .)
    VOID            reduce using rule 32 (expression -> expression MINUS term .)
    $end            reduce using rule 32 (expression -> expression MINUS term .)
    ELSE            reduce using rule 32 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 32 (expression -> expression MINUS term .)
    COMMA           reduce using rule 32 (expression -> expression MINUS term .)


state 73

    (33) expression -> expression TIMES term .

    COLON           reduce using rule 33 (expression -> expression TIMES term .)
    PLUS            reduce using rule 33 (expression -> expression TIMES term .)
    MINUS           reduce using rule 33 (expression -> expression TIMES term .)
    TIMES           reduce using rule 33 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 33 (expression -> expression TIMES term .)
    EQUALEQUAL      reduce using rule 33 (expression -> expression TIMES term .)
    EQUAL           reduce using rule 33 (expression -> expression TIMES term .)
    NOTEQUAL        reduce using rule 33 (expression -> expression TIMES term .)
    LESSEQUAL       reduce using rule 33 (expression -> expression TIMES term .)
    GREATEREQUAL    reduce using rule 33 (expression -> expression TIMES term .)
    PLUSEQUAL       reduce using rule 33 (expression -> expression TIMES term .)
    MINUSEQUAL      reduce using rule 33 (expression -> expression TIMES term .)
    TIMESEQUAL      reduce using rule 33 (expression -> expression TIMES term .)
    DIVIDEEQUAL     reduce using rule 33 (expression -> expression TIMES term .)
    GREATERTHAN     reduce using rule 33 (expression -> expression TIMES term .)
    LESSTHAN        reduce using rule 33 (expression -> expression TIMES term .)
    IN              reduce using rule 33 (expression -> expression TIMES term .)
    IDENTIFIER      reduce using rule 33 (expression -> expression TIMES term .)
    PRINT           reduce using rule 33 (expression -> expression TIMES term .)
    IF              reduce using rule 33 (expression -> expression TIMES term .)
    FOR             reduce using rule 33 (expression -> expression TIMES term .)
    WHILE           reduce using rule 33 (expression -> expression TIMES term .)
    STANDARD_DATATYPE reduce using rule 33 (expression -> expression TIMES term .)
    VOID            reduce using rule 33 (expression -> expression TIMES term .)
    $end            reduce using rule 33 (expression -> expression TIMES term .)
    ELSE            reduce using rule 33 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 33 (expression -> expression TIMES term .)
    COMMA           reduce using rule 33 (expression -> expression TIMES term .)


state 74

    (34) expression -> expression DIVIDE term .

    COLON           reduce using rule 34 (expression -> expression DIVIDE term .)
    PLUS            reduce using rule 34 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 34 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 34 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 34 (expression -> expression DIVIDE term .)
    EQUALEQUAL      reduce using rule 34 (expression -> expression DIVIDE term .)
    EQUAL           reduce using rule 34 (expression -> expression DIVIDE term .)
    NOTEQUAL        reduce using rule 34 (expression -> expression DIVIDE term .)
    LESSEQUAL       reduce using rule 34 (expression -> expression DIVIDE term .)
    GREATEREQUAL    reduce using rule 34 (expression -> expression DIVIDE term .)
    PLUSEQUAL       reduce using rule 34 (expression -> expression DIVIDE term .)
    MINUSEQUAL      reduce using rule 34 (expression -> expression DIVIDE term .)
    TIMESEQUAL      reduce using rule 34 (expression -> expression DIVIDE term .)
    DIVIDEEQUAL     reduce using rule 34 (expression -> expression DIVIDE term .)
    GREATERTHAN     reduce using rule 34 (expression -> expression DIVIDE term .)
    LESSTHAN        reduce using rule 34 (expression -> expression DIVIDE term .)
    IN              reduce using rule 34 (expression -> expression DIVIDE term .)
    IDENTIFIER      reduce using rule 34 (expression -> expression DIVIDE term .)
    PRINT           reduce using rule 34 (expression -> expression DIVIDE term .)
    IF              reduce using rule 34 (expression -> expression DIVIDE term .)
    FOR             reduce using rule 34 (expression -> expression DIVIDE term .)
    WHILE           reduce using rule 34 (expression -> expression DIVIDE term .)
    STANDARD_DATATYPE reduce using rule 34 (expression -> expression DIVIDE term .)
    VOID            reduce using rule 34 (expression -> expression DIVIDE term .)
    $end            reduce using rule 34 (expression -> expression DIVIDE term .)
    ELSE            reduce using rule 34 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 34 (expression -> expression DIVIDE term .)
    COMMA           reduce using rule 34 (expression -> expression DIVIDE term .)


state 75

    (35) expression -> expression EQUALEQUAL term .

    COLON           reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    PLUS            reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    MINUS           reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    TIMES           reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    DIVIDE          reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    EQUALEQUAL      reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    EQUAL           reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    NOTEQUAL        reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    LESSEQUAL       reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    GREATEREQUAL    reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    PLUSEQUAL       reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    MINUSEQUAL      reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    TIMESEQUAL      reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    DIVIDEEQUAL     reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    GREATERTHAN     reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    LESSTHAN        reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    IN              reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    IDENTIFIER      reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    PRINT           reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    IF              reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    FOR             reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    WHILE           reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    STANDARD_DATATYPE reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    VOID            reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    $end            reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    ELSE            reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    RPAREN          reduce using rule 35 (expression -> expression EQUALEQUAL term .)
    COMMA           reduce using rule 35 (expression -> expression EQUALEQUAL term .)


state 76

    (36) expression -> expression EQUAL term .

    COLON           reduce using rule 36 (expression -> expression EQUAL term .)
    PLUS            reduce using rule 36 (expression -> expression EQUAL term .)
    MINUS           reduce using rule 36 (expression -> expression EQUAL term .)
    TIMES           reduce using rule 36 (expression -> expression EQUAL term .)
    DIVIDE          reduce using rule 36 (expression -> expression EQUAL term .)
    EQUALEQUAL      reduce using rule 36 (expression -> expression EQUAL term .)
    EQUAL           reduce using rule 36 (expression -> expression EQUAL term .)
    NOTEQUAL        reduce using rule 36 (expression -> expression EQUAL term .)
    LESSEQUAL       reduce using rule 36 (expression -> expression EQUAL term .)
    GREATEREQUAL    reduce using rule 36 (expression -> expression EQUAL term .)
    PLUSEQUAL       reduce using rule 36 (expression -> expression EQUAL term .)
    MINUSEQUAL      reduce using rule 36 (expression -> expression EQUAL term .)
    TIMESEQUAL      reduce using rule 36 (expression -> expression EQUAL term .)
    DIVIDEEQUAL     reduce using rule 36 (expression -> expression EQUAL term .)
    GREATERTHAN     reduce using rule 36 (expression -> expression EQUAL term .)
    LESSTHAN        reduce using rule 36 (expression -> expression EQUAL term .)
    IN              reduce using rule 36 (expression -> expression EQUAL term .)
    IDENTIFIER      reduce using rule 36 (expression -> expression EQUAL term .)
    PRINT           reduce using rule 36 (expression -> expression EQUAL term .)
    IF              reduce using rule 36 (expression -> expression EQUAL term .)
    FOR             reduce using rule 36 (expression -> expression EQUAL term .)
    WHILE           reduce using rule 36 (expression -> expression EQUAL term .)
    STANDARD_DATATYPE reduce using rule 36 (expression -> expression EQUAL term .)
    VOID            reduce using rule 36 (expression -> expression EQUAL term .)
    $end            reduce using rule 36 (expression -> expression EQUAL term .)
    ELSE            reduce using rule 36 (expression -> expression EQUAL term .)
    RPAREN          reduce using rule 36 (expression -> expression EQUAL term .)
    COMMA           reduce using rule 36 (expression -> expression EQUAL term .)


state 77

    (37) expression -> expression NOTEQUAL term .

    COLON           reduce using rule 37 (expression -> expression NOTEQUAL term .)
    PLUS            reduce using rule 37 (expression -> expression NOTEQUAL term .)
    MINUS           reduce using rule 37 (expression -> expression NOTEQUAL term .)
    TIMES           reduce using rule 37 (expression -> expression NOTEQUAL term .)
    DIVIDE          reduce using rule 37 (expression -> expression NOTEQUAL term .)
    EQUALEQUAL      reduce using rule 37 (expression -> expression NOTEQUAL term .)
    EQUAL           reduce using rule 37 (expression -> expression NOTEQUAL term .)
    NOTEQUAL        reduce using rule 37 (expression -> expression NOTEQUAL term .)
    LESSEQUAL       reduce using rule 37 (expression -> expression NOTEQUAL term .)
    GREATEREQUAL    reduce using rule 37 (expression -> expression NOTEQUAL term .)
    PLUSEQUAL       reduce using rule 37 (expression -> expression NOTEQUAL term .)
    MINUSEQUAL      reduce using rule 37 (expression -> expression NOTEQUAL term .)
    TIMESEQUAL      reduce using rule 37 (expression -> expression NOTEQUAL term .)
    DIVIDEEQUAL     reduce using rule 37 (expression -> expression NOTEQUAL term .)
    GREATERTHAN     reduce using rule 37 (expression -> expression NOTEQUAL term .)
    LESSTHAN        reduce using rule 37 (expression -> expression NOTEQUAL term .)
    IN              reduce using rule 37 (expression -> expression NOTEQUAL term .)
    IDENTIFIER      reduce using rule 37 (expression -> expression NOTEQUAL term .)
    PRINT           reduce using rule 37 (expression -> expression NOTEQUAL term .)
    IF              reduce using rule 37 (expression -> expression NOTEQUAL term .)
    FOR             reduce using rule 37 (expression -> expression NOTEQUAL term .)
    WHILE           reduce using rule 37 (expression -> expression NOTEQUAL term .)
    STANDARD_DATATYPE reduce using rule 37 (expression -> expression NOTEQUAL term .)
    VOID            reduce using rule 37 (expression -> expression NOTEQUAL term .)
    $end            reduce using rule 37 (expression -> expression NOTEQUAL term .)
    ELSE            reduce using rule 37 (expression -> expression NOTEQUAL term .)
    RPAREN          reduce using rule 37 (expression -> expression NOTEQUAL term .)
    COMMA           reduce using rule 37 (expression -> expression NOTEQUAL term .)


state 78

    (38) expression -> expression LESSEQUAL term .

    COLON           reduce using rule 38 (expression -> expression LESSEQUAL term .)
    PLUS            reduce using rule 38 (expression -> expression LESSEQUAL term .)
    MINUS           reduce using rule 38 (expression -> expression LESSEQUAL term .)
    TIMES           reduce using rule 38 (expression -> expression LESSEQUAL term .)
    DIVIDE          reduce using rule 38 (expression -> expression LESSEQUAL term .)
    EQUALEQUAL      reduce using rule 38 (expression -> expression LESSEQUAL term .)
    EQUAL           reduce using rule 38 (expression -> expression LESSEQUAL term .)
    NOTEQUAL        reduce using rule 38 (expression -> expression LESSEQUAL term .)
    LESSEQUAL       reduce using rule 38 (expression -> expression LESSEQUAL term .)
    GREATEREQUAL    reduce using rule 38 (expression -> expression LESSEQUAL term .)
    PLUSEQUAL       reduce using rule 38 (expression -> expression LESSEQUAL term .)
    MINUSEQUAL      reduce using rule 38 (expression -> expression LESSEQUAL term .)
    TIMESEQUAL      reduce using rule 38 (expression -> expression LESSEQUAL term .)
    DIVIDEEQUAL     reduce using rule 38 (expression -> expression LESSEQUAL term .)
    GREATERTHAN     reduce using rule 38 (expression -> expression LESSEQUAL term .)
    LESSTHAN        reduce using rule 38 (expression -> expression LESSEQUAL term .)
    IN              reduce using rule 38 (expression -> expression LESSEQUAL term .)
    IDENTIFIER      reduce using rule 38 (expression -> expression LESSEQUAL term .)
    PRINT           reduce using rule 38 (expression -> expression LESSEQUAL term .)
    IF              reduce using rule 38 (expression -> expression LESSEQUAL term .)
    FOR             reduce using rule 38 (expression -> expression LESSEQUAL term .)
    WHILE           reduce using rule 38 (expression -> expression LESSEQUAL term .)
    STANDARD_DATATYPE reduce using rule 38 (expression -> expression LESSEQUAL term .)
    VOID            reduce using rule 38 (expression -> expression LESSEQUAL term .)
    $end            reduce using rule 38 (expression -> expression LESSEQUAL term .)
    ELSE            reduce using rule 38 (expression -> expression LESSEQUAL term .)
    RPAREN          reduce using rule 38 (expression -> expression LESSEQUAL term .)
    COMMA           reduce using rule 38 (expression -> expression LESSEQUAL term .)


state 79

    (39) expression -> expression GREATEREQUAL term .

    COLON           reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    PLUS            reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    MINUS           reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    TIMES           reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    DIVIDE          reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    EQUALEQUAL      reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    EQUAL           reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    NOTEQUAL        reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    LESSEQUAL       reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    GREATEREQUAL    reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    PLUSEQUAL       reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    MINUSEQUAL      reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    TIMESEQUAL      reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    DIVIDEEQUAL     reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    GREATERTHAN     reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    LESSTHAN        reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    IN              reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    IDENTIFIER      reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    PRINT           reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    IF              reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    FOR             reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    WHILE           reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    STANDARD_DATATYPE reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    VOID            reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    $end            reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    ELSE            reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    RPAREN          reduce using rule 39 (expression -> expression GREATEREQUAL term .)
    COMMA           reduce using rule 39 (expression -> expression GREATEREQUAL term .)


state 80

    (40) expression -> expression PLUSEQUAL term .

    COLON           reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    PLUS            reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    MINUS           reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    TIMES           reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    DIVIDE          reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    EQUALEQUAL      reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    EQUAL           reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    NOTEQUAL        reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    LESSEQUAL       reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    GREATEREQUAL    reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    PLUSEQUAL       reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    MINUSEQUAL      reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    TIMESEQUAL      reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    DIVIDEEQUAL     reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    GREATERTHAN     reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    LESSTHAN        reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    IN              reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    IDENTIFIER      reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    PRINT           reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    IF              reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    FOR             reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    WHILE           reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    STANDARD_DATATYPE reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    VOID            reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    $end            reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    ELSE            reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    RPAREN          reduce using rule 40 (expression -> expression PLUSEQUAL term .)
    COMMA           reduce using rule 40 (expression -> expression PLUSEQUAL term .)


state 81

    (41) expression -> expression MINUSEQUAL term .

    COLON           reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    PLUS            reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    MINUS           reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    TIMES           reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    DIVIDE          reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    EQUALEQUAL      reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    EQUAL           reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    NOTEQUAL        reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    LESSEQUAL       reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    GREATEREQUAL    reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    PLUSEQUAL       reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    MINUSEQUAL      reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    TIMESEQUAL      reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    DIVIDEEQUAL     reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    GREATERTHAN     reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    LESSTHAN        reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    IN              reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    IDENTIFIER      reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    PRINT           reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    IF              reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    FOR             reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    WHILE           reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    STANDARD_DATATYPE reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    VOID            reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    $end            reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    ELSE            reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    RPAREN          reduce using rule 41 (expression -> expression MINUSEQUAL term .)
    COMMA           reduce using rule 41 (expression -> expression MINUSEQUAL term .)


state 82

    (42) expression -> expression TIMESEQUAL term .

    COLON           reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    PLUS            reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    MINUS           reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    TIMES           reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    DIVIDE          reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    EQUALEQUAL      reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    EQUAL           reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    NOTEQUAL        reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    LESSEQUAL       reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    GREATEREQUAL    reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    PLUSEQUAL       reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    MINUSEQUAL      reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    TIMESEQUAL      reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    DIVIDEEQUAL     reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    GREATERTHAN     reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    LESSTHAN        reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    IN              reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    IDENTIFIER      reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    PRINT           reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    IF              reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    FOR             reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    WHILE           reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    STANDARD_DATATYPE reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    VOID            reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    $end            reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    ELSE            reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    RPAREN          reduce using rule 42 (expression -> expression TIMESEQUAL term .)
    COMMA           reduce using rule 42 (expression -> expression TIMESEQUAL term .)


state 83

    (43) expression -> expression DIVIDEEQUAL term .

    COLON           reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    PLUS            reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    MINUS           reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    TIMES           reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    DIVIDE          reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    EQUALEQUAL      reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    EQUAL           reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    NOTEQUAL        reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    LESSEQUAL       reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    GREATEREQUAL    reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    PLUSEQUAL       reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    MINUSEQUAL      reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    TIMESEQUAL      reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    DIVIDEEQUAL     reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    GREATERTHAN     reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    LESSTHAN        reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    IN              reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    IDENTIFIER      reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    PRINT           reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    IF              reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    FOR             reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    WHILE           reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    STANDARD_DATATYPE reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    VOID            reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    $end            reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    ELSE            reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    RPAREN          reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)
    COMMA           reduce using rule 43 (expression -> expression DIVIDEEQUAL term .)


state 84

    (44) expression -> expression GREATERTHAN term .

    COLON           reduce using rule 44 (expression -> expression GREATERTHAN term .)
    PLUS            reduce using rule 44 (expression -> expression GREATERTHAN term .)
    MINUS           reduce using rule 44 (expression -> expression GREATERTHAN term .)
    TIMES           reduce using rule 44 (expression -> expression GREATERTHAN term .)
    DIVIDE          reduce using rule 44 (expression -> expression GREATERTHAN term .)
    EQUALEQUAL      reduce using rule 44 (expression -> expression GREATERTHAN term .)
    EQUAL           reduce using rule 44 (expression -> expression GREATERTHAN term .)
    NOTEQUAL        reduce using rule 44 (expression -> expression GREATERTHAN term .)
    LESSEQUAL       reduce using rule 44 (expression -> expression GREATERTHAN term .)
    GREATEREQUAL    reduce using rule 44 (expression -> expression GREATERTHAN term .)
    PLUSEQUAL       reduce using rule 44 (expression -> expression GREATERTHAN term .)
    MINUSEQUAL      reduce using rule 44 (expression -> expression GREATERTHAN term .)
    TIMESEQUAL      reduce using rule 44 (expression -> expression GREATERTHAN term .)
    DIVIDEEQUAL     reduce using rule 44 (expression -> expression GREATERTHAN term .)
    GREATERTHAN     reduce using rule 44 (expression -> expression GREATERTHAN term .)
    LESSTHAN        reduce using rule 44 (expression -> expression GREATERTHAN term .)
    IN              reduce using rule 44 (expression -> expression GREATERTHAN term .)
    IDENTIFIER      reduce using rule 44 (expression -> expression GREATERTHAN term .)
    PRINT           reduce using rule 44 (expression -> expression GREATERTHAN term .)
    IF              reduce using rule 44 (expression -> expression GREATERTHAN term .)
    FOR             reduce using rule 44 (expression -> expression GREATERTHAN term .)
    WHILE           reduce using rule 44 (expression -> expression GREATERTHAN term .)
    STANDARD_DATATYPE reduce using rule 44 (expression -> expression GREATERTHAN term .)
    VOID            reduce using rule 44 (expression -> expression GREATERTHAN term .)
    $end            reduce using rule 44 (expression -> expression GREATERTHAN term .)
    ELSE            reduce using rule 44 (expression -> expression GREATERTHAN term .)
    RPAREN          reduce using rule 44 (expression -> expression GREATERTHAN term .)
    COMMA           reduce using rule 44 (expression -> expression GREATERTHAN term .)


state 85

    (45) expression -> expression LESSTHAN term .

    COLON           reduce using rule 45 (expression -> expression LESSTHAN term .)
    PLUS            reduce using rule 45 (expression -> expression LESSTHAN term .)
    MINUS           reduce using rule 45 (expression -> expression LESSTHAN term .)
    TIMES           reduce using rule 45 (expression -> expression LESSTHAN term .)
    DIVIDE          reduce using rule 45 (expression -> expression LESSTHAN term .)
    EQUALEQUAL      reduce using rule 45 (expression -> expression LESSTHAN term .)
    EQUAL           reduce using rule 45 (expression -> expression LESSTHAN term .)
    NOTEQUAL        reduce using rule 45 (expression -> expression LESSTHAN term .)
    LESSEQUAL       reduce using rule 45 (expression -> expression LESSTHAN term .)
    GREATEREQUAL    reduce using rule 45 (expression -> expression LESSTHAN term .)
    PLUSEQUAL       reduce using rule 45 (expression -> expression LESSTHAN term .)
    MINUSEQUAL      reduce using rule 45 (expression -> expression LESSTHAN term .)
    TIMESEQUAL      reduce using rule 45 (expression -> expression LESSTHAN term .)
    DIVIDEEQUAL     reduce using rule 45 (expression -> expression LESSTHAN term .)
    GREATERTHAN     reduce using rule 45 (expression -> expression LESSTHAN term .)
    LESSTHAN        reduce using rule 45 (expression -> expression LESSTHAN term .)
    IN              reduce using rule 45 (expression -> expression LESSTHAN term .)
    IDENTIFIER      reduce using rule 45 (expression -> expression LESSTHAN term .)
    PRINT           reduce using rule 45 (expression -> expression LESSTHAN term .)
    IF              reduce using rule 45 (expression -> expression LESSTHAN term .)
    FOR             reduce using rule 45 (expression -> expression LESSTHAN term .)
    WHILE           reduce using rule 45 (expression -> expression LESSTHAN term .)
    STANDARD_DATATYPE reduce using rule 45 (expression -> expression LESSTHAN term .)
    VOID            reduce using rule 45 (expression -> expression LESSTHAN term .)
    $end            reduce using rule 45 (expression -> expression LESSTHAN term .)
    ELSE            reduce using rule 45 (expression -> expression LESSTHAN term .)
    RPAREN          reduce using rule 45 (expression -> expression LESSTHAN term .)
    COMMA           reduce using rule 45 (expression -> expression LESSTHAN term .)


state 86

    (46) expression -> LPAREN expression RPAREN .

    COLON           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EQUALEQUAL      reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    PLUSEQUAL       reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MINUSEQUAL      reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TIMESEQUAL      reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIVIDEEQUAL     reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    STANDARD_DATATYPE reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    VOID            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (expression -> LPAREN expression RPAREN .)


state 87

    (18) for_statement -> FOR expression IN range_expression .

    IDENTIFIER      reduce using rule 18 (for_statement -> FOR expression IN range_expression .)
    PRINT           reduce using rule 18 (for_statement -> FOR expression IN range_expression .)
    IF              reduce using rule 18 (for_statement -> FOR expression IN range_expression .)
    FOR             reduce using rule 18 (for_statement -> FOR expression IN range_expression .)
    WHILE           reduce using rule 18 (for_statement -> FOR expression IN range_expression .)
    STANDARD_DATATYPE reduce using rule 18 (for_statement -> FOR expression IN range_expression .)
    VOID            reduce using rule 18 (for_statement -> FOR expression IN range_expression .)
    $end            reduce using rule 18 (for_statement -> FOR expression IN range_expression .)
    ELSE            reduce using rule 18 (for_statement -> FOR expression IN range_expression .)


state 88

    (19) range_expression -> RANGE . expression COMMA expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 95
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 89

    (20) while_statement -> WHILE expression COLON statements .

    IDENTIFIER      reduce using rule 20 (while_statement -> WHILE expression COLON statements .)
    PRINT           reduce using rule 20 (while_statement -> WHILE expression COLON statements .)
    IF              reduce using rule 20 (while_statement -> WHILE expression COLON statements .)
    FOR             reduce using rule 20 (while_statement -> WHILE expression COLON statements .)
    WHILE           reduce using rule 20 (while_statement -> WHILE expression COLON statements .)
    STANDARD_DATATYPE reduce using rule 20 (while_statement -> WHILE expression COLON statements .)
    VOID            reduce using rule 20 (while_statement -> WHILE expression COLON statements .)
    $end            reduce using rule 20 (while_statement -> WHILE expression COLON statements .)
    ELSE            reduce using rule 20 (while_statement -> WHILE expression COLON statements .)


state 90

    (29) function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list . RPAREN COLON
    (55) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 96
    COMMA           shift and go to state 68


state 91

    (28) function_declaration -> VOID IDENTIFIER LPAREN argument_list . RPAREN COLON
    (55) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 97
    COMMA           shift and go to state 68


state 92

    (55) argument_list -> argument_list COMMA expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    RPAREN          reduce using rule 55 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 55 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 93

    (16) block_if_else_statement -> IF expression COLON statements block_else_statement .

    IDENTIFIER      reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)
    PRINT           reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)
    IF              reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)
    FOR             reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)
    WHILE           reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)
    STANDARD_DATATYPE reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)
    VOID            reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)
    $end            reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)
    ELSE            reduce using rule 16 (block_if_else_statement -> IF expression COLON statements block_else_statement .)


state 94

    (17) block_else_statement -> ELSE . statements
    (2) statements -> . statement statements
    (3) statements -> . statement
    (4) statements -> . empty
    (5) statement -> . conditional
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . declaration
    (10) statement -> . empty
    (56) empty -> .
    (11) conditional -> . inline_if_statement
    (12) conditional -> . block_if_else_statement
    (13) conditional -> . for_statement
    (14) conditional -> . while_statement
    (52) assignment_statement -> . IDENTIFIER EQUAL expression
    (53) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (23) print_statement -> . PRINT LPAREN expression RPAREN
    (24) declaration -> . var_declaration
    (25) declaration -> . function_declaration
    (15) inline_if_statement -> . IF expression COLON statements
    (16) block_if_else_statement -> . IF expression COLON statements block_else_statement
    (18) for_statement -> . FOR expression IN range_expression
    (20) while_statement -> . WHILE expression COLON statements
    (26) var_declaration -> . STANDARD_DATATYPE IDENTIFIER
    (27) var_declaration -> . STANDARD_DATATYPE assignment_statement
    (28) function_declaration -> . VOID IDENTIFIER LPAREN argument_list RPAREN COLON
    (29) function_declaration -> . STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for STANDARD_DATATYPE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    $end            reduce using rule 56 (empty -> .)
    ELSE            reduce using rule 56 (empty -> .)
    IDENTIFIER      shift and go to state 14
    PRINT           shift and go to state 15
    IF              shift and go to state 18
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    STANDARD_DATATYPE shift and go to state 21
    VOID            shift and go to state 22

  ! IDENTIFIER      [ reduce using rule 56 (empty -> .) ]
  ! PRINT           [ reduce using rule 56 (empty -> .) ]
  ! IF              [ reduce using rule 56 (empty -> .) ]
  ! FOR             [ reduce using rule 56 (empty -> .) ]
  ! WHILE           [ reduce using rule 56 (empty -> .) ]
  ! STANDARD_DATATYPE [ reduce using rule 56 (empty -> .) ]
  ! VOID            [ reduce using rule 56 (empty -> .) ]

    statements                     shift and go to state 98
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    conditional                    shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    declaration                    shift and go to state 9
    inline_if_statement            shift and go to state 10
    block_if_else_statement        shift and go to state 11
    for_statement                  shift and go to state 12
    while_statement                shift and go to state 13
    var_declaration                shift and go to state 16
    function_declaration           shift and go to state 17

state 95

    (19) range_expression -> RANGE expression . COMMA expression
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    COMMA           shift and go to state 99
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61


state 96

    (29) function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN . COLON

    COLON           shift and go to state 100


state 97

    (28) function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN . COLON

    COLON           shift and go to state 101


state 98

    (17) block_else_statement -> ELSE statements .

    $end            reduce using rule 17 (block_else_statement -> ELSE statements .)
    ELSE            reduce using rule 17 (block_else_statement -> ELSE statements .)
    IDENTIFIER      reduce using rule 17 (block_else_statement -> ELSE statements .)
    PRINT           reduce using rule 17 (block_else_statement -> ELSE statements .)
    IF              reduce using rule 17 (block_else_statement -> ELSE statements .)
    FOR             reduce using rule 17 (block_else_statement -> ELSE statements .)
    WHILE           reduce using rule 17 (block_else_statement -> ELSE statements .)
    STANDARD_DATATYPE reduce using rule 17 (block_else_statement -> ELSE statements .)
    VOID            reduce using rule 17 (block_else_statement -> ELSE statements .)


state 99

    (19) range_expression -> RANGE expression COMMA . expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) expression -> . expression TIMES term
    (34) expression -> . expression DIVIDE term
    (35) expression -> . expression EQUALEQUAL term
    (36) expression -> . expression EQUAL term
    (37) expression -> . expression NOTEQUAL term
    (38) expression -> . expression LESSEQUAL term
    (39) expression -> . expression GREATEREQUAL term
    (40) expression -> . expression PLUSEQUAL term
    (41) expression -> . expression MINUSEQUAL term
    (42) expression -> . expression TIMESEQUAL term
    (43) expression -> . expression DIVIDEEQUAL term
    (44) expression -> . expression GREATERTHAN term
    (45) expression -> . expression LESSTHAN term
    (46) expression -> . LPAREN expression RPAREN
    (47) term -> . INTEGER
    (48) term -> . FLOAT
    (49) term -> . STRING
    (50) term -> . IDENTIFIER
    (51) term -> . bool
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    IDENTIFIER      shift and go to state 33
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36

    expression                     shift and go to state 102
    term                           shift and go to state 28
    bool                           shift and go to state 34

state 100

    (29) function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .

    IDENTIFIER      reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)
    PRINT           reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)
    IF              reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)
    FOR             reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)
    WHILE           reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)
    STANDARD_DATATYPE reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)
    VOID            reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)
    $end            reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)
    ELSE            reduce using rule 29 (function_declaration -> STANDARD_DATATYPE IDENTIFIER LPAREN argument_list RPAREN COLON .)


state 101

    (28) function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .

    IDENTIFIER      reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)
    PRINT           reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)
    IF              reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)
    FOR             reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)
    WHILE           reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)
    STANDARD_DATATYPE reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)
    VOID            reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)
    $end            reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)
    ELSE            reduce using rule 28 (function_declaration -> VOID IDENTIFIER LPAREN argument_list RPAREN COLON .)


state 102

    (19) range_expression -> RANGE expression COMMA expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term
    (33) expression -> expression . TIMES term
    (34) expression -> expression . DIVIDE term
    (35) expression -> expression . EQUALEQUAL term
    (36) expression -> expression . EQUAL term
    (37) expression -> expression . NOTEQUAL term
    (38) expression -> expression . LESSEQUAL term
    (39) expression -> expression . GREATEREQUAL term
    (40) expression -> expression . PLUSEQUAL term
    (41) expression -> expression . MINUSEQUAL term
    (42) expression -> expression . TIMESEQUAL term
    (43) expression -> expression . DIVIDEEQUAL term
    (44) expression -> expression . GREATERTHAN term
    (45) expression -> expression . LESSTHAN term

    IDENTIFIER      reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    PRINT           reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    IF              reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    FOR             reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    WHILE           reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    STANDARD_DATATYPE reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    VOID            reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    $end            reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    ELSE            reduce using rule 19 (range_expression -> RANGE expression COMMA expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUALEQUAL      shift and go to state 51
    EQUAL           shift and go to state 52
    NOTEQUAL        shift and go to state 53
    LESSEQUAL       shift and go to state 54
    GREATEREQUAL    shift and go to state 55
    PLUSEQUAL       shift and go to state 56
    MINUSEQUAL      shift and go to state 57
    TIMESEQUAL      shift and go to state 58
    DIVIDEEQUAL     shift and go to state 59
    GREATERTHAN     shift and go to state 60
    LESSTHAN        shift and go to state 61

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for STANDARD_DATATYPE in state 0 resolved as shift
WARNING: shift/reduce conflict for VOID in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 3 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 3 resolved as shift
WARNING: shift/reduce conflict for STANDARD_DATATYPE in state 3 resolved as shift
WARNING: shift/reduce conflict for VOID in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 46 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 46 resolved as shift
WARNING: shift/reduce conflict for IF in state 46 resolved as shift
WARNING: shift/reduce conflict for FOR in state 46 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 46 resolved as shift
WARNING: shift/reduce conflict for STANDARD_DATATYPE in state 46 resolved as shift
WARNING: shift/reduce conflict for VOID in state 46 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 64 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 64 resolved as shift
WARNING: shift/reduce conflict for IF in state 64 resolved as shift
WARNING: shift/reduce conflict for FOR in state 64 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 64 resolved as shift
WARNING: shift/reduce conflict for STANDARD_DATATYPE in state 64 resolved as shift
WARNING: shift/reduce conflict for VOID in state 64 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 70 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 94 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 94 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for FOR in state 94 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 94 resolved as shift
WARNING: shift/reduce conflict for STANDARD_DATATYPE in state 94 resolved as shift
WARNING: shift/reduce conflict for VOID in state 94 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (statements -> statement)
WARNING: rejected rule (empty -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (statements -> empty)
WARNING: rejected rule (statement -> empty) in state 4
WARNING: Rule (statement -> empty) is never reduced

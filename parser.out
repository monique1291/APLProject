Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    Bool
    CASE
    CLASS
    COMMENTS
    DEF
    DIVIDEEQUAL
    DO
    DOUBLEQUOTES
    Double
    ELIF
    EQUALEQUAL
    EQUALTO
    FINALLY
    FUNC
    Float
    GLOBAL
    GREATEREQUAL
    GREATERTHAN
    IMPORT
    INT
    IS
    LCURVEDBRACE
    LESSEQUAL
    LESSTHAN
    LSQUAREDBRACKET
    MAIN
    MINUSEQUAL
    NOT
    NOTEQUAL
    OR
    PLUSEQUAL
    RCURVEDBRACE
    RESERVEDWORD
    RETURN
    RSQUAREDBRACKET
    RULE_CLOSE
    RULE_OPEN
    SINGLEQUOTES
    SWITCH
    Str
    THEN
    TIMESEQUAL
    UNTIL

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement statements
Rule 2     statements -> statement
Rule 3     statements -> empty
Rule 4     statement -> conditional
Rule 5     statement -> expression
Rule 6     statement -> assignment_statement
Rule 7     statement -> function_call
Rule 8     statement -> empty
Rule 9     conditional -> inline_if_statement
Rule 10    conditional -> for_statement
Rule 11    conditional -> while_statement
Rule 12    inline_if_statement -> IF expression COLON statements
Rule 13    inline_if_statement -> IF expression COLON statements ELSE statements
Rule 14    for_statement -> FOR expression IN range_expression
Rule 15    range_expression -> RANGE expression COMMA expression
Rule 16    while_statement -> WHILE expression COLON statements
Rule 17    bool -> TRUE
Rule 18    bool -> FALSE
Rule 19    print_statement -> PRINT LPAREN expression RPAREN
Rule 20    expression -> term
Rule 21    expression -> expression PLUS term
Rule 22    expression -> expression MINUS term
Rule 23    expression -> expression TIMES term
Rule 24    expression -> expression DIVIDE term
Rule 25    expression -> expression EQUAL term
Rule 26    expression -> STRING
Rule 27    term -> INTEGER
Rule 28    term -> FLOAT
Rule 29    term -> STRING
Rule 30    term -> bool
Rule 31    term -> IDENTIFIER
Rule 32    term -> LPAREN expression RPAREN
Rule 33    assignment_statement -> IDENTIFIER EQUAL expression
Rule 34    function_call -> IDENTIFIER LPAREN argument_list RPAREN
Rule 35    function_call -> print_statement
Rule 36    argument_list -> expression
Rule 37    argument_list -> argument_list COMMA expression
Rule 38    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
BREAK                : 
Bool                 : 
CASE                 : 
CLASS                : 
COLON                : 12 13 16
COMMA                : 15 37
COMMENTS             : 
DEF                  : 
DIVIDE               : 24
DIVIDEEQUAL          : 
DO                   : 
DOUBLEQUOTES         : 
Double               : 
ELIF                 : 
ELSE                 : 13
EQUAL                : 25 33
EQUALEQUAL           : 
EQUALTO              : 
FALSE                : 18
FINALLY              : 
FLOAT                : 28
FOR                  : 14
FUNC                 : 
Float                : 
GLOBAL               : 
GREATEREQUAL         : 
GREATERTHAN          : 
IDENTIFIER           : 31 33 34
IF                   : 12 13
IMPORT               : 
IN                   : 14
INT                  : 
INTEGER              : 27
IS                   : 
LCURVEDBRACE         : 
LESSEQUAL            : 
LESSTHAN             : 
LPAREN               : 19 32 34
LSQUAREDBRACKET      : 
MAIN                 : 
MINUS                : 22
MINUSEQUAL           : 
NOT                  : 
NOTEQUAL             : 
OR                   : 
PLUS                 : 21
PLUSEQUAL            : 
PRINT                : 19
RANGE                : 15
RCURVEDBRACE         : 
RESERVEDWORD         : 
RETURN               : 
RPAREN               : 19 32 34
RSQUAREDBRACKET      : 
RULE_CLOSE           : 
RULE_OPEN            : 
SINGLEQUOTES         : 
STRING               : 26 29
SWITCH               : 
Str                  : 
THEN                 : 
TIMES                : 23
TIMESEQUAL           : 
TRUE                 : 17
UNTIL                : 
WHILE                : 16
error                : 

Nonterminals, with rules where they appear

argument_list        : 34 37
assignment_statement : 6
bool                 : 30
conditional          : 4
empty                : 3 8
expression           : 5 12 13 14 15 15 16 19 21 22 23 24 25 32 33 36 37
for_statement        : 10
function_call        : 7
inline_if_statement  : 9
print_statement      : 35
range_expression     : 14
statement            : 1 2
statements           : 1 12 13 13 16 0
term                 : 20 21 22 23 24 25
while_statement      : 11

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . empty
    (38) empty -> .
    (9) conditional -> . inline_if_statement
    (10) conditional -> . for_statement
    (11) conditional -> . while_statement
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (33) assignment_statement -> . IDENTIFIER EQUAL expression
    (34) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (35) function_call -> . print_statement
    (12) inline_if_statement -> . IF expression COLON statements
    (13) inline_if_statement -> . IF expression COLON statements ELSE statements
    (14) for_statement -> . FOR expression IN range_expression
    (16) while_statement -> . WHILE expression COLON statements
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (19) print_statement -> . PRINT LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 38 (empty -> .)
    STRING          shift and go to state 12
    IDENTIFIER      shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    LPAREN          shift and go to state 14
    PRINT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

  ! STRING          [ reduce using rule 38 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 38 (empty -> .) ]
  ! IF              [ reduce using rule 38 (empty -> .) ]
  ! FOR             [ reduce using rule 38 (empty -> .) ]
  ! WHILE           [ reduce using rule 38 (empty -> .) ]
  ! INTEGER         [ reduce using rule 38 (empty -> .) ]
  ! FLOAT           [ reduce using rule 38 (empty -> .) ]
  ! LPAREN          [ reduce using rule 38 (empty -> .) ]
  ! PRINT           [ reduce using rule 38 (empty -> .) ]
  ! TRUE            [ reduce using rule 38 (empty -> .) ]
  ! FALSE           [ reduce using rule 38 (empty -> .) ]

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    expression                     shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    inline_if_statement            shift and go to state 8
    for_statement                  shift and go to state 9
    while_statement                shift and go to state 10
    term                           shift and go to state 11
    print_statement                shift and go to state 15
    bool                           shift and go to state 21

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement . statements
    (2) statements -> statement .
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . empty
    (38) empty -> .
    (9) conditional -> . inline_if_statement
    (10) conditional -> . for_statement
    (11) conditional -> . while_statement
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (33) assignment_statement -> . IDENTIFIER EQUAL expression
    (34) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (35) function_call -> . print_statement
    (12) inline_if_statement -> . IF expression COLON statements
    (13) inline_if_statement -> . IF expression COLON statements ELSE statements
    (14) for_statement -> . FOR expression IN range_expression
    (16) while_statement -> . WHILE expression COLON statements
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (19) print_statement -> . PRINT LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

  ! reduce/reduce conflict for $end resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for ELSE resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for STRING resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for IF resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for FOR resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for WHILE resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for INTEGER resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for PRINT resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for TRUE resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for FALSE resolved using rule 2 (statements -> statement .)
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    STRING          shift and go to state 12
    IDENTIFIER      shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    LPAREN          shift and go to state 14
    PRINT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

  ! STRING          [ reduce using rule 2 (statements -> statement .) ]
  ! IDENTIFIER      [ reduce using rule 2 (statements -> statement .) ]
  ! IF              [ reduce using rule 2 (statements -> statement .) ]
  ! FOR             [ reduce using rule 2 (statements -> statement .) ]
  ! WHILE           [ reduce using rule 2 (statements -> statement .) ]
  ! INTEGER         [ reduce using rule 2 (statements -> statement .) ]
  ! FLOAT           [ reduce using rule 2 (statements -> statement .) ]
  ! LPAREN          [ reduce using rule 2 (statements -> statement .) ]
  ! PRINT           [ reduce using rule 2 (statements -> statement .) ]
  ! TRUE            [ reduce using rule 2 (statements -> statement .) ]
  ! FALSE           [ reduce using rule 2 (statements -> statement .) ]
  ! $end            [ reduce using rule 38 (empty -> .) ]
  ! ELSE            [ reduce using rule 38 (empty -> .) ]
  ! STRING          [ reduce using rule 38 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 38 (empty -> .) ]
  ! IF              [ reduce using rule 38 (empty -> .) ]
  ! FOR             [ reduce using rule 38 (empty -> .) ]
  ! WHILE           [ reduce using rule 38 (empty -> .) ]
  ! INTEGER         [ reduce using rule 38 (empty -> .) ]
  ! FLOAT           [ reduce using rule 38 (empty -> .) ]
  ! LPAREN          [ reduce using rule 38 (empty -> .) ]
  ! PRINT           [ reduce using rule 38 (empty -> .) ]
  ! TRUE            [ reduce using rule 38 (empty -> .) ]
  ! FALSE           [ reduce using rule 38 (empty -> .) ]

    statement                      shift and go to state 2
    statements                     shift and go to state 25
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    expression                     shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    inline_if_statement            shift and go to state 8
    for_statement                  shift and go to state 9
    while_statement                shift and go to state 10
    term                           shift and go to state 11
    print_statement                shift and go to state 15
    bool                           shift and go to state 21

state 3

    (3) statements -> empty .
    (8) statement -> empty .

  ! reduce/reduce conflict for STRING resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for INTEGER resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (statements -> empty .)
    $end            reduce using rule 3 (statements -> empty .)
    ELSE            reduce using rule 3 (statements -> empty .)
    STRING          reduce using rule 3 (statements -> empty .)
    IDENTIFIER      reduce using rule 3 (statements -> empty .)
    IF              reduce using rule 3 (statements -> empty .)
    FOR             reduce using rule 3 (statements -> empty .)
    WHILE           reduce using rule 3 (statements -> empty .)
    INTEGER         reduce using rule 3 (statements -> empty .)
    FLOAT           reduce using rule 3 (statements -> empty .)
    LPAREN          reduce using rule 3 (statements -> empty .)
    PRINT           reduce using rule 3 (statements -> empty .)
    TRUE            reduce using rule 3 (statements -> empty .)
    FALSE           reduce using rule 3 (statements -> empty .)

  ! STRING          [ reduce using rule 8 (statement -> empty .) ]
  ! IDENTIFIER      [ reduce using rule 8 (statement -> empty .) ]
  ! IF              [ reduce using rule 8 (statement -> empty .) ]
  ! FOR             [ reduce using rule 8 (statement -> empty .) ]
  ! WHILE           [ reduce using rule 8 (statement -> empty .) ]
  ! INTEGER         [ reduce using rule 8 (statement -> empty .) ]
  ! FLOAT           [ reduce using rule 8 (statement -> empty .) ]
  ! LPAREN          [ reduce using rule 8 (statement -> empty .) ]
  ! PRINT           [ reduce using rule 8 (statement -> empty .) ]
  ! TRUE            [ reduce using rule 8 (statement -> empty .) ]
  ! FALSE           [ reduce using rule 8 (statement -> empty .) ]
  ! $end            [ reduce using rule 8 (statement -> empty .) ]
  ! ELSE            [ reduce using rule 8 (statement -> empty .) ]


state 4

    (4) statement -> conditional .

    STRING          reduce using rule 4 (statement -> conditional .)
    IDENTIFIER      reduce using rule 4 (statement -> conditional .)
    IF              reduce using rule 4 (statement -> conditional .)
    FOR             reduce using rule 4 (statement -> conditional .)
    WHILE           reduce using rule 4 (statement -> conditional .)
    INTEGER         reduce using rule 4 (statement -> conditional .)
    FLOAT           reduce using rule 4 (statement -> conditional .)
    LPAREN          reduce using rule 4 (statement -> conditional .)
    PRINT           reduce using rule 4 (statement -> conditional .)
    TRUE            reduce using rule 4 (statement -> conditional .)
    FALSE           reduce using rule 4 (statement -> conditional .)
    $end            reduce using rule 4 (statement -> conditional .)
    ELSE            reduce using rule 4 (statement -> conditional .)


state 5

    (5) statement -> expression .
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    STRING          reduce using rule 5 (statement -> expression .)
    IDENTIFIER      reduce using rule 5 (statement -> expression .)
    IF              reduce using rule 5 (statement -> expression .)
    FOR             reduce using rule 5 (statement -> expression .)
    WHILE           reduce using rule 5 (statement -> expression .)
    INTEGER         reduce using rule 5 (statement -> expression .)
    FLOAT           reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    PRINT           reduce using rule 5 (statement -> expression .)
    TRUE            reduce using rule 5 (statement -> expression .)
    FALSE           reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    ELSE            reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 6

    (6) statement -> assignment_statement .

    STRING          reduce using rule 6 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 6 (statement -> assignment_statement .)
    IF              reduce using rule 6 (statement -> assignment_statement .)
    FOR             reduce using rule 6 (statement -> assignment_statement .)
    WHILE           reduce using rule 6 (statement -> assignment_statement .)
    INTEGER         reduce using rule 6 (statement -> assignment_statement .)
    FLOAT           reduce using rule 6 (statement -> assignment_statement .)
    LPAREN          reduce using rule 6 (statement -> assignment_statement .)
    PRINT           reduce using rule 6 (statement -> assignment_statement .)
    TRUE            reduce using rule 6 (statement -> assignment_statement .)
    FALSE           reduce using rule 6 (statement -> assignment_statement .)
    $end            reduce using rule 6 (statement -> assignment_statement .)
    ELSE            reduce using rule 6 (statement -> assignment_statement .)


state 7

    (7) statement -> function_call .

    STRING          reduce using rule 7 (statement -> function_call .)
    IDENTIFIER      reduce using rule 7 (statement -> function_call .)
    IF              reduce using rule 7 (statement -> function_call .)
    FOR             reduce using rule 7 (statement -> function_call .)
    WHILE           reduce using rule 7 (statement -> function_call .)
    INTEGER         reduce using rule 7 (statement -> function_call .)
    FLOAT           reduce using rule 7 (statement -> function_call .)
    LPAREN          reduce using rule 7 (statement -> function_call .)
    PRINT           reduce using rule 7 (statement -> function_call .)
    TRUE            reduce using rule 7 (statement -> function_call .)
    FALSE           reduce using rule 7 (statement -> function_call .)
    $end            reduce using rule 7 (statement -> function_call .)
    ELSE            reduce using rule 7 (statement -> function_call .)


state 8

    (9) conditional -> inline_if_statement .

    STRING          reduce using rule 9 (conditional -> inline_if_statement .)
    IDENTIFIER      reduce using rule 9 (conditional -> inline_if_statement .)
    IF              reduce using rule 9 (conditional -> inline_if_statement .)
    FOR             reduce using rule 9 (conditional -> inline_if_statement .)
    WHILE           reduce using rule 9 (conditional -> inline_if_statement .)
    INTEGER         reduce using rule 9 (conditional -> inline_if_statement .)
    FLOAT           reduce using rule 9 (conditional -> inline_if_statement .)
    LPAREN          reduce using rule 9 (conditional -> inline_if_statement .)
    PRINT           reduce using rule 9 (conditional -> inline_if_statement .)
    TRUE            reduce using rule 9 (conditional -> inline_if_statement .)
    FALSE           reduce using rule 9 (conditional -> inline_if_statement .)
    $end            reduce using rule 9 (conditional -> inline_if_statement .)
    ELSE            reduce using rule 9 (conditional -> inline_if_statement .)


state 9

    (10) conditional -> for_statement .

    STRING          reduce using rule 10 (conditional -> for_statement .)
    IDENTIFIER      reduce using rule 10 (conditional -> for_statement .)
    IF              reduce using rule 10 (conditional -> for_statement .)
    FOR             reduce using rule 10 (conditional -> for_statement .)
    WHILE           reduce using rule 10 (conditional -> for_statement .)
    INTEGER         reduce using rule 10 (conditional -> for_statement .)
    FLOAT           reduce using rule 10 (conditional -> for_statement .)
    LPAREN          reduce using rule 10 (conditional -> for_statement .)
    PRINT           reduce using rule 10 (conditional -> for_statement .)
    TRUE            reduce using rule 10 (conditional -> for_statement .)
    FALSE           reduce using rule 10 (conditional -> for_statement .)
    $end            reduce using rule 10 (conditional -> for_statement .)
    ELSE            reduce using rule 10 (conditional -> for_statement .)


state 10

    (11) conditional -> while_statement .

    STRING          reduce using rule 11 (conditional -> while_statement .)
    IDENTIFIER      reduce using rule 11 (conditional -> while_statement .)
    IF              reduce using rule 11 (conditional -> while_statement .)
    FOR             reduce using rule 11 (conditional -> while_statement .)
    WHILE           reduce using rule 11 (conditional -> while_statement .)
    INTEGER         reduce using rule 11 (conditional -> while_statement .)
    FLOAT           reduce using rule 11 (conditional -> while_statement .)
    LPAREN          reduce using rule 11 (conditional -> while_statement .)
    PRINT           reduce using rule 11 (conditional -> while_statement .)
    TRUE            reduce using rule 11 (conditional -> while_statement .)
    FALSE           reduce using rule 11 (conditional -> while_statement .)
    $end            reduce using rule 11 (conditional -> while_statement .)
    ELSE            reduce using rule 11 (conditional -> while_statement .)


state 11

    (20) expression -> term .

    PLUS            reduce using rule 20 (expression -> term .)
    MINUS           reduce using rule 20 (expression -> term .)
    TIMES           reduce using rule 20 (expression -> term .)
    DIVIDE          reduce using rule 20 (expression -> term .)
    EQUAL           reduce using rule 20 (expression -> term .)
    STRING          reduce using rule 20 (expression -> term .)
    IDENTIFIER      reduce using rule 20 (expression -> term .)
    IF              reduce using rule 20 (expression -> term .)
    FOR             reduce using rule 20 (expression -> term .)
    WHILE           reduce using rule 20 (expression -> term .)
    INTEGER         reduce using rule 20 (expression -> term .)
    FLOAT           reduce using rule 20 (expression -> term .)
    LPAREN          reduce using rule 20 (expression -> term .)
    PRINT           reduce using rule 20 (expression -> term .)
    TRUE            reduce using rule 20 (expression -> term .)
    FALSE           reduce using rule 20 (expression -> term .)
    $end            reduce using rule 20 (expression -> term .)
    ELSE            reduce using rule 20 (expression -> term .)
    RPAREN          reduce using rule 20 (expression -> term .)
    COLON           reduce using rule 20 (expression -> term .)
    IN              reduce using rule 20 (expression -> term .)
    COMMA           reduce using rule 20 (expression -> term .)


state 12

    (26) expression -> STRING .
    (29) term -> STRING .

  ! reduce/reduce conflict for PLUS resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for MINUS resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for TIMES resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for EQUAL resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for IF resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for FOR resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for INTEGER resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for FLOAT resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for LPAREN resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for PRINT resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for TRUE resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for FALSE resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for RPAREN resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for COLON resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for IN resolved using rule 26 (expression -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 26 (expression -> STRING .)
    PLUS            reduce using rule 26 (expression -> STRING .)
    MINUS           reduce using rule 26 (expression -> STRING .)
    TIMES           reduce using rule 26 (expression -> STRING .)
    DIVIDE          reduce using rule 26 (expression -> STRING .)
    EQUAL           reduce using rule 26 (expression -> STRING .)
    STRING          reduce using rule 26 (expression -> STRING .)
    IDENTIFIER      reduce using rule 26 (expression -> STRING .)
    IF              reduce using rule 26 (expression -> STRING .)
    FOR             reduce using rule 26 (expression -> STRING .)
    WHILE           reduce using rule 26 (expression -> STRING .)
    INTEGER         reduce using rule 26 (expression -> STRING .)
    FLOAT           reduce using rule 26 (expression -> STRING .)
    LPAREN          reduce using rule 26 (expression -> STRING .)
    PRINT           reduce using rule 26 (expression -> STRING .)
    TRUE            reduce using rule 26 (expression -> STRING .)
    FALSE           reduce using rule 26 (expression -> STRING .)
    $end            reduce using rule 26 (expression -> STRING .)
    ELSE            reduce using rule 26 (expression -> STRING .)
    RPAREN          reduce using rule 26 (expression -> STRING .)
    COLON           reduce using rule 26 (expression -> STRING .)
    IN              reduce using rule 26 (expression -> STRING .)
    COMMA           reduce using rule 26 (expression -> STRING .)

  ! PLUS            [ reduce using rule 29 (term -> STRING .) ]
  ! MINUS           [ reduce using rule 29 (term -> STRING .) ]
  ! TIMES           [ reduce using rule 29 (term -> STRING .) ]
  ! DIVIDE          [ reduce using rule 29 (term -> STRING .) ]
  ! EQUAL           [ reduce using rule 29 (term -> STRING .) ]
  ! STRING          [ reduce using rule 29 (term -> STRING .) ]
  ! IDENTIFIER      [ reduce using rule 29 (term -> STRING .) ]
  ! IF              [ reduce using rule 29 (term -> STRING .) ]
  ! FOR             [ reduce using rule 29 (term -> STRING .) ]
  ! WHILE           [ reduce using rule 29 (term -> STRING .) ]
  ! INTEGER         [ reduce using rule 29 (term -> STRING .) ]
  ! FLOAT           [ reduce using rule 29 (term -> STRING .) ]
  ! LPAREN          [ reduce using rule 29 (term -> STRING .) ]
  ! PRINT           [ reduce using rule 29 (term -> STRING .) ]
  ! TRUE            [ reduce using rule 29 (term -> STRING .) ]
  ! FALSE           [ reduce using rule 29 (term -> STRING .) ]
  ! $end            [ reduce using rule 29 (term -> STRING .) ]
  ! ELSE            [ reduce using rule 29 (term -> STRING .) ]
  ! RPAREN          [ reduce using rule 29 (term -> STRING .) ]
  ! COLON           [ reduce using rule 29 (term -> STRING .) ]
  ! IN              [ reduce using rule 29 (term -> STRING .) ]
  ! COMMA           [ reduce using rule 29 (term -> STRING .) ]


state 13

    (33) assignment_statement -> IDENTIFIER . EQUAL expression
    (34) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (31) term -> IDENTIFIER .

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           shift and go to state 31
    LPAREN          shift and go to state 32
    PLUS            reduce using rule 31 (term -> IDENTIFIER .)
    MINUS           reduce using rule 31 (term -> IDENTIFIER .)
    TIMES           reduce using rule 31 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 31 (term -> IDENTIFIER .)
    STRING          reduce using rule 31 (term -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 31 (term -> IDENTIFIER .)
    IF              reduce using rule 31 (term -> IDENTIFIER .)
    FOR             reduce using rule 31 (term -> IDENTIFIER .)
    WHILE           reduce using rule 31 (term -> IDENTIFIER .)
    INTEGER         reduce using rule 31 (term -> IDENTIFIER .)
    FLOAT           reduce using rule 31 (term -> IDENTIFIER .)
    PRINT           reduce using rule 31 (term -> IDENTIFIER .)
    TRUE            reduce using rule 31 (term -> IDENTIFIER .)
    FALSE           reduce using rule 31 (term -> IDENTIFIER .)
    $end            reduce using rule 31 (term -> IDENTIFIER .)
    ELSE            reduce using rule 31 (term -> IDENTIFIER .)

  ! EQUAL           [ reduce using rule 31 (term -> IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 31 (term -> IDENTIFIER .) ]


state 14

    (32) term -> LPAREN . expression RPAREN
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 33
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 15

    (35) function_call -> print_statement .

    STRING          reduce using rule 35 (function_call -> print_statement .)
    IDENTIFIER      reduce using rule 35 (function_call -> print_statement .)
    IF              reduce using rule 35 (function_call -> print_statement .)
    FOR             reduce using rule 35 (function_call -> print_statement .)
    WHILE           reduce using rule 35 (function_call -> print_statement .)
    INTEGER         reduce using rule 35 (function_call -> print_statement .)
    FLOAT           reduce using rule 35 (function_call -> print_statement .)
    LPAREN          reduce using rule 35 (function_call -> print_statement .)
    PRINT           reduce using rule 35 (function_call -> print_statement .)
    TRUE            reduce using rule 35 (function_call -> print_statement .)
    FALSE           reduce using rule 35 (function_call -> print_statement .)
    $end            reduce using rule 35 (function_call -> print_statement .)
    ELSE            reduce using rule 35 (function_call -> print_statement .)


state 16

    (12) inline_if_statement -> IF . expression COLON statements
    (13) inline_if_statement -> IF . expression COLON statements ELSE statements
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 35
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 17

    (14) for_statement -> FOR . expression IN range_expression
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 36
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 18

    (16) while_statement -> WHILE . expression COLON statements
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 37
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 19

    (27) term -> INTEGER .

    PLUS            reduce using rule 27 (term -> INTEGER .)
    MINUS           reduce using rule 27 (term -> INTEGER .)
    TIMES           reduce using rule 27 (term -> INTEGER .)
    DIVIDE          reduce using rule 27 (term -> INTEGER .)
    EQUAL           reduce using rule 27 (term -> INTEGER .)
    STRING          reduce using rule 27 (term -> INTEGER .)
    IDENTIFIER      reduce using rule 27 (term -> INTEGER .)
    IF              reduce using rule 27 (term -> INTEGER .)
    FOR             reduce using rule 27 (term -> INTEGER .)
    WHILE           reduce using rule 27 (term -> INTEGER .)
    INTEGER         reduce using rule 27 (term -> INTEGER .)
    FLOAT           reduce using rule 27 (term -> INTEGER .)
    LPAREN          reduce using rule 27 (term -> INTEGER .)
    PRINT           reduce using rule 27 (term -> INTEGER .)
    TRUE            reduce using rule 27 (term -> INTEGER .)
    FALSE           reduce using rule 27 (term -> INTEGER .)
    $end            reduce using rule 27 (term -> INTEGER .)
    ELSE            reduce using rule 27 (term -> INTEGER .)
    RPAREN          reduce using rule 27 (term -> INTEGER .)
    COLON           reduce using rule 27 (term -> INTEGER .)
    IN              reduce using rule 27 (term -> INTEGER .)
    COMMA           reduce using rule 27 (term -> INTEGER .)


state 20

    (28) term -> FLOAT .

    PLUS            reduce using rule 28 (term -> FLOAT .)
    MINUS           reduce using rule 28 (term -> FLOAT .)
    TIMES           reduce using rule 28 (term -> FLOAT .)
    DIVIDE          reduce using rule 28 (term -> FLOAT .)
    EQUAL           reduce using rule 28 (term -> FLOAT .)
    STRING          reduce using rule 28 (term -> FLOAT .)
    IDENTIFIER      reduce using rule 28 (term -> FLOAT .)
    IF              reduce using rule 28 (term -> FLOAT .)
    FOR             reduce using rule 28 (term -> FLOAT .)
    WHILE           reduce using rule 28 (term -> FLOAT .)
    INTEGER         reduce using rule 28 (term -> FLOAT .)
    FLOAT           reduce using rule 28 (term -> FLOAT .)
    LPAREN          reduce using rule 28 (term -> FLOAT .)
    PRINT           reduce using rule 28 (term -> FLOAT .)
    TRUE            reduce using rule 28 (term -> FLOAT .)
    FALSE           reduce using rule 28 (term -> FLOAT .)
    $end            reduce using rule 28 (term -> FLOAT .)
    ELSE            reduce using rule 28 (term -> FLOAT .)
    RPAREN          reduce using rule 28 (term -> FLOAT .)
    COLON           reduce using rule 28 (term -> FLOAT .)
    IN              reduce using rule 28 (term -> FLOAT .)
    COMMA           reduce using rule 28 (term -> FLOAT .)


state 21

    (30) term -> bool .

    PLUS            reduce using rule 30 (term -> bool .)
    MINUS           reduce using rule 30 (term -> bool .)
    TIMES           reduce using rule 30 (term -> bool .)
    DIVIDE          reduce using rule 30 (term -> bool .)
    EQUAL           reduce using rule 30 (term -> bool .)
    STRING          reduce using rule 30 (term -> bool .)
    IDENTIFIER      reduce using rule 30 (term -> bool .)
    IF              reduce using rule 30 (term -> bool .)
    FOR             reduce using rule 30 (term -> bool .)
    WHILE           reduce using rule 30 (term -> bool .)
    INTEGER         reduce using rule 30 (term -> bool .)
    FLOAT           reduce using rule 30 (term -> bool .)
    LPAREN          reduce using rule 30 (term -> bool .)
    PRINT           reduce using rule 30 (term -> bool .)
    TRUE            reduce using rule 30 (term -> bool .)
    FALSE           reduce using rule 30 (term -> bool .)
    $end            reduce using rule 30 (term -> bool .)
    ELSE            reduce using rule 30 (term -> bool .)
    RPAREN          reduce using rule 30 (term -> bool .)
    COLON           reduce using rule 30 (term -> bool .)
    IN              reduce using rule 30 (term -> bool .)
    COMMA           reduce using rule 30 (term -> bool .)


state 22

    (19) print_statement -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 38


state 23

    (17) bool -> TRUE .

    PLUS            reduce using rule 17 (bool -> TRUE .)
    MINUS           reduce using rule 17 (bool -> TRUE .)
    TIMES           reduce using rule 17 (bool -> TRUE .)
    DIVIDE          reduce using rule 17 (bool -> TRUE .)
    EQUAL           reduce using rule 17 (bool -> TRUE .)
    STRING          reduce using rule 17 (bool -> TRUE .)
    IDENTIFIER      reduce using rule 17 (bool -> TRUE .)
    IF              reduce using rule 17 (bool -> TRUE .)
    FOR             reduce using rule 17 (bool -> TRUE .)
    WHILE           reduce using rule 17 (bool -> TRUE .)
    INTEGER         reduce using rule 17 (bool -> TRUE .)
    FLOAT           reduce using rule 17 (bool -> TRUE .)
    LPAREN          reduce using rule 17 (bool -> TRUE .)
    PRINT           reduce using rule 17 (bool -> TRUE .)
    TRUE            reduce using rule 17 (bool -> TRUE .)
    FALSE           reduce using rule 17 (bool -> TRUE .)
    $end            reduce using rule 17 (bool -> TRUE .)
    ELSE            reduce using rule 17 (bool -> TRUE .)
    RPAREN          reduce using rule 17 (bool -> TRUE .)
    COLON           reduce using rule 17 (bool -> TRUE .)
    IN              reduce using rule 17 (bool -> TRUE .)
    COMMA           reduce using rule 17 (bool -> TRUE .)


state 24

    (18) bool -> FALSE .

    PLUS            reduce using rule 18 (bool -> FALSE .)
    MINUS           reduce using rule 18 (bool -> FALSE .)
    TIMES           reduce using rule 18 (bool -> FALSE .)
    DIVIDE          reduce using rule 18 (bool -> FALSE .)
    EQUAL           reduce using rule 18 (bool -> FALSE .)
    STRING          reduce using rule 18 (bool -> FALSE .)
    IDENTIFIER      reduce using rule 18 (bool -> FALSE .)
    IF              reduce using rule 18 (bool -> FALSE .)
    FOR             reduce using rule 18 (bool -> FALSE .)
    WHILE           reduce using rule 18 (bool -> FALSE .)
    INTEGER         reduce using rule 18 (bool -> FALSE .)
    FLOAT           reduce using rule 18 (bool -> FALSE .)
    LPAREN          reduce using rule 18 (bool -> FALSE .)
    PRINT           reduce using rule 18 (bool -> FALSE .)
    TRUE            reduce using rule 18 (bool -> FALSE .)
    FALSE           reduce using rule 18 (bool -> FALSE .)
    $end            reduce using rule 18 (bool -> FALSE .)
    ELSE            reduce using rule 18 (bool -> FALSE .)
    RPAREN          reduce using rule 18 (bool -> FALSE .)
    COLON           reduce using rule 18 (bool -> FALSE .)
    IN              reduce using rule 18 (bool -> FALSE .)
    COMMA           reduce using rule 18 (bool -> FALSE .)


state 25

    (1) statements -> statement statements .

    $end            reduce using rule 1 (statements -> statement statements .)
    ELSE            reduce using rule 1 (statements -> statement statements .)
    STRING          reduce using rule 1 (statements -> statement statements .)
    IDENTIFIER      reduce using rule 1 (statements -> statement statements .)
    IF              reduce using rule 1 (statements -> statement statements .)
    FOR             reduce using rule 1 (statements -> statement statements .)
    WHILE           reduce using rule 1 (statements -> statement statements .)
    INTEGER         reduce using rule 1 (statements -> statement statements .)
    FLOAT           reduce using rule 1 (statements -> statement statements .)
    LPAREN          reduce using rule 1 (statements -> statement statements .)
    PRINT           reduce using rule 1 (statements -> statement statements .)
    TRUE            reduce using rule 1 (statements -> statement statements .)
    FALSE           reduce using rule 1 (statements -> statement statements .)


state 26

    (21) expression -> expression PLUS . term
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 40
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    term                           shift and go to state 39
    bool                           shift and go to state 21

state 27

    (22) expression -> expression MINUS . term
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 40
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    term                           shift and go to state 41
    bool                           shift and go to state 21

state 28

    (23) expression -> expression TIMES . term
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 40
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    term                           shift and go to state 42
    bool                           shift and go to state 21

state 29

    (24) expression -> expression DIVIDE . term
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 40
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    term                           shift and go to state 43
    bool                           shift and go to state 21

state 30

    (25) expression -> expression EQUAL . term
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    STRING          shift and go to state 40
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    term                           shift and go to state 44
    bool                           shift and go to state 21

state 31

    (33) assignment_statement -> IDENTIFIER EQUAL . expression
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 45
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 32

    (34) function_call -> IDENTIFIER LPAREN . argument_list RPAREN
    (36) argument_list -> . expression
    (37) argument_list -> . argument_list COMMA expression
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    argument_list                  shift and go to state 46
    expression                     shift and go to state 47
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 33

    (32) term -> LPAREN expression . RPAREN
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    RPAREN          shift and go to state 48
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 34

    (31) term -> IDENTIFIER .

    RPAREN          reduce using rule 31 (term -> IDENTIFIER .)
    PLUS            reduce using rule 31 (term -> IDENTIFIER .)
    MINUS           reduce using rule 31 (term -> IDENTIFIER .)
    TIMES           reduce using rule 31 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 31 (term -> IDENTIFIER .)
    EQUAL           reduce using rule 31 (term -> IDENTIFIER .)
    COLON           reduce using rule 31 (term -> IDENTIFIER .)
    IN              reduce using rule 31 (term -> IDENTIFIER .)
    STRING          reduce using rule 31 (term -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 31 (term -> IDENTIFIER .)
    IF              reduce using rule 31 (term -> IDENTIFIER .)
    FOR             reduce using rule 31 (term -> IDENTIFIER .)
    WHILE           reduce using rule 31 (term -> IDENTIFIER .)
    INTEGER         reduce using rule 31 (term -> IDENTIFIER .)
    FLOAT           reduce using rule 31 (term -> IDENTIFIER .)
    LPAREN          reduce using rule 31 (term -> IDENTIFIER .)
    PRINT           reduce using rule 31 (term -> IDENTIFIER .)
    TRUE            reduce using rule 31 (term -> IDENTIFIER .)
    FALSE           reduce using rule 31 (term -> IDENTIFIER .)
    $end            reduce using rule 31 (term -> IDENTIFIER .)
    ELSE            reduce using rule 31 (term -> IDENTIFIER .)
    COMMA           reduce using rule 31 (term -> IDENTIFIER .)


state 35

    (12) inline_if_statement -> IF expression . COLON statements
    (13) inline_if_statement -> IF expression . COLON statements ELSE statements
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    COLON           shift and go to state 49
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 36

    (14) for_statement -> FOR expression . IN range_expression
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    IN              shift and go to state 50
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 37

    (16) while_statement -> WHILE expression . COLON statements
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    COLON           shift and go to state 51
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 38

    (19) print_statement -> PRINT LPAREN . expression RPAREN
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 52
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 39

    (21) expression -> expression PLUS term .

    PLUS            reduce using rule 21 (expression -> expression PLUS term .)
    MINUS           reduce using rule 21 (expression -> expression PLUS term .)
    TIMES           reduce using rule 21 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 21 (expression -> expression PLUS term .)
    EQUAL           reduce using rule 21 (expression -> expression PLUS term .)
    STRING          reduce using rule 21 (expression -> expression PLUS term .)
    IDENTIFIER      reduce using rule 21 (expression -> expression PLUS term .)
    IF              reduce using rule 21 (expression -> expression PLUS term .)
    FOR             reduce using rule 21 (expression -> expression PLUS term .)
    WHILE           reduce using rule 21 (expression -> expression PLUS term .)
    INTEGER         reduce using rule 21 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 21 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 21 (expression -> expression PLUS term .)
    PRINT           reduce using rule 21 (expression -> expression PLUS term .)
    TRUE            reduce using rule 21 (expression -> expression PLUS term .)
    FALSE           reduce using rule 21 (expression -> expression PLUS term .)
    $end            reduce using rule 21 (expression -> expression PLUS term .)
    ELSE            reduce using rule 21 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 21 (expression -> expression PLUS term .)
    COLON           reduce using rule 21 (expression -> expression PLUS term .)
    IN              reduce using rule 21 (expression -> expression PLUS term .)
    COMMA           reduce using rule 21 (expression -> expression PLUS term .)


state 40

    (29) term -> STRING .

    PLUS            reduce using rule 29 (term -> STRING .)
    MINUS           reduce using rule 29 (term -> STRING .)
    TIMES           reduce using rule 29 (term -> STRING .)
    DIVIDE          reduce using rule 29 (term -> STRING .)
    EQUAL           reduce using rule 29 (term -> STRING .)
    STRING          reduce using rule 29 (term -> STRING .)
    IDENTIFIER      reduce using rule 29 (term -> STRING .)
    IF              reduce using rule 29 (term -> STRING .)
    FOR             reduce using rule 29 (term -> STRING .)
    WHILE           reduce using rule 29 (term -> STRING .)
    INTEGER         reduce using rule 29 (term -> STRING .)
    FLOAT           reduce using rule 29 (term -> STRING .)
    LPAREN          reduce using rule 29 (term -> STRING .)
    PRINT           reduce using rule 29 (term -> STRING .)
    TRUE            reduce using rule 29 (term -> STRING .)
    FALSE           reduce using rule 29 (term -> STRING .)
    $end            reduce using rule 29 (term -> STRING .)
    ELSE            reduce using rule 29 (term -> STRING .)
    RPAREN          reduce using rule 29 (term -> STRING .)
    COLON           reduce using rule 29 (term -> STRING .)
    IN              reduce using rule 29 (term -> STRING .)
    COMMA           reduce using rule 29 (term -> STRING .)


state 41

    (22) expression -> expression MINUS term .

    PLUS            reduce using rule 22 (expression -> expression MINUS term .)
    MINUS           reduce using rule 22 (expression -> expression MINUS term .)
    TIMES           reduce using rule 22 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 22 (expression -> expression MINUS term .)
    EQUAL           reduce using rule 22 (expression -> expression MINUS term .)
    STRING          reduce using rule 22 (expression -> expression MINUS term .)
    IDENTIFIER      reduce using rule 22 (expression -> expression MINUS term .)
    IF              reduce using rule 22 (expression -> expression MINUS term .)
    FOR             reduce using rule 22 (expression -> expression MINUS term .)
    WHILE           reduce using rule 22 (expression -> expression MINUS term .)
    INTEGER         reduce using rule 22 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 22 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 22 (expression -> expression MINUS term .)
    PRINT           reduce using rule 22 (expression -> expression MINUS term .)
    TRUE            reduce using rule 22 (expression -> expression MINUS term .)
    FALSE           reduce using rule 22 (expression -> expression MINUS term .)
    $end            reduce using rule 22 (expression -> expression MINUS term .)
    ELSE            reduce using rule 22 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 22 (expression -> expression MINUS term .)
    COLON           reduce using rule 22 (expression -> expression MINUS term .)
    IN              reduce using rule 22 (expression -> expression MINUS term .)
    COMMA           reduce using rule 22 (expression -> expression MINUS term .)


state 42

    (23) expression -> expression TIMES term .

    PLUS            reduce using rule 23 (expression -> expression TIMES term .)
    MINUS           reduce using rule 23 (expression -> expression TIMES term .)
    TIMES           reduce using rule 23 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 23 (expression -> expression TIMES term .)
    EQUAL           reduce using rule 23 (expression -> expression TIMES term .)
    STRING          reduce using rule 23 (expression -> expression TIMES term .)
    IDENTIFIER      reduce using rule 23 (expression -> expression TIMES term .)
    IF              reduce using rule 23 (expression -> expression TIMES term .)
    FOR             reduce using rule 23 (expression -> expression TIMES term .)
    WHILE           reduce using rule 23 (expression -> expression TIMES term .)
    INTEGER         reduce using rule 23 (expression -> expression TIMES term .)
    FLOAT           reduce using rule 23 (expression -> expression TIMES term .)
    LPAREN          reduce using rule 23 (expression -> expression TIMES term .)
    PRINT           reduce using rule 23 (expression -> expression TIMES term .)
    TRUE            reduce using rule 23 (expression -> expression TIMES term .)
    FALSE           reduce using rule 23 (expression -> expression TIMES term .)
    $end            reduce using rule 23 (expression -> expression TIMES term .)
    ELSE            reduce using rule 23 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 23 (expression -> expression TIMES term .)
    COLON           reduce using rule 23 (expression -> expression TIMES term .)
    IN              reduce using rule 23 (expression -> expression TIMES term .)
    COMMA           reduce using rule 23 (expression -> expression TIMES term .)


state 43

    (24) expression -> expression DIVIDE term .

    PLUS            reduce using rule 24 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 24 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 24 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 24 (expression -> expression DIVIDE term .)
    EQUAL           reduce using rule 24 (expression -> expression DIVIDE term .)
    STRING          reduce using rule 24 (expression -> expression DIVIDE term .)
    IDENTIFIER      reduce using rule 24 (expression -> expression DIVIDE term .)
    IF              reduce using rule 24 (expression -> expression DIVIDE term .)
    FOR             reduce using rule 24 (expression -> expression DIVIDE term .)
    WHILE           reduce using rule 24 (expression -> expression DIVIDE term .)
    INTEGER         reduce using rule 24 (expression -> expression DIVIDE term .)
    FLOAT           reduce using rule 24 (expression -> expression DIVIDE term .)
    LPAREN          reduce using rule 24 (expression -> expression DIVIDE term .)
    PRINT           reduce using rule 24 (expression -> expression DIVIDE term .)
    TRUE            reduce using rule 24 (expression -> expression DIVIDE term .)
    FALSE           reduce using rule 24 (expression -> expression DIVIDE term .)
    $end            reduce using rule 24 (expression -> expression DIVIDE term .)
    ELSE            reduce using rule 24 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 24 (expression -> expression DIVIDE term .)
    COLON           reduce using rule 24 (expression -> expression DIVIDE term .)
    IN              reduce using rule 24 (expression -> expression DIVIDE term .)
    COMMA           reduce using rule 24 (expression -> expression DIVIDE term .)


state 44

    (25) expression -> expression EQUAL term .

    PLUS            reduce using rule 25 (expression -> expression EQUAL term .)
    MINUS           reduce using rule 25 (expression -> expression EQUAL term .)
    TIMES           reduce using rule 25 (expression -> expression EQUAL term .)
    DIVIDE          reduce using rule 25 (expression -> expression EQUAL term .)
    EQUAL           reduce using rule 25 (expression -> expression EQUAL term .)
    STRING          reduce using rule 25 (expression -> expression EQUAL term .)
    IDENTIFIER      reduce using rule 25 (expression -> expression EQUAL term .)
    IF              reduce using rule 25 (expression -> expression EQUAL term .)
    FOR             reduce using rule 25 (expression -> expression EQUAL term .)
    WHILE           reduce using rule 25 (expression -> expression EQUAL term .)
    INTEGER         reduce using rule 25 (expression -> expression EQUAL term .)
    FLOAT           reduce using rule 25 (expression -> expression EQUAL term .)
    LPAREN          reduce using rule 25 (expression -> expression EQUAL term .)
    PRINT           reduce using rule 25 (expression -> expression EQUAL term .)
    TRUE            reduce using rule 25 (expression -> expression EQUAL term .)
    FALSE           reduce using rule 25 (expression -> expression EQUAL term .)
    $end            reduce using rule 25 (expression -> expression EQUAL term .)
    ELSE            reduce using rule 25 (expression -> expression EQUAL term .)
    RPAREN          reduce using rule 25 (expression -> expression EQUAL term .)
    COLON           reduce using rule 25 (expression -> expression EQUAL term .)
    IN              reduce using rule 25 (expression -> expression EQUAL term .)
    COMMA           reduce using rule 25 (expression -> expression EQUAL term .)


state 45

    (33) assignment_statement -> IDENTIFIER EQUAL expression .
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    STRING          reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    IDENTIFIER      reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    IF              reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FOR             reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    WHILE           reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    INTEGER         reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FLOAT           reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    LPAREN          reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    PRINT           reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    TRUE            reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FALSE           reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    $end            reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    ELSE            reduce using rule 33 (assignment_statement -> IDENTIFIER EQUAL expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 46

    (34) function_call -> IDENTIFIER LPAREN argument_list . RPAREN
    (37) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 53
    COMMA           shift and go to state 54


state 47

    (36) argument_list -> expression .
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    RPAREN          reduce using rule 36 (argument_list -> expression .)
    COMMA           reduce using rule 36 (argument_list -> expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 48

    (32) term -> LPAREN expression RPAREN .

    PLUS            reduce using rule 32 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (term -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 32 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 32 (term -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 32 (term -> LPAREN expression RPAREN .)
    STRING          reduce using rule 32 (term -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 32 (term -> LPAREN expression RPAREN .)
    IF              reduce using rule 32 (term -> LPAREN expression RPAREN .)
    FOR             reduce using rule 32 (term -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 32 (term -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 32 (term -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 32 (term -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 32 (term -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 32 (term -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 32 (term -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 32 (term -> LPAREN expression RPAREN .)
    $end            reduce using rule 32 (term -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 32 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (term -> LPAREN expression RPAREN .)
    COLON           reduce using rule 32 (term -> LPAREN expression RPAREN .)
    IN              reduce using rule 32 (term -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 32 (term -> LPAREN expression RPAREN .)


state 49

    (12) inline_if_statement -> IF expression COLON . statements
    (13) inline_if_statement -> IF expression COLON . statements ELSE statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . empty
    (38) empty -> .
    (9) conditional -> . inline_if_statement
    (10) conditional -> . for_statement
    (11) conditional -> . while_statement
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (33) assignment_statement -> . IDENTIFIER EQUAL expression
    (34) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (35) function_call -> . print_statement
    (12) inline_if_statement -> . IF expression COLON statements
    (13) inline_if_statement -> . IF expression COLON statements ELSE statements
    (14) for_statement -> . FOR expression IN range_expression
    (16) while_statement -> . WHILE expression COLON statements
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (19) print_statement -> . PRINT LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 38 (empty -> .)
    ELSE            reduce using rule 38 (empty -> .)
    STRING          shift and go to state 12
    IDENTIFIER      shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    LPAREN          shift and go to state 14
    PRINT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

  ! STRING          [ reduce using rule 38 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 38 (empty -> .) ]
  ! IF              [ reduce using rule 38 (empty -> .) ]
  ! FOR             [ reduce using rule 38 (empty -> .) ]
  ! WHILE           [ reduce using rule 38 (empty -> .) ]
  ! INTEGER         [ reduce using rule 38 (empty -> .) ]
  ! FLOAT           [ reduce using rule 38 (empty -> .) ]
  ! LPAREN          [ reduce using rule 38 (empty -> .) ]
  ! PRINT           [ reduce using rule 38 (empty -> .) ]
  ! TRUE            [ reduce using rule 38 (empty -> .) ]
  ! FALSE           [ reduce using rule 38 (empty -> .) ]

    expression                     shift and go to state 5
    statements                     shift and go to state 55
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    inline_if_statement            shift and go to state 8
    for_statement                  shift and go to state 9
    while_statement                shift and go to state 10
    term                           shift and go to state 11
    print_statement                shift and go to state 15
    bool                           shift and go to state 21

state 50

    (14) for_statement -> FOR expression IN . range_expression
    (15) range_expression -> . RANGE expression COMMA expression

    RANGE           shift and go to state 57

    range_expression               shift and go to state 56

state 51

    (16) while_statement -> WHILE expression COLON . statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . empty
    (38) empty -> .
    (9) conditional -> . inline_if_statement
    (10) conditional -> . for_statement
    (11) conditional -> . while_statement
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (33) assignment_statement -> . IDENTIFIER EQUAL expression
    (34) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (35) function_call -> . print_statement
    (12) inline_if_statement -> . IF expression COLON statements
    (13) inline_if_statement -> . IF expression COLON statements ELSE statements
    (14) for_statement -> . FOR expression IN range_expression
    (16) while_statement -> . WHILE expression COLON statements
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (19) print_statement -> . PRINT LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 38 (empty -> .)
    ELSE            reduce using rule 38 (empty -> .)
    STRING          shift and go to state 12
    IDENTIFIER      shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    LPAREN          shift and go to state 14
    PRINT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

  ! STRING          [ reduce using rule 38 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 38 (empty -> .) ]
  ! IF              [ reduce using rule 38 (empty -> .) ]
  ! FOR             [ reduce using rule 38 (empty -> .) ]
  ! WHILE           [ reduce using rule 38 (empty -> .) ]
  ! INTEGER         [ reduce using rule 38 (empty -> .) ]
  ! FLOAT           [ reduce using rule 38 (empty -> .) ]
  ! LPAREN          [ reduce using rule 38 (empty -> .) ]
  ! PRINT           [ reduce using rule 38 (empty -> .) ]
  ! TRUE            [ reduce using rule 38 (empty -> .) ]
  ! FALSE           [ reduce using rule 38 (empty -> .) ]

    expression                     shift and go to state 5
    statements                     shift and go to state 58
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    inline_if_statement            shift and go to state 8
    for_statement                  shift and go to state 9
    while_statement                shift and go to state 10
    term                           shift and go to state 11
    print_statement                shift and go to state 15
    bool                           shift and go to state 21

state 52

    (19) print_statement -> PRINT LPAREN expression . RPAREN
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 53

    (34) function_call -> IDENTIFIER LPAREN argument_list RPAREN .

    STRING          reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    IDENTIFIER      reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    IF              reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FOR             reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    INTEGER         reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    LPAREN          reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    TRUE            reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FALSE           reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    $end            reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 34 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)


state 54

    (37) argument_list -> argument_list COMMA . expression
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 60
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 55

    (12) inline_if_statement -> IF expression COLON statements .
    (13) inline_if_statement -> IF expression COLON statements . ELSE statements

  ! shift/reduce conflict for ELSE resolved as shift
    STRING          reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    IDENTIFIER      reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    IF              reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    FOR             reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    WHILE           reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    INTEGER         reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    FLOAT           reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    LPAREN          reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    PRINT           reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    TRUE            reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    FALSE           reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    $end            reduce using rule 12 (inline_if_statement -> IF expression COLON statements .)
    ELSE            shift and go to state 61

  ! ELSE            [ reduce using rule 12 (inline_if_statement -> IF expression COLON statements .) ]


state 56

    (14) for_statement -> FOR expression IN range_expression .

    STRING          reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    IDENTIFIER      reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    IF              reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    FOR             reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    WHILE           reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    INTEGER         reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    FLOAT           reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    LPAREN          reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    PRINT           reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    TRUE            reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    FALSE           reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    $end            reduce using rule 14 (for_statement -> FOR expression IN range_expression .)
    ELSE            reduce using rule 14 (for_statement -> FOR expression IN range_expression .)


state 57

    (15) range_expression -> RANGE . expression COMMA expression
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 62
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 58

    (16) while_statement -> WHILE expression COLON statements .

    STRING          reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    IDENTIFIER      reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    IF              reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    FOR             reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    WHILE           reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    INTEGER         reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    FLOAT           reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    LPAREN          reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    PRINT           reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    TRUE            reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    FALSE           reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    $end            reduce using rule 16 (while_statement -> WHILE expression COLON statements .)
    ELSE            reduce using rule 16 (while_statement -> WHILE expression COLON statements .)


state 59

    (19) print_statement -> PRINT LPAREN expression RPAREN .

    STRING          reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    IF              reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    FOR             reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    WHILE           reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    INTEGER         reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    FLOAT           reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    LPAREN          reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    PRINT           reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    TRUE            reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    FALSE           reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)
    ELSE            reduce using rule 19 (print_statement -> PRINT LPAREN expression RPAREN .)


state 60

    (37) argument_list -> argument_list COMMA expression .
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    RPAREN          reduce using rule 37 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 37 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 61

    (13) inline_if_statement -> IF expression COLON statements ELSE . statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . empty
    (38) empty -> .
    (9) conditional -> . inline_if_statement
    (10) conditional -> . for_statement
    (11) conditional -> . while_statement
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (33) assignment_statement -> . IDENTIFIER EQUAL expression
    (34) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (35) function_call -> . print_statement
    (12) inline_if_statement -> . IF expression COLON statements
    (13) inline_if_statement -> . IF expression COLON statements ELSE statements
    (14) for_statement -> . FOR expression IN range_expression
    (16) while_statement -> . WHILE expression COLON statements
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (19) print_statement -> . PRINT LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 38 (empty -> .)
    ELSE            reduce using rule 38 (empty -> .)
    STRING          shift and go to state 12
    IDENTIFIER      shift and go to state 13
    IF              shift and go to state 16
    FOR             shift and go to state 17
    WHILE           shift and go to state 18
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    LPAREN          shift and go to state 14
    PRINT           shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

  ! STRING          [ reduce using rule 38 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 38 (empty -> .) ]
  ! IF              [ reduce using rule 38 (empty -> .) ]
  ! FOR             [ reduce using rule 38 (empty -> .) ]
  ! WHILE           [ reduce using rule 38 (empty -> .) ]
  ! INTEGER         [ reduce using rule 38 (empty -> .) ]
  ! FLOAT           [ reduce using rule 38 (empty -> .) ]
  ! LPAREN          [ reduce using rule 38 (empty -> .) ]
  ! PRINT           [ reduce using rule 38 (empty -> .) ]
  ! TRUE            [ reduce using rule 38 (empty -> .) ]
  ! FALSE           [ reduce using rule 38 (empty -> .) ]

    expression                     shift and go to state 5
    statements                     shift and go to state 63
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    inline_if_statement            shift and go to state 8
    for_statement                  shift and go to state 9
    while_statement                shift and go to state 10
    term                           shift and go to state 11
    print_statement                shift and go to state 15
    bool                           shift and go to state 21

state 62

    (15) range_expression -> RANGE expression . COMMA expression
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    COMMA           shift and go to state 64
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30


state 63

    (13) inline_if_statement -> IF expression COLON statements ELSE statements .

    STRING          reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    IDENTIFIER      reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    IF              reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    FOR             reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    WHILE           reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    INTEGER         reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    FLOAT           reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    LPAREN          reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    PRINT           reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    TRUE            reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    FALSE           reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    $end            reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)
    ELSE            reduce using rule 13 (inline_if_statement -> IF expression COLON statements ELSE statements .)


state 64

    (15) range_expression -> RANGE expression COMMA . expression
    (20) expression -> . term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . expression TIMES term
    (24) expression -> . expression DIVIDE term
    (25) expression -> . expression EQUAL term
    (26) expression -> . STRING
    (27) term -> . INTEGER
    (28) term -> . FLOAT
    (29) term -> . STRING
    (30) term -> . bool
    (31) term -> . IDENTIFIER
    (32) term -> . LPAREN expression RPAREN
    (17) bool -> . TRUE
    (18) bool -> . FALSE

    STRING          shift and go to state 12
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 20
    IDENTIFIER      shift and go to state 34
    LPAREN          shift and go to state 14
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24

    expression                     shift and go to state 65
    term                           shift and go to state 11
    bool                           shift and go to state 21

state 65

    (15) range_expression -> RANGE expression COMMA expression .
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term
    (23) expression -> expression . TIMES term
    (24) expression -> expression . DIVIDE term
    (25) expression -> expression . EQUAL term

    STRING          reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    IDENTIFIER      reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    IF              reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    FOR             reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    WHILE           reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    INTEGER         reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    FLOAT           reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    LPAREN          reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    PRINT           reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    TRUE            reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    FALSE           reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    $end            reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    ELSE            reduce using rule 15 (range_expression -> RANGE expression COMMA expression .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29
    EQUAL           shift and go to state 30

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 2 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 2 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 13 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 13 resolved as shift
WARNING: shift/reduce conflict for STRING in state 49 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for FOR in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 49 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 49 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 49 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 49 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 49 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 49 resolved as shift
WARNING: shift/reduce conflict for STRING in state 51 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 51 resolved as shift
WARNING: shift/reduce conflict for IF in state 51 resolved as shift
WARNING: shift/reduce conflict for FOR in state 51 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 51 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 51 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 51 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 51 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 51 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 51 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 51 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 55 resolved as shift
WARNING: shift/reduce conflict for STRING in state 61 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for FOR in state 61 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 61 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 61 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 61 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 61 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 61 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (statements -> statement)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (statements -> empty)
WARNING: rejected rule (statement -> empty) in state 3
WARNING: reduce/reduce conflict in state 12 resolved using rule (expression -> STRING)
WARNING: rejected rule (term -> STRING) in state 12
WARNING: Rule (statement -> empty) is never reduced

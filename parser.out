Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BOOL
    BREAK
    CASE
    COMMENTS
    DEF
    DIVIDEEQUAL
    DO
    DOUBLEQUOTES
    ELIF
    FINALLY
    GLOBAL
    IMPORT
    IS
    LCURVEDBRACE
    MINUSEQUAL
    NOT
    OR
    PLUSEQUAL
    RCURVEDBRACE
    RETURN
    RULE_CLOSE
    RULE_OPEN
    SINGLEQUOTES
    SWITCH
    THEN
    TIMESEQUAL
    UNTIL
    VARIABLE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement statements
Rule 2     statements -> statement
Rule 3     statements -> empty
Rule 4     statement -> conditional
Rule 5     statement -> expression
Rule 6     statement -> assignment_statement
Rule 7     statement -> function_call
Rule 8     statement -> print_statement
Rule 9     statement -> function_declaration
Rule 10    statement -> variable_declaration
Rule 11    statement -> array_declaration
Rule 12    statement -> class_declaration
Rule 13    statement -> main_function
Rule 14    statement -> empty
Rule 15    main_function -> MAIN LPAREN RPAREN COLON statements
Rule 16    conditional -> inline_if_statement
Rule 17    conditional -> for_statement
Rule 18    conditional -> while_statement
Rule 19    variable_declaration -> type IDENTIFIER
Rule 20    array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
Rule 21    function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
Rule 22    class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS
Rule 23    inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF
Rule 24    inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
Rule 25    for_statement -> FOR expression IN range_expression
Rule 26    range_expression -> RANGE expression COMMA expression
Rule 27    while_statement -> WHILE expression COLON statements
Rule 28    bool -> TRUE
Rule 29    bool -> FALSE
Rule 30    print_statement -> PRINT LPAREN STRING RPAREN
Rule 31    expression -> expression GREATERTHAN expression
Rule 32    expression -> expression LESSTHAN expression
Rule 33    expression -> expression GREATEREQUAL expression
Rule 34    expression -> expression LESSEQUAL expression
Rule 35    expression -> expression EQUALEQUAL expression
Rule 36    expression -> expression NOTEQUAL expression
Rule 37    expression -> expression PLUS expression
Rule 38    expression -> expression MINUS expression
Rule 39    expression -> expression TIMES expression
Rule 40    expression -> expression DIVIDE expression
Rule 41    expression -> expression EQUAL expression
Rule 42    expression -> token
Rule 43    expression -> data
Rule 44    data -> INTEGER
Rule 45    data -> FLOAT
Rule 46    data -> STRING
Rule 47    data -> IDENTIFIER
Rule 48    data -> bool
Rule 49    token -> COLON
Rule 50    token -> EQUAL
Rule 51    assignment_statement -> IDENTIFIER EQUAL expression
Rule 52    function_call -> IDENTIFIER LPAREN argument_list RPAREN
Rule 53    argument_list -> type IDENTIFIER COMMA argument_list
Rule 54    argument_list -> type IDENTIFIER
Rule 55    argument_list -> empty
Rule 56    type -> INT
Rule 57    type -> FLT
Rule 58    type -> STR
Rule 59    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARRAY                : 20
BOOL                 : 
BREAK                : 
CASE                 : 
CLASS                : 22
CLOSECLASS           : 22
CLOSEFUNC            : 21
COLON                : 15 21 22 23 24 24 27 49
COMMA                : 26 53
COMMENTS             : 
DEF                  : 
DIVIDE               : 40
DIVIDEEQUAL          : 
DO                   : 
DOUBLEQUOTES         : 
ELIF                 : 
ELSE                 : 24
ENDIF                : 23 24
EQUAL                : 41 50 51
EQUALEQUAL           : 35
FALSE                : 29
FINALLY              : 
FLOAT                : 45
FLT                  : 57
FOR                  : 25
FUNC                 : 21
GLOBAL               : 
GREATEREQUAL         : 33
GREATERTHAN          : 31
IDENTIFIER           : 19 20 21 22 47 51 52 53 54
IF                   : 23 24
IMPORT               : 
IN                   : 25
INT                  : 56
INTEGER              : 20 44
IS                   : 
LCURVEDBRACE         : 
LESSEQUAL            : 34
LESSTHAN             : 32
LPAREN               : 15 21 23 24 30 52
LSQUAREDBRACKET      : 20
MAIN                 : 15
MINUS                : 38
MINUSEQUAL           : 
NOT                  : 
NOTEQUAL             : 36
OR                   : 
PLUS                 : 37
PLUSEQUAL            : 
PRINT                : 30
RANGE                : 26
RCURVEDBRACE         : 
RETURN               : 
RPAREN               : 15 21 23 24 30 52
RSQUAREDBRACKET      : 20
RULE_CLOSE           : 
RULE_OPEN            : 
SINGLEQUOTES         : 
STR                  : 58
STRING               : 30 46
SWITCH               : 
THEN                 : 
TIMES                : 39
TIMESEQUAL           : 
TRUE                 : 28
UNTIL                : 
VARIABLE             : 
WHILE                : 27
error                : 

Nonterminals, with rules where they appear

argument_list        : 21 52 53
array_declaration    : 11
assignment_statement : 6
bool                 : 48
class_declaration    : 12
conditional          : 4
data                 : 43
empty                : 3 14 55
expression           : 5 23 24 25 26 26 27 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 51
for_statement        : 17
function_call        : 7
function_declaration : 9
inline_if_statement  : 16
main_function        : 13
print_statement      : 8
range_expression     : 25
statement            : 1 2
statements           : 1 15 21 22 23 24 24 27 0
token                : 42
type                 : 19 20 21 53 54
variable_declaration : 10
while_statement      : 18

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . function_declaration
    (10) statement -> . variable_declaration
    (11) statement -> . array_declaration
    (12) statement -> . class_declaration
    (13) statement -> . main_function
    (14) statement -> . empty
    (59) empty -> .
    (16) conditional -> . inline_if_statement
    (17) conditional -> . for_statement
    (18) conditional -> . while_statement
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (51) assignment_statement -> . IDENTIFIER EQUAL expression
    (52) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (30) print_statement -> . PRINT LPAREN STRING RPAREN
    (21) function_declaration -> . FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (19) variable_declaration -> . type IDENTIFIER
    (20) array_declaration -> . ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (22) class_declaration -> . CLASS IDENTIFIER COLON statements CLOSECLASS
    (15) main_function -> . MAIN LPAREN RPAREN COLON statements
    (23) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
    (25) for_statement -> . FOR expression IN range_expression
    (27) while_statement -> . WHILE expression COLON statements
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (28) bool -> . TRUE
    (29) bool -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 59 (empty -> .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    FUNC            shift and go to state 23
    ARRAY           shift and go to state 26
    CLASS           shift and go to state 28
    MAIN            shift and go to state 29
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 59 (empty -> .) ]
  ! PRINT           [ reduce using rule 59 (empty -> .) ]
  ! FUNC            [ reduce using rule 59 (empty -> .) ]
  ! ARRAY           [ reduce using rule 59 (empty -> .) ]
  ! CLASS           [ reduce using rule 59 (empty -> .) ]
  ! MAIN            [ reduce using rule 59 (empty -> .) ]
  ! IF              [ reduce using rule 59 (empty -> .) ]
  ! FOR             [ reduce using rule 59 (empty -> .) ]
  ! WHILE           [ reduce using rule 59 (empty -> .) ]
  ! COLON           [ reduce using rule 59 (empty -> .) ]
  ! EQUAL           [ reduce using rule 59 (empty -> .) ]
  ! INTEGER         [ reduce using rule 59 (empty -> .) ]
  ! FLOAT           [ reduce using rule 59 (empty -> .) ]
  ! STRING          [ reduce using rule 59 (empty -> .) ]
  ! INT             [ reduce using rule 59 (empty -> .) ]
  ! FLT             [ reduce using rule 59 (empty -> .) ]
  ! STR             [ reduce using rule 59 (empty -> .) ]
  ! TRUE            [ reduce using rule 59 (empty -> .) ]
  ! FALSE           [ reduce using rule 59 (empty -> .) ]

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    expression                     shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    function_declaration           shift and go to state 9
    variable_declaration           shift and go to state 10
    array_declaration              shift and go to state 11
    class_declaration              shift and go to state 12
    main_function                  shift and go to state 13
    inline_if_statement            shift and go to state 14
    for_statement                  shift and go to state 15
    while_statement                shift and go to state 16
    token                          shift and go to state 18
    data                           shift and go to state 19
    type                           shift and go to state 24
    bool                           shift and go to state 34

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement . statements
    (2) statements -> statement .
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . function_declaration
    (10) statement -> . variable_declaration
    (11) statement -> . array_declaration
    (12) statement -> . class_declaration
    (13) statement -> . main_function
    (14) statement -> . empty
    (59) empty -> .
    (16) conditional -> . inline_if_statement
    (17) conditional -> . for_statement
    (18) conditional -> . while_statement
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (51) assignment_statement -> . IDENTIFIER EQUAL expression
    (52) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (30) print_statement -> . PRINT LPAREN STRING RPAREN
    (21) function_declaration -> . FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (19) variable_declaration -> . type IDENTIFIER
    (20) array_declaration -> . ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (22) class_declaration -> . CLASS IDENTIFIER COLON statements CLOSECLASS
    (15) main_function -> . MAIN LPAREN RPAREN COLON statements
    (23) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
    (25) for_statement -> . FOR expression IN range_expression
    (27) while_statement -> . WHILE expression COLON statements
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (28) bool -> . TRUE
    (29) bool -> . FALSE

  ! reduce/reduce conflict for $end resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for CLOSECLASS resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for PRINT resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for FUNC resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for ARRAY resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for CLASS resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for MAIN resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for IF resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for FOR resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for WHILE resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for COLON resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for EQUAL resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for INTEGER resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for STRING resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for INT resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for FLT resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for STR resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for TRUE resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for FALSE resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for ENDIF resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for ELSE resolved using rule 2 (statements -> statement .)
  ! reduce/reduce conflict for CLOSEFUNC resolved using rule 2 (statements -> statement .)
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 2 (statements -> statement .)
    CLOSECLASS      reduce using rule 2 (statements -> statement .)
    ENDIF           reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    CLOSEFUNC       reduce using rule 2 (statements -> statement .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    FUNC            shift and go to state 23
    ARRAY           shift and go to state 26
    CLASS           shift and go to state 28
    MAIN            shift and go to state 29
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 2 (statements -> statement .) ]
  ! PRINT           [ reduce using rule 2 (statements -> statement .) ]
  ! FUNC            [ reduce using rule 2 (statements -> statement .) ]
  ! ARRAY           [ reduce using rule 2 (statements -> statement .) ]
  ! CLASS           [ reduce using rule 2 (statements -> statement .) ]
  ! MAIN            [ reduce using rule 2 (statements -> statement .) ]
  ! IF              [ reduce using rule 2 (statements -> statement .) ]
  ! FOR             [ reduce using rule 2 (statements -> statement .) ]
  ! WHILE           [ reduce using rule 2 (statements -> statement .) ]
  ! COLON           [ reduce using rule 2 (statements -> statement .) ]
  ! EQUAL           [ reduce using rule 2 (statements -> statement .) ]
  ! INTEGER         [ reduce using rule 2 (statements -> statement .) ]
  ! FLOAT           [ reduce using rule 2 (statements -> statement .) ]
  ! STRING          [ reduce using rule 2 (statements -> statement .) ]
  ! INT             [ reduce using rule 2 (statements -> statement .) ]
  ! FLT             [ reduce using rule 2 (statements -> statement .) ]
  ! STR             [ reduce using rule 2 (statements -> statement .) ]
  ! TRUE            [ reduce using rule 2 (statements -> statement .) ]
  ! FALSE           [ reduce using rule 2 (statements -> statement .) ]
  ! $end            [ reduce using rule 59 (empty -> .) ]
  ! CLOSECLASS      [ reduce using rule 59 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 59 (empty -> .) ]
  ! PRINT           [ reduce using rule 59 (empty -> .) ]
  ! FUNC            [ reduce using rule 59 (empty -> .) ]
  ! ARRAY           [ reduce using rule 59 (empty -> .) ]
  ! CLASS           [ reduce using rule 59 (empty -> .) ]
  ! MAIN            [ reduce using rule 59 (empty -> .) ]
  ! IF              [ reduce using rule 59 (empty -> .) ]
  ! FOR             [ reduce using rule 59 (empty -> .) ]
  ! WHILE           [ reduce using rule 59 (empty -> .) ]
  ! COLON           [ reduce using rule 59 (empty -> .) ]
  ! EQUAL           [ reduce using rule 59 (empty -> .) ]
  ! INTEGER         [ reduce using rule 59 (empty -> .) ]
  ! FLOAT           [ reduce using rule 59 (empty -> .) ]
  ! STRING          [ reduce using rule 59 (empty -> .) ]
  ! INT             [ reduce using rule 59 (empty -> .) ]
  ! FLT             [ reduce using rule 59 (empty -> .) ]
  ! STR             [ reduce using rule 59 (empty -> .) ]
  ! TRUE            [ reduce using rule 59 (empty -> .) ]
  ! FALSE           [ reduce using rule 59 (empty -> .) ]
  ! ENDIF           [ reduce using rule 59 (empty -> .) ]
  ! ELSE            [ reduce using rule 59 (empty -> .) ]
  ! CLOSEFUNC       [ reduce using rule 59 (empty -> .) ]

    statement                      shift and go to state 2
    statements                     shift and go to state 40
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    expression                     shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    function_declaration           shift and go to state 9
    variable_declaration           shift and go to state 10
    array_declaration              shift and go to state 11
    class_declaration              shift and go to state 12
    main_function                  shift and go to state 13
    inline_if_statement            shift and go to state 14
    for_statement                  shift and go to state 15
    while_statement                shift and go to state 16
    token                          shift and go to state 18
    data                           shift and go to state 19
    type                           shift and go to state 24
    bool                           shift and go to state 34

state 3

    (3) statements -> empty .
    (14) statement -> empty .

  ! reduce/reduce conflict for IDENTIFIER resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FUNC resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for ARRAY resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for CLASS resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for MAIN resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for COLON resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for EQUAL resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for INTEGER resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for STRING resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FLT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for STR resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for TRUE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FALSE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for CLOSECLASS resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for ENDIF resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for CLOSEFUNC resolved using rule 3 (statements -> empty .)
    $end            reduce using rule 3 (statements -> empty .)
    CLOSECLASS      reduce using rule 3 (statements -> empty .)
    IDENTIFIER      reduce using rule 3 (statements -> empty .)
    PRINT           reduce using rule 3 (statements -> empty .)
    FUNC            reduce using rule 3 (statements -> empty .)
    ARRAY           reduce using rule 3 (statements -> empty .)
    CLASS           reduce using rule 3 (statements -> empty .)
    MAIN            reduce using rule 3 (statements -> empty .)
    IF              reduce using rule 3 (statements -> empty .)
    FOR             reduce using rule 3 (statements -> empty .)
    WHILE           reduce using rule 3 (statements -> empty .)
    COLON           reduce using rule 3 (statements -> empty .)
    EQUAL           reduce using rule 3 (statements -> empty .)
    INTEGER         reduce using rule 3 (statements -> empty .)
    FLOAT           reduce using rule 3 (statements -> empty .)
    STRING          reduce using rule 3 (statements -> empty .)
    INT             reduce using rule 3 (statements -> empty .)
    FLT             reduce using rule 3 (statements -> empty .)
    STR             reduce using rule 3 (statements -> empty .)
    TRUE            reduce using rule 3 (statements -> empty .)
    FALSE           reduce using rule 3 (statements -> empty .)
    ENDIF           reduce using rule 3 (statements -> empty .)
    ELSE            reduce using rule 3 (statements -> empty .)
    CLOSEFUNC       reduce using rule 3 (statements -> empty .)

  ! IDENTIFIER      [ reduce using rule 14 (statement -> empty .) ]
  ! PRINT           [ reduce using rule 14 (statement -> empty .) ]
  ! FUNC            [ reduce using rule 14 (statement -> empty .) ]
  ! ARRAY           [ reduce using rule 14 (statement -> empty .) ]
  ! CLASS           [ reduce using rule 14 (statement -> empty .) ]
  ! MAIN            [ reduce using rule 14 (statement -> empty .) ]
  ! IF              [ reduce using rule 14 (statement -> empty .) ]
  ! FOR             [ reduce using rule 14 (statement -> empty .) ]
  ! WHILE           [ reduce using rule 14 (statement -> empty .) ]
  ! COLON           [ reduce using rule 14 (statement -> empty .) ]
  ! EQUAL           [ reduce using rule 14 (statement -> empty .) ]
  ! INTEGER         [ reduce using rule 14 (statement -> empty .) ]
  ! FLOAT           [ reduce using rule 14 (statement -> empty .) ]
  ! STRING          [ reduce using rule 14 (statement -> empty .) ]
  ! INT             [ reduce using rule 14 (statement -> empty .) ]
  ! FLT             [ reduce using rule 14 (statement -> empty .) ]
  ! STR             [ reduce using rule 14 (statement -> empty .) ]
  ! TRUE            [ reduce using rule 14 (statement -> empty .) ]
  ! FALSE           [ reduce using rule 14 (statement -> empty .) ]
  ! $end            [ reduce using rule 14 (statement -> empty .) ]
  ! CLOSECLASS      [ reduce using rule 14 (statement -> empty .) ]
  ! ENDIF           [ reduce using rule 14 (statement -> empty .) ]
  ! ELSE            [ reduce using rule 14 (statement -> empty .) ]
  ! CLOSEFUNC       [ reduce using rule 14 (statement -> empty .) ]


state 4

    (4) statement -> conditional .

    IDENTIFIER      reduce using rule 4 (statement -> conditional .)
    PRINT           reduce using rule 4 (statement -> conditional .)
    FUNC            reduce using rule 4 (statement -> conditional .)
    ARRAY           reduce using rule 4 (statement -> conditional .)
    CLASS           reduce using rule 4 (statement -> conditional .)
    MAIN            reduce using rule 4 (statement -> conditional .)
    IF              reduce using rule 4 (statement -> conditional .)
    FOR             reduce using rule 4 (statement -> conditional .)
    WHILE           reduce using rule 4 (statement -> conditional .)
    COLON           reduce using rule 4 (statement -> conditional .)
    EQUAL           reduce using rule 4 (statement -> conditional .)
    INTEGER         reduce using rule 4 (statement -> conditional .)
    FLOAT           reduce using rule 4 (statement -> conditional .)
    STRING          reduce using rule 4 (statement -> conditional .)
    INT             reduce using rule 4 (statement -> conditional .)
    FLT             reduce using rule 4 (statement -> conditional .)
    STR             reduce using rule 4 (statement -> conditional .)
    TRUE            reduce using rule 4 (statement -> conditional .)
    FALSE           reduce using rule 4 (statement -> conditional .)
    $end            reduce using rule 4 (statement -> conditional .)
    CLOSECLASS      reduce using rule 4 (statement -> conditional .)
    ENDIF           reduce using rule 4 (statement -> conditional .)
    ELSE            reduce using rule 4 (statement -> conditional .)
    CLOSEFUNC       reduce using rule 4 (statement -> conditional .)


state 5

    (5) statement -> expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 5 (statement -> expression .)
    PRINT           reduce using rule 5 (statement -> expression .)
    FUNC            reduce using rule 5 (statement -> expression .)
    ARRAY           reduce using rule 5 (statement -> expression .)
    CLASS           reduce using rule 5 (statement -> expression .)
    MAIN            reduce using rule 5 (statement -> expression .)
    IF              reduce using rule 5 (statement -> expression .)
    FOR             reduce using rule 5 (statement -> expression .)
    WHILE           reduce using rule 5 (statement -> expression .)
    COLON           reduce using rule 5 (statement -> expression .)
    INTEGER         reduce using rule 5 (statement -> expression .)
    FLOAT           reduce using rule 5 (statement -> expression .)
    STRING          reduce using rule 5 (statement -> expression .)
    INT             reduce using rule 5 (statement -> expression .)
    FLT             reduce using rule 5 (statement -> expression .)
    STR             reduce using rule 5 (statement -> expression .)
    TRUE            reduce using rule 5 (statement -> expression .)
    FALSE           reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    CLOSECLASS      reduce using rule 5 (statement -> expression .)
    ENDIF           reduce using rule 5 (statement -> expression .)
    ELSE            reduce using rule 5 (statement -> expression .)
    CLOSEFUNC       reduce using rule 5 (statement -> expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! EQUAL           [ reduce using rule 5 (statement -> expression .) ]


state 6

    (6) statement -> assignment_statement .

    IDENTIFIER      reduce using rule 6 (statement -> assignment_statement .)
    PRINT           reduce using rule 6 (statement -> assignment_statement .)
    FUNC            reduce using rule 6 (statement -> assignment_statement .)
    ARRAY           reduce using rule 6 (statement -> assignment_statement .)
    CLASS           reduce using rule 6 (statement -> assignment_statement .)
    MAIN            reduce using rule 6 (statement -> assignment_statement .)
    IF              reduce using rule 6 (statement -> assignment_statement .)
    FOR             reduce using rule 6 (statement -> assignment_statement .)
    WHILE           reduce using rule 6 (statement -> assignment_statement .)
    COLON           reduce using rule 6 (statement -> assignment_statement .)
    EQUAL           reduce using rule 6 (statement -> assignment_statement .)
    INTEGER         reduce using rule 6 (statement -> assignment_statement .)
    FLOAT           reduce using rule 6 (statement -> assignment_statement .)
    STRING          reduce using rule 6 (statement -> assignment_statement .)
    INT             reduce using rule 6 (statement -> assignment_statement .)
    FLT             reduce using rule 6 (statement -> assignment_statement .)
    STR             reduce using rule 6 (statement -> assignment_statement .)
    TRUE            reduce using rule 6 (statement -> assignment_statement .)
    FALSE           reduce using rule 6 (statement -> assignment_statement .)
    $end            reduce using rule 6 (statement -> assignment_statement .)
    CLOSECLASS      reduce using rule 6 (statement -> assignment_statement .)
    ENDIF           reduce using rule 6 (statement -> assignment_statement .)
    ELSE            reduce using rule 6 (statement -> assignment_statement .)
    CLOSEFUNC       reduce using rule 6 (statement -> assignment_statement .)


state 7

    (7) statement -> function_call .

    IDENTIFIER      reduce using rule 7 (statement -> function_call .)
    PRINT           reduce using rule 7 (statement -> function_call .)
    FUNC            reduce using rule 7 (statement -> function_call .)
    ARRAY           reduce using rule 7 (statement -> function_call .)
    CLASS           reduce using rule 7 (statement -> function_call .)
    MAIN            reduce using rule 7 (statement -> function_call .)
    IF              reduce using rule 7 (statement -> function_call .)
    FOR             reduce using rule 7 (statement -> function_call .)
    WHILE           reduce using rule 7 (statement -> function_call .)
    COLON           reduce using rule 7 (statement -> function_call .)
    EQUAL           reduce using rule 7 (statement -> function_call .)
    INTEGER         reduce using rule 7 (statement -> function_call .)
    FLOAT           reduce using rule 7 (statement -> function_call .)
    STRING          reduce using rule 7 (statement -> function_call .)
    INT             reduce using rule 7 (statement -> function_call .)
    FLT             reduce using rule 7 (statement -> function_call .)
    STR             reduce using rule 7 (statement -> function_call .)
    TRUE            reduce using rule 7 (statement -> function_call .)
    FALSE           reduce using rule 7 (statement -> function_call .)
    $end            reduce using rule 7 (statement -> function_call .)
    CLOSECLASS      reduce using rule 7 (statement -> function_call .)
    ENDIF           reduce using rule 7 (statement -> function_call .)
    ELSE            reduce using rule 7 (statement -> function_call .)
    CLOSEFUNC       reduce using rule 7 (statement -> function_call .)


state 8

    (8) statement -> print_statement .

    IDENTIFIER      reduce using rule 8 (statement -> print_statement .)
    PRINT           reduce using rule 8 (statement -> print_statement .)
    FUNC            reduce using rule 8 (statement -> print_statement .)
    ARRAY           reduce using rule 8 (statement -> print_statement .)
    CLASS           reduce using rule 8 (statement -> print_statement .)
    MAIN            reduce using rule 8 (statement -> print_statement .)
    IF              reduce using rule 8 (statement -> print_statement .)
    FOR             reduce using rule 8 (statement -> print_statement .)
    WHILE           reduce using rule 8 (statement -> print_statement .)
    COLON           reduce using rule 8 (statement -> print_statement .)
    EQUAL           reduce using rule 8 (statement -> print_statement .)
    INTEGER         reduce using rule 8 (statement -> print_statement .)
    FLOAT           reduce using rule 8 (statement -> print_statement .)
    STRING          reduce using rule 8 (statement -> print_statement .)
    INT             reduce using rule 8 (statement -> print_statement .)
    FLT             reduce using rule 8 (statement -> print_statement .)
    STR             reduce using rule 8 (statement -> print_statement .)
    TRUE            reduce using rule 8 (statement -> print_statement .)
    FALSE           reduce using rule 8 (statement -> print_statement .)
    $end            reduce using rule 8 (statement -> print_statement .)
    CLOSECLASS      reduce using rule 8 (statement -> print_statement .)
    ENDIF           reduce using rule 8 (statement -> print_statement .)
    ELSE            reduce using rule 8 (statement -> print_statement .)
    CLOSEFUNC       reduce using rule 8 (statement -> print_statement .)


state 9

    (9) statement -> function_declaration .

    IDENTIFIER      reduce using rule 9 (statement -> function_declaration .)
    PRINT           reduce using rule 9 (statement -> function_declaration .)
    FUNC            reduce using rule 9 (statement -> function_declaration .)
    ARRAY           reduce using rule 9 (statement -> function_declaration .)
    CLASS           reduce using rule 9 (statement -> function_declaration .)
    MAIN            reduce using rule 9 (statement -> function_declaration .)
    IF              reduce using rule 9 (statement -> function_declaration .)
    FOR             reduce using rule 9 (statement -> function_declaration .)
    WHILE           reduce using rule 9 (statement -> function_declaration .)
    COLON           reduce using rule 9 (statement -> function_declaration .)
    EQUAL           reduce using rule 9 (statement -> function_declaration .)
    INTEGER         reduce using rule 9 (statement -> function_declaration .)
    FLOAT           reduce using rule 9 (statement -> function_declaration .)
    STRING          reduce using rule 9 (statement -> function_declaration .)
    INT             reduce using rule 9 (statement -> function_declaration .)
    FLT             reduce using rule 9 (statement -> function_declaration .)
    STR             reduce using rule 9 (statement -> function_declaration .)
    TRUE            reduce using rule 9 (statement -> function_declaration .)
    FALSE           reduce using rule 9 (statement -> function_declaration .)
    $end            reduce using rule 9 (statement -> function_declaration .)
    CLOSECLASS      reduce using rule 9 (statement -> function_declaration .)
    ENDIF           reduce using rule 9 (statement -> function_declaration .)
    ELSE            reduce using rule 9 (statement -> function_declaration .)
    CLOSEFUNC       reduce using rule 9 (statement -> function_declaration .)


state 10

    (10) statement -> variable_declaration .

    IDENTIFIER      reduce using rule 10 (statement -> variable_declaration .)
    PRINT           reduce using rule 10 (statement -> variable_declaration .)
    FUNC            reduce using rule 10 (statement -> variable_declaration .)
    ARRAY           reduce using rule 10 (statement -> variable_declaration .)
    CLASS           reduce using rule 10 (statement -> variable_declaration .)
    MAIN            reduce using rule 10 (statement -> variable_declaration .)
    IF              reduce using rule 10 (statement -> variable_declaration .)
    FOR             reduce using rule 10 (statement -> variable_declaration .)
    WHILE           reduce using rule 10 (statement -> variable_declaration .)
    COLON           reduce using rule 10 (statement -> variable_declaration .)
    EQUAL           reduce using rule 10 (statement -> variable_declaration .)
    INTEGER         reduce using rule 10 (statement -> variable_declaration .)
    FLOAT           reduce using rule 10 (statement -> variable_declaration .)
    STRING          reduce using rule 10 (statement -> variable_declaration .)
    INT             reduce using rule 10 (statement -> variable_declaration .)
    FLT             reduce using rule 10 (statement -> variable_declaration .)
    STR             reduce using rule 10 (statement -> variable_declaration .)
    TRUE            reduce using rule 10 (statement -> variable_declaration .)
    FALSE           reduce using rule 10 (statement -> variable_declaration .)
    $end            reduce using rule 10 (statement -> variable_declaration .)
    CLOSECLASS      reduce using rule 10 (statement -> variable_declaration .)
    ENDIF           reduce using rule 10 (statement -> variable_declaration .)
    ELSE            reduce using rule 10 (statement -> variable_declaration .)
    CLOSEFUNC       reduce using rule 10 (statement -> variable_declaration .)


state 11

    (11) statement -> array_declaration .

    IDENTIFIER      reduce using rule 11 (statement -> array_declaration .)
    PRINT           reduce using rule 11 (statement -> array_declaration .)
    FUNC            reduce using rule 11 (statement -> array_declaration .)
    ARRAY           reduce using rule 11 (statement -> array_declaration .)
    CLASS           reduce using rule 11 (statement -> array_declaration .)
    MAIN            reduce using rule 11 (statement -> array_declaration .)
    IF              reduce using rule 11 (statement -> array_declaration .)
    FOR             reduce using rule 11 (statement -> array_declaration .)
    WHILE           reduce using rule 11 (statement -> array_declaration .)
    COLON           reduce using rule 11 (statement -> array_declaration .)
    EQUAL           reduce using rule 11 (statement -> array_declaration .)
    INTEGER         reduce using rule 11 (statement -> array_declaration .)
    FLOAT           reduce using rule 11 (statement -> array_declaration .)
    STRING          reduce using rule 11 (statement -> array_declaration .)
    INT             reduce using rule 11 (statement -> array_declaration .)
    FLT             reduce using rule 11 (statement -> array_declaration .)
    STR             reduce using rule 11 (statement -> array_declaration .)
    TRUE            reduce using rule 11 (statement -> array_declaration .)
    FALSE           reduce using rule 11 (statement -> array_declaration .)
    $end            reduce using rule 11 (statement -> array_declaration .)
    CLOSECLASS      reduce using rule 11 (statement -> array_declaration .)
    ENDIF           reduce using rule 11 (statement -> array_declaration .)
    ELSE            reduce using rule 11 (statement -> array_declaration .)
    CLOSEFUNC       reduce using rule 11 (statement -> array_declaration .)


state 12

    (12) statement -> class_declaration .

    IDENTIFIER      reduce using rule 12 (statement -> class_declaration .)
    PRINT           reduce using rule 12 (statement -> class_declaration .)
    FUNC            reduce using rule 12 (statement -> class_declaration .)
    ARRAY           reduce using rule 12 (statement -> class_declaration .)
    CLASS           reduce using rule 12 (statement -> class_declaration .)
    MAIN            reduce using rule 12 (statement -> class_declaration .)
    IF              reduce using rule 12 (statement -> class_declaration .)
    FOR             reduce using rule 12 (statement -> class_declaration .)
    WHILE           reduce using rule 12 (statement -> class_declaration .)
    COLON           reduce using rule 12 (statement -> class_declaration .)
    EQUAL           reduce using rule 12 (statement -> class_declaration .)
    INTEGER         reduce using rule 12 (statement -> class_declaration .)
    FLOAT           reduce using rule 12 (statement -> class_declaration .)
    STRING          reduce using rule 12 (statement -> class_declaration .)
    INT             reduce using rule 12 (statement -> class_declaration .)
    FLT             reduce using rule 12 (statement -> class_declaration .)
    STR             reduce using rule 12 (statement -> class_declaration .)
    TRUE            reduce using rule 12 (statement -> class_declaration .)
    FALSE           reduce using rule 12 (statement -> class_declaration .)
    $end            reduce using rule 12 (statement -> class_declaration .)
    CLOSECLASS      reduce using rule 12 (statement -> class_declaration .)
    ENDIF           reduce using rule 12 (statement -> class_declaration .)
    ELSE            reduce using rule 12 (statement -> class_declaration .)
    CLOSEFUNC       reduce using rule 12 (statement -> class_declaration .)


state 13

    (13) statement -> main_function .

    IDENTIFIER      reduce using rule 13 (statement -> main_function .)
    PRINT           reduce using rule 13 (statement -> main_function .)
    FUNC            reduce using rule 13 (statement -> main_function .)
    ARRAY           reduce using rule 13 (statement -> main_function .)
    CLASS           reduce using rule 13 (statement -> main_function .)
    MAIN            reduce using rule 13 (statement -> main_function .)
    IF              reduce using rule 13 (statement -> main_function .)
    FOR             reduce using rule 13 (statement -> main_function .)
    WHILE           reduce using rule 13 (statement -> main_function .)
    COLON           reduce using rule 13 (statement -> main_function .)
    EQUAL           reduce using rule 13 (statement -> main_function .)
    INTEGER         reduce using rule 13 (statement -> main_function .)
    FLOAT           reduce using rule 13 (statement -> main_function .)
    STRING          reduce using rule 13 (statement -> main_function .)
    INT             reduce using rule 13 (statement -> main_function .)
    FLT             reduce using rule 13 (statement -> main_function .)
    STR             reduce using rule 13 (statement -> main_function .)
    TRUE            reduce using rule 13 (statement -> main_function .)
    FALSE           reduce using rule 13 (statement -> main_function .)
    $end            reduce using rule 13 (statement -> main_function .)
    CLOSECLASS      reduce using rule 13 (statement -> main_function .)
    ENDIF           reduce using rule 13 (statement -> main_function .)
    ELSE            reduce using rule 13 (statement -> main_function .)
    CLOSEFUNC       reduce using rule 13 (statement -> main_function .)


state 14

    (16) conditional -> inline_if_statement .

    IDENTIFIER      reduce using rule 16 (conditional -> inline_if_statement .)
    PRINT           reduce using rule 16 (conditional -> inline_if_statement .)
    FUNC            reduce using rule 16 (conditional -> inline_if_statement .)
    ARRAY           reduce using rule 16 (conditional -> inline_if_statement .)
    CLASS           reduce using rule 16 (conditional -> inline_if_statement .)
    MAIN            reduce using rule 16 (conditional -> inline_if_statement .)
    IF              reduce using rule 16 (conditional -> inline_if_statement .)
    FOR             reduce using rule 16 (conditional -> inline_if_statement .)
    WHILE           reduce using rule 16 (conditional -> inline_if_statement .)
    COLON           reduce using rule 16 (conditional -> inline_if_statement .)
    EQUAL           reduce using rule 16 (conditional -> inline_if_statement .)
    INTEGER         reduce using rule 16 (conditional -> inline_if_statement .)
    FLOAT           reduce using rule 16 (conditional -> inline_if_statement .)
    STRING          reduce using rule 16 (conditional -> inline_if_statement .)
    INT             reduce using rule 16 (conditional -> inline_if_statement .)
    FLT             reduce using rule 16 (conditional -> inline_if_statement .)
    STR             reduce using rule 16 (conditional -> inline_if_statement .)
    TRUE            reduce using rule 16 (conditional -> inline_if_statement .)
    FALSE           reduce using rule 16 (conditional -> inline_if_statement .)
    $end            reduce using rule 16 (conditional -> inline_if_statement .)
    CLOSECLASS      reduce using rule 16 (conditional -> inline_if_statement .)
    ENDIF           reduce using rule 16 (conditional -> inline_if_statement .)
    ELSE            reduce using rule 16 (conditional -> inline_if_statement .)
    CLOSEFUNC       reduce using rule 16 (conditional -> inline_if_statement .)


state 15

    (17) conditional -> for_statement .

    IDENTIFIER      reduce using rule 17 (conditional -> for_statement .)
    PRINT           reduce using rule 17 (conditional -> for_statement .)
    FUNC            reduce using rule 17 (conditional -> for_statement .)
    ARRAY           reduce using rule 17 (conditional -> for_statement .)
    CLASS           reduce using rule 17 (conditional -> for_statement .)
    MAIN            reduce using rule 17 (conditional -> for_statement .)
    IF              reduce using rule 17 (conditional -> for_statement .)
    FOR             reduce using rule 17 (conditional -> for_statement .)
    WHILE           reduce using rule 17 (conditional -> for_statement .)
    COLON           reduce using rule 17 (conditional -> for_statement .)
    EQUAL           reduce using rule 17 (conditional -> for_statement .)
    INTEGER         reduce using rule 17 (conditional -> for_statement .)
    FLOAT           reduce using rule 17 (conditional -> for_statement .)
    STRING          reduce using rule 17 (conditional -> for_statement .)
    INT             reduce using rule 17 (conditional -> for_statement .)
    FLT             reduce using rule 17 (conditional -> for_statement .)
    STR             reduce using rule 17 (conditional -> for_statement .)
    TRUE            reduce using rule 17 (conditional -> for_statement .)
    FALSE           reduce using rule 17 (conditional -> for_statement .)
    $end            reduce using rule 17 (conditional -> for_statement .)
    CLOSECLASS      reduce using rule 17 (conditional -> for_statement .)
    ENDIF           reduce using rule 17 (conditional -> for_statement .)
    ELSE            reduce using rule 17 (conditional -> for_statement .)
    CLOSEFUNC       reduce using rule 17 (conditional -> for_statement .)


state 16

    (18) conditional -> while_statement .

    IDENTIFIER      reduce using rule 18 (conditional -> while_statement .)
    PRINT           reduce using rule 18 (conditional -> while_statement .)
    FUNC            reduce using rule 18 (conditional -> while_statement .)
    ARRAY           reduce using rule 18 (conditional -> while_statement .)
    CLASS           reduce using rule 18 (conditional -> while_statement .)
    MAIN            reduce using rule 18 (conditional -> while_statement .)
    IF              reduce using rule 18 (conditional -> while_statement .)
    FOR             reduce using rule 18 (conditional -> while_statement .)
    WHILE           reduce using rule 18 (conditional -> while_statement .)
    COLON           reduce using rule 18 (conditional -> while_statement .)
    EQUAL           reduce using rule 18 (conditional -> while_statement .)
    INTEGER         reduce using rule 18 (conditional -> while_statement .)
    FLOAT           reduce using rule 18 (conditional -> while_statement .)
    STRING          reduce using rule 18 (conditional -> while_statement .)
    INT             reduce using rule 18 (conditional -> while_statement .)
    FLT             reduce using rule 18 (conditional -> while_statement .)
    STR             reduce using rule 18 (conditional -> while_statement .)
    TRUE            reduce using rule 18 (conditional -> while_statement .)
    FALSE           reduce using rule 18 (conditional -> while_statement .)
    $end            reduce using rule 18 (conditional -> while_statement .)
    CLOSECLASS      reduce using rule 18 (conditional -> while_statement .)
    ENDIF           reduce using rule 18 (conditional -> while_statement .)
    ELSE            reduce using rule 18 (conditional -> while_statement .)
    CLOSEFUNC       reduce using rule 18 (conditional -> while_statement .)


state 17

    (50) token -> EQUAL .

    GREATERTHAN     reduce using rule 50 (token -> EQUAL .)
    LESSTHAN        reduce using rule 50 (token -> EQUAL .)
    GREATEREQUAL    reduce using rule 50 (token -> EQUAL .)
    LESSEQUAL       reduce using rule 50 (token -> EQUAL .)
    EQUALEQUAL      reduce using rule 50 (token -> EQUAL .)
    NOTEQUAL        reduce using rule 50 (token -> EQUAL .)
    PLUS            reduce using rule 50 (token -> EQUAL .)
    MINUS           reduce using rule 50 (token -> EQUAL .)
    TIMES           reduce using rule 50 (token -> EQUAL .)
    DIVIDE          reduce using rule 50 (token -> EQUAL .)
    EQUAL           reduce using rule 50 (token -> EQUAL .)
    IDENTIFIER      reduce using rule 50 (token -> EQUAL .)
    PRINT           reduce using rule 50 (token -> EQUAL .)
    FUNC            reduce using rule 50 (token -> EQUAL .)
    ARRAY           reduce using rule 50 (token -> EQUAL .)
    CLASS           reduce using rule 50 (token -> EQUAL .)
    MAIN            reduce using rule 50 (token -> EQUAL .)
    IF              reduce using rule 50 (token -> EQUAL .)
    FOR             reduce using rule 50 (token -> EQUAL .)
    WHILE           reduce using rule 50 (token -> EQUAL .)
    COLON           reduce using rule 50 (token -> EQUAL .)
    INTEGER         reduce using rule 50 (token -> EQUAL .)
    FLOAT           reduce using rule 50 (token -> EQUAL .)
    STRING          reduce using rule 50 (token -> EQUAL .)
    INT             reduce using rule 50 (token -> EQUAL .)
    FLT             reduce using rule 50 (token -> EQUAL .)
    STR             reduce using rule 50 (token -> EQUAL .)
    TRUE            reduce using rule 50 (token -> EQUAL .)
    FALSE           reduce using rule 50 (token -> EQUAL .)
    $end            reduce using rule 50 (token -> EQUAL .)
    CLOSECLASS      reduce using rule 50 (token -> EQUAL .)
    ENDIF           reduce using rule 50 (token -> EQUAL .)
    ELSE            reduce using rule 50 (token -> EQUAL .)
    CLOSEFUNC       reduce using rule 50 (token -> EQUAL .)
    IN              reduce using rule 50 (token -> EQUAL .)
    RPAREN          reduce using rule 50 (token -> EQUAL .)
    COMMA           reduce using rule 50 (token -> EQUAL .)


state 18

    (42) expression -> token .

    GREATERTHAN     reduce using rule 42 (expression -> token .)
    LESSTHAN        reduce using rule 42 (expression -> token .)
    GREATEREQUAL    reduce using rule 42 (expression -> token .)
    LESSEQUAL       reduce using rule 42 (expression -> token .)
    EQUALEQUAL      reduce using rule 42 (expression -> token .)
    NOTEQUAL        reduce using rule 42 (expression -> token .)
    PLUS            reduce using rule 42 (expression -> token .)
    MINUS           reduce using rule 42 (expression -> token .)
    TIMES           reduce using rule 42 (expression -> token .)
    DIVIDE          reduce using rule 42 (expression -> token .)
    EQUAL           reduce using rule 42 (expression -> token .)
    IDENTIFIER      reduce using rule 42 (expression -> token .)
    PRINT           reduce using rule 42 (expression -> token .)
    FUNC            reduce using rule 42 (expression -> token .)
    ARRAY           reduce using rule 42 (expression -> token .)
    CLASS           reduce using rule 42 (expression -> token .)
    MAIN            reduce using rule 42 (expression -> token .)
    IF              reduce using rule 42 (expression -> token .)
    FOR             reduce using rule 42 (expression -> token .)
    WHILE           reduce using rule 42 (expression -> token .)
    COLON           reduce using rule 42 (expression -> token .)
    INTEGER         reduce using rule 42 (expression -> token .)
    FLOAT           reduce using rule 42 (expression -> token .)
    STRING          reduce using rule 42 (expression -> token .)
    INT             reduce using rule 42 (expression -> token .)
    FLT             reduce using rule 42 (expression -> token .)
    STR             reduce using rule 42 (expression -> token .)
    TRUE            reduce using rule 42 (expression -> token .)
    FALSE           reduce using rule 42 (expression -> token .)
    $end            reduce using rule 42 (expression -> token .)
    CLOSECLASS      reduce using rule 42 (expression -> token .)
    ENDIF           reduce using rule 42 (expression -> token .)
    ELSE            reduce using rule 42 (expression -> token .)
    CLOSEFUNC       reduce using rule 42 (expression -> token .)
    IN              reduce using rule 42 (expression -> token .)
    RPAREN          reduce using rule 42 (expression -> token .)
    COMMA           reduce using rule 42 (expression -> token .)


state 19

    (43) expression -> data .

    GREATERTHAN     reduce using rule 43 (expression -> data .)
    LESSTHAN        reduce using rule 43 (expression -> data .)
    GREATEREQUAL    reduce using rule 43 (expression -> data .)
    LESSEQUAL       reduce using rule 43 (expression -> data .)
    EQUALEQUAL      reduce using rule 43 (expression -> data .)
    NOTEQUAL        reduce using rule 43 (expression -> data .)
    PLUS            reduce using rule 43 (expression -> data .)
    MINUS           reduce using rule 43 (expression -> data .)
    TIMES           reduce using rule 43 (expression -> data .)
    DIVIDE          reduce using rule 43 (expression -> data .)
    EQUAL           reduce using rule 43 (expression -> data .)
    IDENTIFIER      reduce using rule 43 (expression -> data .)
    PRINT           reduce using rule 43 (expression -> data .)
    FUNC            reduce using rule 43 (expression -> data .)
    ARRAY           reduce using rule 43 (expression -> data .)
    CLASS           reduce using rule 43 (expression -> data .)
    MAIN            reduce using rule 43 (expression -> data .)
    IF              reduce using rule 43 (expression -> data .)
    FOR             reduce using rule 43 (expression -> data .)
    WHILE           reduce using rule 43 (expression -> data .)
    COLON           reduce using rule 43 (expression -> data .)
    INTEGER         reduce using rule 43 (expression -> data .)
    FLOAT           reduce using rule 43 (expression -> data .)
    STRING          reduce using rule 43 (expression -> data .)
    INT             reduce using rule 43 (expression -> data .)
    FLT             reduce using rule 43 (expression -> data .)
    STR             reduce using rule 43 (expression -> data .)
    TRUE            reduce using rule 43 (expression -> data .)
    FALSE           reduce using rule 43 (expression -> data .)
    $end            reduce using rule 43 (expression -> data .)
    CLOSECLASS      reduce using rule 43 (expression -> data .)
    ENDIF           reduce using rule 43 (expression -> data .)
    ELSE            reduce using rule 43 (expression -> data .)
    CLOSEFUNC       reduce using rule 43 (expression -> data .)
    IN              reduce using rule 43 (expression -> data .)
    RPAREN          reduce using rule 43 (expression -> data .)
    COMMA           reduce using rule 43 (expression -> data .)


state 20

    (51) assignment_statement -> IDENTIFIER . EQUAL expression
    (52) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (47) data -> IDENTIFIER .

  ! shift/reduce conflict for EQUAL resolved as shift
    EQUAL           shift and go to state 52
    LPAREN          shift and go to state 53
    GREATERTHAN     reduce using rule 47 (data -> IDENTIFIER .)
    LESSTHAN        reduce using rule 47 (data -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 47 (data -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 47 (data -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 47 (data -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 47 (data -> IDENTIFIER .)
    PLUS            reduce using rule 47 (data -> IDENTIFIER .)
    MINUS           reduce using rule 47 (data -> IDENTIFIER .)
    TIMES           reduce using rule 47 (data -> IDENTIFIER .)
    DIVIDE          reduce using rule 47 (data -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 47 (data -> IDENTIFIER .)
    PRINT           reduce using rule 47 (data -> IDENTIFIER .)
    FUNC            reduce using rule 47 (data -> IDENTIFIER .)
    ARRAY           reduce using rule 47 (data -> IDENTIFIER .)
    CLASS           reduce using rule 47 (data -> IDENTIFIER .)
    MAIN            reduce using rule 47 (data -> IDENTIFIER .)
    IF              reduce using rule 47 (data -> IDENTIFIER .)
    FOR             reduce using rule 47 (data -> IDENTIFIER .)
    WHILE           reduce using rule 47 (data -> IDENTIFIER .)
    COLON           reduce using rule 47 (data -> IDENTIFIER .)
    INTEGER         reduce using rule 47 (data -> IDENTIFIER .)
    FLOAT           reduce using rule 47 (data -> IDENTIFIER .)
    STRING          reduce using rule 47 (data -> IDENTIFIER .)
    INT             reduce using rule 47 (data -> IDENTIFIER .)
    FLT             reduce using rule 47 (data -> IDENTIFIER .)
    STR             reduce using rule 47 (data -> IDENTIFIER .)
    TRUE            reduce using rule 47 (data -> IDENTIFIER .)
    FALSE           reduce using rule 47 (data -> IDENTIFIER .)
    $end            reduce using rule 47 (data -> IDENTIFIER .)
    CLOSECLASS      reduce using rule 47 (data -> IDENTIFIER .)
    ENDIF           reduce using rule 47 (data -> IDENTIFIER .)
    ELSE            reduce using rule 47 (data -> IDENTIFIER .)
    CLOSEFUNC       reduce using rule 47 (data -> IDENTIFIER .)

  ! EQUAL           [ reduce using rule 47 (data -> IDENTIFIER .) ]


state 21

    (30) print_statement -> PRINT . LPAREN STRING RPAREN

    LPAREN          shift and go to state 54


state 22

    (46) data -> STRING .

    GREATERTHAN     reduce using rule 46 (data -> STRING .)
    LESSTHAN        reduce using rule 46 (data -> STRING .)
    GREATEREQUAL    reduce using rule 46 (data -> STRING .)
    LESSEQUAL       reduce using rule 46 (data -> STRING .)
    EQUALEQUAL      reduce using rule 46 (data -> STRING .)
    NOTEQUAL        reduce using rule 46 (data -> STRING .)
    PLUS            reduce using rule 46 (data -> STRING .)
    MINUS           reduce using rule 46 (data -> STRING .)
    TIMES           reduce using rule 46 (data -> STRING .)
    DIVIDE          reduce using rule 46 (data -> STRING .)
    EQUAL           reduce using rule 46 (data -> STRING .)
    IDENTIFIER      reduce using rule 46 (data -> STRING .)
    PRINT           reduce using rule 46 (data -> STRING .)
    FUNC            reduce using rule 46 (data -> STRING .)
    ARRAY           reduce using rule 46 (data -> STRING .)
    CLASS           reduce using rule 46 (data -> STRING .)
    MAIN            reduce using rule 46 (data -> STRING .)
    IF              reduce using rule 46 (data -> STRING .)
    FOR             reduce using rule 46 (data -> STRING .)
    WHILE           reduce using rule 46 (data -> STRING .)
    COLON           reduce using rule 46 (data -> STRING .)
    INTEGER         reduce using rule 46 (data -> STRING .)
    FLOAT           reduce using rule 46 (data -> STRING .)
    STRING          reduce using rule 46 (data -> STRING .)
    INT             reduce using rule 46 (data -> STRING .)
    FLT             reduce using rule 46 (data -> STRING .)
    STR             reduce using rule 46 (data -> STRING .)
    TRUE            reduce using rule 46 (data -> STRING .)
    FALSE           reduce using rule 46 (data -> STRING .)
    $end            reduce using rule 46 (data -> STRING .)
    CLOSECLASS      reduce using rule 46 (data -> STRING .)
    ENDIF           reduce using rule 46 (data -> STRING .)
    ELSE            reduce using rule 46 (data -> STRING .)
    CLOSEFUNC       reduce using rule 46 (data -> STRING .)
    IN              reduce using rule 46 (data -> STRING .)
    RPAREN          reduce using rule 46 (data -> STRING .)
    COMMA           reduce using rule 46 (data -> STRING .)


state 23

    (21) function_declaration -> FUNC . type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR

    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37

    type                           shift and go to state 55

state 24

    (19) variable_declaration -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 56


state 25

    (49) token -> COLON .

    GREATERTHAN     reduce using rule 49 (token -> COLON .)
    LESSTHAN        reduce using rule 49 (token -> COLON .)
    GREATEREQUAL    reduce using rule 49 (token -> COLON .)
    LESSEQUAL       reduce using rule 49 (token -> COLON .)
    EQUALEQUAL      reduce using rule 49 (token -> COLON .)
    NOTEQUAL        reduce using rule 49 (token -> COLON .)
    PLUS            reduce using rule 49 (token -> COLON .)
    MINUS           reduce using rule 49 (token -> COLON .)
    TIMES           reduce using rule 49 (token -> COLON .)
    DIVIDE          reduce using rule 49 (token -> COLON .)
    EQUAL           reduce using rule 49 (token -> COLON .)
    IDENTIFIER      reduce using rule 49 (token -> COLON .)
    PRINT           reduce using rule 49 (token -> COLON .)
    FUNC            reduce using rule 49 (token -> COLON .)
    ARRAY           reduce using rule 49 (token -> COLON .)
    CLASS           reduce using rule 49 (token -> COLON .)
    MAIN            reduce using rule 49 (token -> COLON .)
    IF              reduce using rule 49 (token -> COLON .)
    FOR             reduce using rule 49 (token -> COLON .)
    WHILE           reduce using rule 49 (token -> COLON .)
    COLON           reduce using rule 49 (token -> COLON .)
    INTEGER         reduce using rule 49 (token -> COLON .)
    FLOAT           reduce using rule 49 (token -> COLON .)
    STRING          reduce using rule 49 (token -> COLON .)
    INT             reduce using rule 49 (token -> COLON .)
    FLT             reduce using rule 49 (token -> COLON .)
    STR             reduce using rule 49 (token -> COLON .)
    TRUE            reduce using rule 49 (token -> COLON .)
    FALSE           reduce using rule 49 (token -> COLON .)
    $end            reduce using rule 49 (token -> COLON .)
    CLOSECLASS      reduce using rule 49 (token -> COLON .)
    ENDIF           reduce using rule 49 (token -> COLON .)
    ELSE            reduce using rule 49 (token -> COLON .)
    CLOSEFUNC       reduce using rule 49 (token -> COLON .)
    IN              reduce using rule 49 (token -> COLON .)
    RPAREN          reduce using rule 49 (token -> COLON .)
    COMMA           reduce using rule 49 (token -> COLON .)


state 26

    (20) array_declaration -> ARRAY . type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR

    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37

    type                           shift and go to state 57

state 27

    (44) data -> INTEGER .

    GREATERTHAN     reduce using rule 44 (data -> INTEGER .)
    LESSTHAN        reduce using rule 44 (data -> INTEGER .)
    GREATEREQUAL    reduce using rule 44 (data -> INTEGER .)
    LESSEQUAL       reduce using rule 44 (data -> INTEGER .)
    EQUALEQUAL      reduce using rule 44 (data -> INTEGER .)
    NOTEQUAL        reduce using rule 44 (data -> INTEGER .)
    PLUS            reduce using rule 44 (data -> INTEGER .)
    MINUS           reduce using rule 44 (data -> INTEGER .)
    TIMES           reduce using rule 44 (data -> INTEGER .)
    DIVIDE          reduce using rule 44 (data -> INTEGER .)
    EQUAL           reduce using rule 44 (data -> INTEGER .)
    IDENTIFIER      reduce using rule 44 (data -> INTEGER .)
    PRINT           reduce using rule 44 (data -> INTEGER .)
    FUNC            reduce using rule 44 (data -> INTEGER .)
    ARRAY           reduce using rule 44 (data -> INTEGER .)
    CLASS           reduce using rule 44 (data -> INTEGER .)
    MAIN            reduce using rule 44 (data -> INTEGER .)
    IF              reduce using rule 44 (data -> INTEGER .)
    FOR             reduce using rule 44 (data -> INTEGER .)
    WHILE           reduce using rule 44 (data -> INTEGER .)
    COLON           reduce using rule 44 (data -> INTEGER .)
    INTEGER         reduce using rule 44 (data -> INTEGER .)
    FLOAT           reduce using rule 44 (data -> INTEGER .)
    STRING          reduce using rule 44 (data -> INTEGER .)
    INT             reduce using rule 44 (data -> INTEGER .)
    FLT             reduce using rule 44 (data -> INTEGER .)
    STR             reduce using rule 44 (data -> INTEGER .)
    TRUE            reduce using rule 44 (data -> INTEGER .)
    FALSE           reduce using rule 44 (data -> INTEGER .)
    $end            reduce using rule 44 (data -> INTEGER .)
    CLOSECLASS      reduce using rule 44 (data -> INTEGER .)
    ENDIF           reduce using rule 44 (data -> INTEGER .)
    ELSE            reduce using rule 44 (data -> INTEGER .)
    CLOSEFUNC       reduce using rule 44 (data -> INTEGER .)
    IN              reduce using rule 44 (data -> INTEGER .)
    RPAREN          reduce using rule 44 (data -> INTEGER .)
    COMMA           reduce using rule 44 (data -> INTEGER .)


state 28

    (22) class_declaration -> CLASS . IDENTIFIER COLON statements CLOSECLASS

    IDENTIFIER      shift and go to state 58


state 29

    (15) main_function -> MAIN . LPAREN RPAREN COLON statements

    LPAREN          shift and go to state 59


state 30

    (23) inline_if_statement -> IF . LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> IF . LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF

    LPAREN          shift and go to state 60


state 31

    (25) for_statement -> FOR . expression IN range_expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 61
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 32

    (27) while_statement -> WHILE . expression COLON statements
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 63
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 33

    (45) data -> FLOAT .

    GREATERTHAN     reduce using rule 45 (data -> FLOAT .)
    LESSTHAN        reduce using rule 45 (data -> FLOAT .)
    GREATEREQUAL    reduce using rule 45 (data -> FLOAT .)
    LESSEQUAL       reduce using rule 45 (data -> FLOAT .)
    EQUALEQUAL      reduce using rule 45 (data -> FLOAT .)
    NOTEQUAL        reduce using rule 45 (data -> FLOAT .)
    PLUS            reduce using rule 45 (data -> FLOAT .)
    MINUS           reduce using rule 45 (data -> FLOAT .)
    TIMES           reduce using rule 45 (data -> FLOAT .)
    DIVIDE          reduce using rule 45 (data -> FLOAT .)
    EQUAL           reduce using rule 45 (data -> FLOAT .)
    IDENTIFIER      reduce using rule 45 (data -> FLOAT .)
    PRINT           reduce using rule 45 (data -> FLOAT .)
    FUNC            reduce using rule 45 (data -> FLOAT .)
    ARRAY           reduce using rule 45 (data -> FLOAT .)
    CLASS           reduce using rule 45 (data -> FLOAT .)
    MAIN            reduce using rule 45 (data -> FLOAT .)
    IF              reduce using rule 45 (data -> FLOAT .)
    FOR             reduce using rule 45 (data -> FLOAT .)
    WHILE           reduce using rule 45 (data -> FLOAT .)
    COLON           reduce using rule 45 (data -> FLOAT .)
    INTEGER         reduce using rule 45 (data -> FLOAT .)
    FLOAT           reduce using rule 45 (data -> FLOAT .)
    STRING          reduce using rule 45 (data -> FLOAT .)
    INT             reduce using rule 45 (data -> FLOAT .)
    FLT             reduce using rule 45 (data -> FLOAT .)
    STR             reduce using rule 45 (data -> FLOAT .)
    TRUE            reduce using rule 45 (data -> FLOAT .)
    FALSE           reduce using rule 45 (data -> FLOAT .)
    $end            reduce using rule 45 (data -> FLOAT .)
    CLOSECLASS      reduce using rule 45 (data -> FLOAT .)
    ENDIF           reduce using rule 45 (data -> FLOAT .)
    ELSE            reduce using rule 45 (data -> FLOAT .)
    CLOSEFUNC       reduce using rule 45 (data -> FLOAT .)
    IN              reduce using rule 45 (data -> FLOAT .)
    RPAREN          reduce using rule 45 (data -> FLOAT .)
    COMMA           reduce using rule 45 (data -> FLOAT .)


state 34

    (48) data -> bool .

    GREATERTHAN     reduce using rule 48 (data -> bool .)
    LESSTHAN        reduce using rule 48 (data -> bool .)
    GREATEREQUAL    reduce using rule 48 (data -> bool .)
    LESSEQUAL       reduce using rule 48 (data -> bool .)
    EQUALEQUAL      reduce using rule 48 (data -> bool .)
    NOTEQUAL        reduce using rule 48 (data -> bool .)
    PLUS            reduce using rule 48 (data -> bool .)
    MINUS           reduce using rule 48 (data -> bool .)
    TIMES           reduce using rule 48 (data -> bool .)
    DIVIDE          reduce using rule 48 (data -> bool .)
    EQUAL           reduce using rule 48 (data -> bool .)
    IDENTIFIER      reduce using rule 48 (data -> bool .)
    PRINT           reduce using rule 48 (data -> bool .)
    FUNC            reduce using rule 48 (data -> bool .)
    ARRAY           reduce using rule 48 (data -> bool .)
    CLASS           reduce using rule 48 (data -> bool .)
    MAIN            reduce using rule 48 (data -> bool .)
    IF              reduce using rule 48 (data -> bool .)
    FOR             reduce using rule 48 (data -> bool .)
    WHILE           reduce using rule 48 (data -> bool .)
    COLON           reduce using rule 48 (data -> bool .)
    INTEGER         reduce using rule 48 (data -> bool .)
    FLOAT           reduce using rule 48 (data -> bool .)
    STRING          reduce using rule 48 (data -> bool .)
    INT             reduce using rule 48 (data -> bool .)
    FLT             reduce using rule 48 (data -> bool .)
    STR             reduce using rule 48 (data -> bool .)
    TRUE            reduce using rule 48 (data -> bool .)
    FALSE           reduce using rule 48 (data -> bool .)
    $end            reduce using rule 48 (data -> bool .)
    CLOSECLASS      reduce using rule 48 (data -> bool .)
    ENDIF           reduce using rule 48 (data -> bool .)
    ELSE            reduce using rule 48 (data -> bool .)
    CLOSEFUNC       reduce using rule 48 (data -> bool .)
    IN              reduce using rule 48 (data -> bool .)
    RPAREN          reduce using rule 48 (data -> bool .)
    COMMA           reduce using rule 48 (data -> bool .)


state 35

    (56) type -> INT .

    IDENTIFIER      reduce using rule 56 (type -> INT .)


state 36

    (57) type -> FLT .

    IDENTIFIER      reduce using rule 57 (type -> FLT .)


state 37

    (58) type -> STR .

    IDENTIFIER      reduce using rule 58 (type -> STR .)


state 38

    (28) bool -> TRUE .

    GREATERTHAN     reduce using rule 28 (bool -> TRUE .)
    LESSTHAN        reduce using rule 28 (bool -> TRUE .)
    GREATEREQUAL    reduce using rule 28 (bool -> TRUE .)
    LESSEQUAL       reduce using rule 28 (bool -> TRUE .)
    EQUALEQUAL      reduce using rule 28 (bool -> TRUE .)
    NOTEQUAL        reduce using rule 28 (bool -> TRUE .)
    PLUS            reduce using rule 28 (bool -> TRUE .)
    MINUS           reduce using rule 28 (bool -> TRUE .)
    TIMES           reduce using rule 28 (bool -> TRUE .)
    DIVIDE          reduce using rule 28 (bool -> TRUE .)
    EQUAL           reduce using rule 28 (bool -> TRUE .)
    IDENTIFIER      reduce using rule 28 (bool -> TRUE .)
    PRINT           reduce using rule 28 (bool -> TRUE .)
    FUNC            reduce using rule 28 (bool -> TRUE .)
    ARRAY           reduce using rule 28 (bool -> TRUE .)
    CLASS           reduce using rule 28 (bool -> TRUE .)
    MAIN            reduce using rule 28 (bool -> TRUE .)
    IF              reduce using rule 28 (bool -> TRUE .)
    FOR             reduce using rule 28 (bool -> TRUE .)
    WHILE           reduce using rule 28 (bool -> TRUE .)
    COLON           reduce using rule 28 (bool -> TRUE .)
    INTEGER         reduce using rule 28 (bool -> TRUE .)
    FLOAT           reduce using rule 28 (bool -> TRUE .)
    STRING          reduce using rule 28 (bool -> TRUE .)
    INT             reduce using rule 28 (bool -> TRUE .)
    FLT             reduce using rule 28 (bool -> TRUE .)
    STR             reduce using rule 28 (bool -> TRUE .)
    TRUE            reduce using rule 28 (bool -> TRUE .)
    FALSE           reduce using rule 28 (bool -> TRUE .)
    $end            reduce using rule 28 (bool -> TRUE .)
    CLOSECLASS      reduce using rule 28 (bool -> TRUE .)
    ENDIF           reduce using rule 28 (bool -> TRUE .)
    ELSE            reduce using rule 28 (bool -> TRUE .)
    CLOSEFUNC       reduce using rule 28 (bool -> TRUE .)
    IN              reduce using rule 28 (bool -> TRUE .)
    RPAREN          reduce using rule 28 (bool -> TRUE .)
    COMMA           reduce using rule 28 (bool -> TRUE .)


state 39

    (29) bool -> FALSE .

    GREATERTHAN     reduce using rule 29 (bool -> FALSE .)
    LESSTHAN        reduce using rule 29 (bool -> FALSE .)
    GREATEREQUAL    reduce using rule 29 (bool -> FALSE .)
    LESSEQUAL       reduce using rule 29 (bool -> FALSE .)
    EQUALEQUAL      reduce using rule 29 (bool -> FALSE .)
    NOTEQUAL        reduce using rule 29 (bool -> FALSE .)
    PLUS            reduce using rule 29 (bool -> FALSE .)
    MINUS           reduce using rule 29 (bool -> FALSE .)
    TIMES           reduce using rule 29 (bool -> FALSE .)
    DIVIDE          reduce using rule 29 (bool -> FALSE .)
    EQUAL           reduce using rule 29 (bool -> FALSE .)
    IDENTIFIER      reduce using rule 29 (bool -> FALSE .)
    PRINT           reduce using rule 29 (bool -> FALSE .)
    FUNC            reduce using rule 29 (bool -> FALSE .)
    ARRAY           reduce using rule 29 (bool -> FALSE .)
    CLASS           reduce using rule 29 (bool -> FALSE .)
    MAIN            reduce using rule 29 (bool -> FALSE .)
    IF              reduce using rule 29 (bool -> FALSE .)
    FOR             reduce using rule 29 (bool -> FALSE .)
    WHILE           reduce using rule 29 (bool -> FALSE .)
    COLON           reduce using rule 29 (bool -> FALSE .)
    INTEGER         reduce using rule 29 (bool -> FALSE .)
    FLOAT           reduce using rule 29 (bool -> FALSE .)
    STRING          reduce using rule 29 (bool -> FALSE .)
    INT             reduce using rule 29 (bool -> FALSE .)
    FLT             reduce using rule 29 (bool -> FALSE .)
    STR             reduce using rule 29 (bool -> FALSE .)
    TRUE            reduce using rule 29 (bool -> FALSE .)
    FALSE           reduce using rule 29 (bool -> FALSE .)
    $end            reduce using rule 29 (bool -> FALSE .)
    CLOSECLASS      reduce using rule 29 (bool -> FALSE .)
    ENDIF           reduce using rule 29 (bool -> FALSE .)
    ELSE            reduce using rule 29 (bool -> FALSE .)
    CLOSEFUNC       reduce using rule 29 (bool -> FALSE .)
    IN              reduce using rule 29 (bool -> FALSE .)
    RPAREN          reduce using rule 29 (bool -> FALSE .)
    COMMA           reduce using rule 29 (bool -> FALSE .)


state 40

    (1) statements -> statement statements .

    $end            reduce using rule 1 (statements -> statement statements .)
    CLOSECLASS      reduce using rule 1 (statements -> statement statements .)
    IDENTIFIER      reduce using rule 1 (statements -> statement statements .)
    PRINT           reduce using rule 1 (statements -> statement statements .)
    FUNC            reduce using rule 1 (statements -> statement statements .)
    ARRAY           reduce using rule 1 (statements -> statement statements .)
    CLASS           reduce using rule 1 (statements -> statement statements .)
    MAIN            reduce using rule 1 (statements -> statement statements .)
    IF              reduce using rule 1 (statements -> statement statements .)
    FOR             reduce using rule 1 (statements -> statement statements .)
    WHILE           reduce using rule 1 (statements -> statement statements .)
    COLON           reduce using rule 1 (statements -> statement statements .)
    EQUAL           reduce using rule 1 (statements -> statement statements .)
    INTEGER         reduce using rule 1 (statements -> statement statements .)
    FLOAT           reduce using rule 1 (statements -> statement statements .)
    STRING          reduce using rule 1 (statements -> statement statements .)
    INT             reduce using rule 1 (statements -> statement statements .)
    FLT             reduce using rule 1 (statements -> statement statements .)
    STR             reduce using rule 1 (statements -> statement statements .)
    TRUE            reduce using rule 1 (statements -> statement statements .)
    FALSE           reduce using rule 1 (statements -> statement statements .)
    ENDIF           reduce using rule 1 (statements -> statement statements .)
    ELSE            reduce using rule 1 (statements -> statement statements .)
    CLOSEFUNC       reduce using rule 1 (statements -> statement statements .)


state 41

    (31) expression -> expression GREATERTHAN . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 64
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 42

    (32) expression -> expression LESSTHAN . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 65
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 43

    (33) expression -> expression GREATEREQUAL . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 66
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 44

    (34) expression -> expression LESSEQUAL . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 67
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 45

    (35) expression -> expression EQUALEQUAL . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 68
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 46

    (36) expression -> expression NOTEQUAL . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 69
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 47

    (37) expression -> expression PLUS . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 70
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 48

    (38) expression -> expression MINUS . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 71
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 49

    (39) expression -> expression TIMES . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 72
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 50

    (40) expression -> expression DIVIDE . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 73
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 51

    (41) expression -> expression EQUAL . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 74
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 52

    (51) assignment_statement -> IDENTIFIER EQUAL . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 75
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 53

    (52) function_call -> IDENTIFIER LPAREN . argument_list RPAREN
    (53) argument_list -> . type IDENTIFIER COMMA argument_list
    (54) argument_list -> . type IDENTIFIER
    (55) argument_list -> . empty
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (59) empty -> .

    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    RPAREN          reduce using rule 59 (empty -> .)

    argument_list                  shift and go to state 76
    type                           shift and go to state 77
    empty                          shift and go to state 78

state 54

    (30) print_statement -> PRINT LPAREN . STRING RPAREN

    STRING          shift and go to state 79


state 55

    (21) function_declaration -> FUNC type . IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC

    IDENTIFIER      shift and go to state 80


state 56

    (19) variable_declaration -> type IDENTIFIER .

    IDENTIFIER      reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    PRINT           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    FUNC            reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    ARRAY           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    CLASS           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    MAIN            reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    IF              reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    FOR             reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    WHILE           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    COLON           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    EQUAL           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    INTEGER         reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    FLOAT           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    STRING          reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    INT             reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    FLT             reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    STR             reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    TRUE            reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    FALSE           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    $end            reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    CLOSECLASS      reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    ENDIF           reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    ELSE            reduce using rule 19 (variable_declaration -> type IDENTIFIER .)
    CLOSEFUNC       reduce using rule 19 (variable_declaration -> type IDENTIFIER .)


state 57

    (20) array_declaration -> ARRAY type . IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET

    IDENTIFIER      shift and go to state 81


state 58

    (22) class_declaration -> CLASS IDENTIFIER . COLON statements CLOSECLASS

    COLON           shift and go to state 82


state 59

    (15) main_function -> MAIN LPAREN . RPAREN COLON statements

    RPAREN          shift and go to state 83


state 60

    (23) inline_if_statement -> IF LPAREN . expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> IF LPAREN . expression RPAREN COLON statements ELSE COLON statements ENDIF
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 84
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 61

    (25) for_statement -> FOR expression . IN range_expression
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

    IN              shift and go to state 85
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51


state 62

    (47) data -> IDENTIFIER .

    IN              reduce using rule 47 (data -> IDENTIFIER .)
    GREATERTHAN     reduce using rule 47 (data -> IDENTIFIER .)
    LESSTHAN        reduce using rule 47 (data -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 47 (data -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 47 (data -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 47 (data -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 47 (data -> IDENTIFIER .)
    PLUS            reduce using rule 47 (data -> IDENTIFIER .)
    MINUS           reduce using rule 47 (data -> IDENTIFIER .)
    TIMES           reduce using rule 47 (data -> IDENTIFIER .)
    DIVIDE          reduce using rule 47 (data -> IDENTIFIER .)
    EQUAL           reduce using rule 47 (data -> IDENTIFIER .)
    COLON           reduce using rule 47 (data -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 47 (data -> IDENTIFIER .)
    PRINT           reduce using rule 47 (data -> IDENTIFIER .)
    FUNC            reduce using rule 47 (data -> IDENTIFIER .)
    ARRAY           reduce using rule 47 (data -> IDENTIFIER .)
    CLASS           reduce using rule 47 (data -> IDENTIFIER .)
    MAIN            reduce using rule 47 (data -> IDENTIFIER .)
    IF              reduce using rule 47 (data -> IDENTIFIER .)
    FOR             reduce using rule 47 (data -> IDENTIFIER .)
    WHILE           reduce using rule 47 (data -> IDENTIFIER .)
    INTEGER         reduce using rule 47 (data -> IDENTIFIER .)
    FLOAT           reduce using rule 47 (data -> IDENTIFIER .)
    STRING          reduce using rule 47 (data -> IDENTIFIER .)
    INT             reduce using rule 47 (data -> IDENTIFIER .)
    FLT             reduce using rule 47 (data -> IDENTIFIER .)
    STR             reduce using rule 47 (data -> IDENTIFIER .)
    TRUE            reduce using rule 47 (data -> IDENTIFIER .)
    FALSE           reduce using rule 47 (data -> IDENTIFIER .)
    $end            reduce using rule 47 (data -> IDENTIFIER .)
    CLOSECLASS      reduce using rule 47 (data -> IDENTIFIER .)
    ENDIF           reduce using rule 47 (data -> IDENTIFIER .)
    ELSE            reduce using rule 47 (data -> IDENTIFIER .)
    CLOSEFUNC       reduce using rule 47 (data -> IDENTIFIER .)
    RPAREN          reduce using rule 47 (data -> IDENTIFIER .)
    COMMA           reduce using rule 47 (data -> IDENTIFIER .)


state 63

    (27) while_statement -> WHILE expression . COLON statements
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

    COLON           shift and go to state 86
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51


state 64

    (31) expression -> expression GREATERTHAN expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    PRINT           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    FUNC            reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    ARRAY           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    CLASS           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    MAIN            reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    IF              reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    FOR             reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    WHILE           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    COLON           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    INTEGER         reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    FLOAT           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    STRING          reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    INT             reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    FLT             reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    STR             reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    TRUE            reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    FALSE           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    $end            reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    CLOSECLASS      reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    ENDIF           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    ELSE            reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    CLOSEFUNC       reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    IN              reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    RPAREN          reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    COMMA           reduce using rule 31 (expression -> expression GREATERTHAN expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! GREATEREQUAL    [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! LESSEQUAL       [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! EQUALEQUAL      [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! NOTEQUAL        [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]
  ! EQUAL           [ reduce using rule 31 (expression -> expression GREATERTHAN expression .) ]


state 65

    (32) expression -> expression LESSTHAN expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 32 (expression -> expression LESSTHAN expression .)
    PRINT           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    FUNC            reduce using rule 32 (expression -> expression LESSTHAN expression .)
    ARRAY           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    CLASS           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    MAIN            reduce using rule 32 (expression -> expression LESSTHAN expression .)
    IF              reduce using rule 32 (expression -> expression LESSTHAN expression .)
    FOR             reduce using rule 32 (expression -> expression LESSTHAN expression .)
    WHILE           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    COLON           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    INTEGER         reduce using rule 32 (expression -> expression LESSTHAN expression .)
    FLOAT           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    STRING          reduce using rule 32 (expression -> expression LESSTHAN expression .)
    INT             reduce using rule 32 (expression -> expression LESSTHAN expression .)
    FLT             reduce using rule 32 (expression -> expression LESSTHAN expression .)
    STR             reduce using rule 32 (expression -> expression LESSTHAN expression .)
    TRUE            reduce using rule 32 (expression -> expression LESSTHAN expression .)
    FALSE           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    $end            reduce using rule 32 (expression -> expression LESSTHAN expression .)
    CLOSECLASS      reduce using rule 32 (expression -> expression LESSTHAN expression .)
    ENDIF           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    ELSE            reduce using rule 32 (expression -> expression LESSTHAN expression .)
    CLOSEFUNC       reduce using rule 32 (expression -> expression LESSTHAN expression .)
    IN              reduce using rule 32 (expression -> expression LESSTHAN expression .)
    RPAREN          reduce using rule 32 (expression -> expression LESSTHAN expression .)
    COMMA           reduce using rule 32 (expression -> expression LESSTHAN expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! GREATEREQUAL    [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! LESSEQUAL       [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! EQUALEQUAL      [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! NOTEQUAL        [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]
  ! EQUAL           [ reduce using rule 32 (expression -> expression LESSTHAN expression .) ]


state 66

    (33) expression -> expression GREATEREQUAL expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    PRINT           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    FUNC            reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    ARRAY           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    CLASS           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    MAIN            reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    IF              reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    FOR             reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    WHILE           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    COLON           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    INTEGER         reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    FLOAT           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    STRING          reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    INT             reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    FLT             reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    STR             reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    TRUE            reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    FALSE           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    $end            reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    CLOSECLASS      reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    ENDIF           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    ELSE            reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    CLOSEFUNC       reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    IN              reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    RPAREN          reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    COMMA           reduce using rule 33 (expression -> expression GREATEREQUAL expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! EQUALEQUAL      [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! PLUS            [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]
  ! EQUAL           [ reduce using rule 33 (expression -> expression GREATEREQUAL expression .) ]


state 67

    (34) expression -> expression LESSEQUAL expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    PRINT           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    FUNC            reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    ARRAY           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    CLASS           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    MAIN            reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    IF              reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    FOR             reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    WHILE           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    COLON           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    INTEGER         reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    FLOAT           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    STRING          reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    INT             reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    FLT             reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    STR             reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    TRUE            reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    FALSE           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    $end            reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    CLOSECLASS      reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    ENDIF           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    ELSE            reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    CLOSEFUNC       reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    IN              reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    RPAREN          reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    COMMA           reduce using rule 34 (expression -> expression LESSEQUAL expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! EQUALEQUAL      [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 34 (expression -> expression LESSEQUAL expression .) ]


state 68

    (35) expression -> expression EQUALEQUAL expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    PRINT           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    FUNC            reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    ARRAY           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    CLASS           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    MAIN            reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    IF              reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    FOR             reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    WHILE           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    COLON           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    INTEGER         reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    FLOAT           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    STRING          reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    INT             reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    FLT             reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    STR             reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    TRUE            reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    FALSE           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    $end            reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    CLOSECLASS      reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    ENDIF           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    ELSE            reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    CLOSEFUNC       reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    IN              reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    RPAREN          reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    COMMA           reduce using rule 35 (expression -> expression EQUALEQUAL expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! EQUALEQUAL      [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 35 (expression -> expression EQUALEQUAL expression .) ]


state 69

    (36) expression -> expression NOTEQUAL expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    FUNC            reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    ARRAY           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    CLASS           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    MAIN            reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    COLON           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    INTEGER         reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    FLOAT           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    STRING          reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    INT             reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    FLT             reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    STR             reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    TRUE            reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    FALSE           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    CLOSECLASS      reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    ENDIF           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    ELSE            reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    CLOSEFUNC       reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    IN              reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 36 (expression -> expression NOTEQUAL expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! EQUALEQUAL      [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 36 (expression -> expression NOTEQUAL expression .) ]


state 70

    (37) expression -> expression PLUS expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 37 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 37 (expression -> expression PLUS expression .)
    FUNC            reduce using rule 37 (expression -> expression PLUS expression .)
    ARRAY           reduce using rule 37 (expression -> expression PLUS expression .)
    CLASS           reduce using rule 37 (expression -> expression PLUS expression .)
    MAIN            reduce using rule 37 (expression -> expression PLUS expression .)
    IF              reduce using rule 37 (expression -> expression PLUS expression .)
    FOR             reduce using rule 37 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 37 (expression -> expression PLUS expression .)
    COLON           reduce using rule 37 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 37 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 37 (expression -> expression PLUS expression .)
    STRING          reduce using rule 37 (expression -> expression PLUS expression .)
    INT             reduce using rule 37 (expression -> expression PLUS expression .)
    FLT             reduce using rule 37 (expression -> expression PLUS expression .)
    STR             reduce using rule 37 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 37 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 37 (expression -> expression PLUS expression .)
    $end            reduce using rule 37 (expression -> expression PLUS expression .)
    CLOSECLASS      reduce using rule 37 (expression -> expression PLUS expression .)
    ENDIF           reduce using rule 37 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 37 (expression -> expression PLUS expression .)
    CLOSEFUNC       reduce using rule 37 (expression -> expression PLUS expression .)
    IN              reduce using rule 37 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 37 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 37 (expression -> expression PLUS expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! LESSTHAN        [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! GREATEREQUAL    [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! LESSEQUAL       [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! EQUALEQUAL      [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 37 (expression -> expression PLUS expression .) ]


state 71

    (38) expression -> expression MINUS expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 38 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 38 (expression -> expression MINUS expression .)
    FUNC            reduce using rule 38 (expression -> expression MINUS expression .)
    ARRAY           reduce using rule 38 (expression -> expression MINUS expression .)
    CLASS           reduce using rule 38 (expression -> expression MINUS expression .)
    MAIN            reduce using rule 38 (expression -> expression MINUS expression .)
    IF              reduce using rule 38 (expression -> expression MINUS expression .)
    FOR             reduce using rule 38 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 38 (expression -> expression MINUS expression .)
    COLON           reduce using rule 38 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 38 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 38 (expression -> expression MINUS expression .)
    STRING          reduce using rule 38 (expression -> expression MINUS expression .)
    INT             reduce using rule 38 (expression -> expression MINUS expression .)
    FLT             reduce using rule 38 (expression -> expression MINUS expression .)
    STR             reduce using rule 38 (expression -> expression MINUS expression .)
    TRUE            reduce using rule 38 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 38 (expression -> expression MINUS expression .)
    $end            reduce using rule 38 (expression -> expression MINUS expression .)
    CLOSECLASS      reduce using rule 38 (expression -> expression MINUS expression .)
    ENDIF           reduce using rule 38 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 38 (expression -> expression MINUS expression .)
    CLOSEFUNC       reduce using rule 38 (expression -> expression MINUS expression .)
    IN              reduce using rule 38 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 38 (expression -> expression MINUS expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! LESSTHAN        [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! GREATEREQUAL    [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! LESSEQUAL       [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! EQUALEQUAL      [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! NOTEQUAL        [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 38 (expression -> expression MINUS expression .) ]


state 72

    (39) expression -> expression TIMES expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 39 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 39 (expression -> expression TIMES expression .)
    FUNC            reduce using rule 39 (expression -> expression TIMES expression .)
    ARRAY           reduce using rule 39 (expression -> expression TIMES expression .)
    CLASS           reduce using rule 39 (expression -> expression TIMES expression .)
    MAIN            reduce using rule 39 (expression -> expression TIMES expression .)
    IF              reduce using rule 39 (expression -> expression TIMES expression .)
    FOR             reduce using rule 39 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 39 (expression -> expression TIMES expression .)
    COLON           reduce using rule 39 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 39 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 39 (expression -> expression TIMES expression .)
    STRING          reduce using rule 39 (expression -> expression TIMES expression .)
    INT             reduce using rule 39 (expression -> expression TIMES expression .)
    FLT             reduce using rule 39 (expression -> expression TIMES expression .)
    STR             reduce using rule 39 (expression -> expression TIMES expression .)
    TRUE            reduce using rule 39 (expression -> expression TIMES expression .)
    FALSE           reduce using rule 39 (expression -> expression TIMES expression .)
    $end            reduce using rule 39 (expression -> expression TIMES expression .)
    CLOSECLASS      reduce using rule 39 (expression -> expression TIMES expression .)
    ENDIF           reduce using rule 39 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 39 (expression -> expression TIMES expression .)
    CLOSEFUNC       reduce using rule 39 (expression -> expression TIMES expression .)
    IN              reduce using rule 39 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 39 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 39 (expression -> expression TIMES expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! LESSTHAN        [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! GREATEREQUAL    [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! LESSEQUAL       [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! EQUALEQUAL      [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! NOTEQUAL        [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression TIMES expression .) ]
  ! EQUAL           [ reduce using rule 39 (expression -> expression TIMES expression .) ]


state 73

    (40) expression -> expression DIVIDE expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 40 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 40 (expression -> expression DIVIDE expression .)
    FUNC            reduce using rule 40 (expression -> expression DIVIDE expression .)
    ARRAY           reduce using rule 40 (expression -> expression DIVIDE expression .)
    CLASS           reduce using rule 40 (expression -> expression DIVIDE expression .)
    MAIN            reduce using rule 40 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 40 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 40 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 40 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 40 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 40 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 40 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 40 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 40 (expression -> expression DIVIDE expression .)
    FLT             reduce using rule 40 (expression -> expression DIVIDE expression .)
    STR             reduce using rule 40 (expression -> expression DIVIDE expression .)
    TRUE            reduce using rule 40 (expression -> expression DIVIDE expression .)
    FALSE           reduce using rule 40 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 40 (expression -> expression DIVIDE expression .)
    CLOSECLASS      reduce using rule 40 (expression -> expression DIVIDE expression .)
    ENDIF           reduce using rule 40 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 40 (expression -> expression DIVIDE expression .)
    CLOSEFUNC       reduce using rule 40 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 40 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 40 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 40 (expression -> expression DIVIDE expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! LESSTHAN        [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! GREATEREQUAL    [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! LESSEQUAL       [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! EQUALEQUAL      [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]
  ! EQUAL           [ reduce using rule 40 (expression -> expression DIVIDE expression .) ]


state 74

    (41) expression -> expression EQUAL expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 41 (expression -> expression EQUAL expression .)
    PRINT           reduce using rule 41 (expression -> expression EQUAL expression .)
    FUNC            reduce using rule 41 (expression -> expression EQUAL expression .)
    ARRAY           reduce using rule 41 (expression -> expression EQUAL expression .)
    CLASS           reduce using rule 41 (expression -> expression EQUAL expression .)
    MAIN            reduce using rule 41 (expression -> expression EQUAL expression .)
    IF              reduce using rule 41 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 41 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 41 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 41 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 41 (expression -> expression EQUAL expression .)
    FLOAT           reduce using rule 41 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 41 (expression -> expression EQUAL expression .)
    INT             reduce using rule 41 (expression -> expression EQUAL expression .)
    FLT             reduce using rule 41 (expression -> expression EQUAL expression .)
    STR             reduce using rule 41 (expression -> expression EQUAL expression .)
    TRUE            reduce using rule 41 (expression -> expression EQUAL expression .)
    FALSE           reduce using rule 41 (expression -> expression EQUAL expression .)
    $end            reduce using rule 41 (expression -> expression EQUAL expression .)
    CLOSECLASS      reduce using rule 41 (expression -> expression EQUAL expression .)
    ENDIF           reduce using rule 41 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 41 (expression -> expression EQUAL expression .)
    CLOSEFUNC       reduce using rule 41 (expression -> expression EQUAL expression .)
    IN              reduce using rule 41 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 41 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 41 (expression -> expression EQUAL expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! GREATERTHAN     [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! EQUALEQUAL      [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 41 (expression -> expression EQUAL expression .) ]


state 75

    (51) assignment_statement -> IDENTIFIER EQUAL expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    PRINT           reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FUNC            reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    ARRAY           reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    CLASS           reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    MAIN            reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    IF              reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FOR             reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    WHILE           reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    COLON           reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    INTEGER         reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FLOAT           reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    STRING          reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    INT             reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FLT             reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    STR             reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    TRUE            reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    FALSE           reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    $end            reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    CLOSECLASS      reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    ENDIF           reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    ELSE            reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    CLOSEFUNC       reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! EQUAL           [ reduce using rule 51 (assignment_statement -> IDENTIFIER EQUAL expression .) ]


state 76

    (52) function_call -> IDENTIFIER LPAREN argument_list . RPAREN

    RPAREN          shift and go to state 87


state 77

    (53) argument_list -> type . IDENTIFIER COMMA argument_list
    (54) argument_list -> type . IDENTIFIER

    IDENTIFIER      shift and go to state 88


state 78

    (55) argument_list -> empty .

    RPAREN          reduce using rule 55 (argument_list -> empty .)


state 79

    (30) print_statement -> PRINT LPAREN STRING . RPAREN

    RPAREN          shift and go to state 89


state 80

    (21) function_declaration -> FUNC type IDENTIFIER . LPAREN argument_list RPAREN COLON statements CLOSEFUNC

    LPAREN          shift and go to state 90


state 81

    (20) array_declaration -> ARRAY type IDENTIFIER . LSQUAREDBRACKET INTEGER RSQUAREDBRACKET

    LSQUAREDBRACKET shift and go to state 91


state 82

    (22) class_declaration -> CLASS IDENTIFIER COLON . statements CLOSECLASS
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . function_declaration
    (10) statement -> . variable_declaration
    (11) statement -> . array_declaration
    (12) statement -> . class_declaration
    (13) statement -> . main_function
    (14) statement -> . empty
    (59) empty -> .
    (16) conditional -> . inline_if_statement
    (17) conditional -> . for_statement
    (18) conditional -> . while_statement
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (51) assignment_statement -> . IDENTIFIER EQUAL expression
    (52) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (30) print_statement -> . PRINT LPAREN STRING RPAREN
    (21) function_declaration -> . FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (19) variable_declaration -> . type IDENTIFIER
    (20) array_declaration -> . ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (22) class_declaration -> . CLASS IDENTIFIER COLON statements CLOSECLASS
    (15) main_function -> . MAIN LPAREN RPAREN COLON statements
    (23) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
    (25) for_statement -> . FOR expression IN range_expression
    (27) while_statement -> . WHILE expression COLON statements
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (28) bool -> . TRUE
    (29) bool -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    CLOSECLASS      reduce using rule 59 (empty -> .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    FUNC            shift and go to state 23
    ARRAY           shift and go to state 26
    CLASS           shift and go to state 28
    MAIN            shift and go to state 29
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 59 (empty -> .) ]
  ! PRINT           [ reduce using rule 59 (empty -> .) ]
  ! FUNC            [ reduce using rule 59 (empty -> .) ]
  ! ARRAY           [ reduce using rule 59 (empty -> .) ]
  ! CLASS           [ reduce using rule 59 (empty -> .) ]
  ! MAIN            [ reduce using rule 59 (empty -> .) ]
  ! IF              [ reduce using rule 59 (empty -> .) ]
  ! FOR             [ reduce using rule 59 (empty -> .) ]
  ! WHILE           [ reduce using rule 59 (empty -> .) ]
  ! COLON           [ reduce using rule 59 (empty -> .) ]
  ! EQUAL           [ reduce using rule 59 (empty -> .) ]
  ! INTEGER         [ reduce using rule 59 (empty -> .) ]
  ! FLOAT           [ reduce using rule 59 (empty -> .) ]
  ! STRING          [ reduce using rule 59 (empty -> .) ]
  ! INT             [ reduce using rule 59 (empty -> .) ]
  ! FLT             [ reduce using rule 59 (empty -> .) ]
  ! STR             [ reduce using rule 59 (empty -> .) ]
  ! TRUE            [ reduce using rule 59 (empty -> .) ]
  ! FALSE           [ reduce using rule 59 (empty -> .) ]

    statements                     shift and go to state 92
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    expression                     shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    function_declaration           shift and go to state 9
    variable_declaration           shift and go to state 10
    array_declaration              shift and go to state 11
    class_declaration              shift and go to state 12
    main_function                  shift and go to state 13
    inline_if_statement            shift and go to state 14
    for_statement                  shift and go to state 15
    while_statement                shift and go to state 16
    token                          shift and go to state 18
    data                           shift and go to state 19
    type                           shift and go to state 24
    bool                           shift and go to state 34

state 83

    (15) main_function -> MAIN LPAREN RPAREN . COLON statements

    COLON           shift and go to state 93


state 84

    (23) inline_if_statement -> IF LPAREN expression . RPAREN COLON statements ENDIF
    (24) inline_if_statement -> IF LPAREN expression . RPAREN COLON statements ELSE COLON statements ENDIF
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

    RPAREN          shift and go to state 94
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51


state 85

    (25) for_statement -> FOR expression IN . range_expression
    (26) range_expression -> . RANGE expression COMMA expression

    RANGE           shift and go to state 96

    range_expression               shift and go to state 95

state 86

    (27) while_statement -> WHILE expression COLON . statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . function_declaration
    (10) statement -> . variable_declaration
    (11) statement -> . array_declaration
    (12) statement -> . class_declaration
    (13) statement -> . main_function
    (14) statement -> . empty
    (59) empty -> .
    (16) conditional -> . inline_if_statement
    (17) conditional -> . for_statement
    (18) conditional -> . while_statement
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (51) assignment_statement -> . IDENTIFIER EQUAL expression
    (52) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (30) print_statement -> . PRINT LPAREN STRING RPAREN
    (21) function_declaration -> . FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (19) variable_declaration -> . type IDENTIFIER
    (20) array_declaration -> . ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (22) class_declaration -> . CLASS IDENTIFIER COLON statements CLOSECLASS
    (15) main_function -> . MAIN LPAREN RPAREN COLON statements
    (23) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
    (25) for_statement -> . FOR expression IN range_expression
    (27) while_statement -> . WHILE expression COLON statements
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (28) bool -> . TRUE
    (29) bool -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 59 (empty -> .)
    CLOSECLASS      reduce using rule 59 (empty -> .)
    ENDIF           reduce using rule 59 (empty -> .)
    ELSE            reduce using rule 59 (empty -> .)
    CLOSEFUNC       reduce using rule 59 (empty -> .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    FUNC            shift and go to state 23
    ARRAY           shift and go to state 26
    CLASS           shift and go to state 28
    MAIN            shift and go to state 29
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 59 (empty -> .) ]
  ! PRINT           [ reduce using rule 59 (empty -> .) ]
  ! FUNC            [ reduce using rule 59 (empty -> .) ]
  ! ARRAY           [ reduce using rule 59 (empty -> .) ]
  ! CLASS           [ reduce using rule 59 (empty -> .) ]
  ! MAIN            [ reduce using rule 59 (empty -> .) ]
  ! IF              [ reduce using rule 59 (empty -> .) ]
  ! FOR             [ reduce using rule 59 (empty -> .) ]
  ! WHILE           [ reduce using rule 59 (empty -> .) ]
  ! COLON           [ reduce using rule 59 (empty -> .) ]
  ! EQUAL           [ reduce using rule 59 (empty -> .) ]
  ! INTEGER         [ reduce using rule 59 (empty -> .) ]
  ! FLOAT           [ reduce using rule 59 (empty -> .) ]
  ! STRING          [ reduce using rule 59 (empty -> .) ]
  ! INT             [ reduce using rule 59 (empty -> .) ]
  ! FLT             [ reduce using rule 59 (empty -> .) ]
  ! STR             [ reduce using rule 59 (empty -> .) ]
  ! TRUE            [ reduce using rule 59 (empty -> .) ]
  ! FALSE           [ reduce using rule 59 (empty -> .) ]

    expression                     shift and go to state 5
    statements                     shift and go to state 97
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    function_declaration           shift and go to state 9
    variable_declaration           shift and go to state 10
    array_declaration              shift and go to state 11
    class_declaration              shift and go to state 12
    main_function                  shift and go to state 13
    inline_if_statement            shift and go to state 14
    for_statement                  shift and go to state 15
    while_statement                shift and go to state 16
    token                          shift and go to state 18
    data                           shift and go to state 19
    type                           shift and go to state 24
    bool                           shift and go to state 34

state 87

    (52) function_call -> IDENTIFIER LPAREN argument_list RPAREN .

    IDENTIFIER      reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FUNC            reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    ARRAY           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    CLASS           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MAIN            reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    IF              reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FOR             reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    COLON           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    EQUAL           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    INTEGER         reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FLOAT           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    STRING          reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    INT             reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FLT             reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    STR             reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    TRUE            reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    FALSE           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    $end            reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    CLOSECLASS      reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    ENDIF           reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    CLOSEFUNC       reduce using rule 52 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)


state 88

    (53) argument_list -> type IDENTIFIER . COMMA argument_list
    (54) argument_list -> type IDENTIFIER .

    COMMA           shift and go to state 98
    RPAREN          reduce using rule 54 (argument_list -> type IDENTIFIER .)


state 89

    (30) print_statement -> PRINT LPAREN STRING RPAREN .

    IDENTIFIER      reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    PRINT           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    FUNC            reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    ARRAY           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    CLASS           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    MAIN            reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    IF              reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    FOR             reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    WHILE           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    COLON           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    EQUAL           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    INTEGER         reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    FLOAT           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    STRING          reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    INT             reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    FLT             reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    STR             reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    TRUE            reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    FALSE           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    CLOSECLASS      reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    ENDIF           reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    ELSE            reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)
    CLOSEFUNC       reduce using rule 30 (print_statement -> PRINT LPAREN STRING RPAREN .)


state 90

    (21) function_declaration -> FUNC type IDENTIFIER LPAREN . argument_list RPAREN COLON statements CLOSEFUNC
    (53) argument_list -> . type IDENTIFIER COMMA argument_list
    (54) argument_list -> . type IDENTIFIER
    (55) argument_list -> . empty
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (59) empty -> .

    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    RPAREN          reduce using rule 59 (empty -> .)

    type                           shift and go to state 77
    argument_list                  shift and go to state 99
    empty                          shift and go to state 78

state 91

    (20) array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET . INTEGER RSQUAREDBRACKET

    INTEGER         shift and go to state 100


state 92

    (22) class_declaration -> CLASS IDENTIFIER COLON statements . CLOSECLASS

    CLOSECLASS      shift and go to state 101


state 93

    (15) main_function -> MAIN LPAREN RPAREN COLON . statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . function_declaration
    (10) statement -> . variable_declaration
    (11) statement -> . array_declaration
    (12) statement -> . class_declaration
    (13) statement -> . main_function
    (14) statement -> . empty
    (59) empty -> .
    (16) conditional -> . inline_if_statement
    (17) conditional -> . for_statement
    (18) conditional -> . while_statement
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (51) assignment_statement -> . IDENTIFIER EQUAL expression
    (52) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (30) print_statement -> . PRINT LPAREN STRING RPAREN
    (21) function_declaration -> . FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (19) variable_declaration -> . type IDENTIFIER
    (20) array_declaration -> . ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (22) class_declaration -> . CLASS IDENTIFIER COLON statements CLOSECLASS
    (15) main_function -> . MAIN LPAREN RPAREN COLON statements
    (23) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
    (25) for_statement -> . FOR expression IN range_expression
    (27) while_statement -> . WHILE expression COLON statements
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (28) bool -> . TRUE
    (29) bool -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 59 (empty -> .)
    CLOSECLASS      reduce using rule 59 (empty -> .)
    ENDIF           reduce using rule 59 (empty -> .)
    ELSE            reduce using rule 59 (empty -> .)
    CLOSEFUNC       reduce using rule 59 (empty -> .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    FUNC            shift and go to state 23
    ARRAY           shift and go to state 26
    CLASS           shift and go to state 28
    MAIN            shift and go to state 29
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 59 (empty -> .) ]
  ! PRINT           [ reduce using rule 59 (empty -> .) ]
  ! FUNC            [ reduce using rule 59 (empty -> .) ]
  ! ARRAY           [ reduce using rule 59 (empty -> .) ]
  ! CLASS           [ reduce using rule 59 (empty -> .) ]
  ! MAIN            [ reduce using rule 59 (empty -> .) ]
  ! IF              [ reduce using rule 59 (empty -> .) ]
  ! FOR             [ reduce using rule 59 (empty -> .) ]
  ! WHILE           [ reduce using rule 59 (empty -> .) ]
  ! COLON           [ reduce using rule 59 (empty -> .) ]
  ! EQUAL           [ reduce using rule 59 (empty -> .) ]
  ! INTEGER         [ reduce using rule 59 (empty -> .) ]
  ! FLOAT           [ reduce using rule 59 (empty -> .) ]
  ! STRING          [ reduce using rule 59 (empty -> .) ]
  ! INT             [ reduce using rule 59 (empty -> .) ]
  ! FLT             [ reduce using rule 59 (empty -> .) ]
  ! STR             [ reduce using rule 59 (empty -> .) ]
  ! TRUE            [ reduce using rule 59 (empty -> .) ]
  ! FALSE           [ reduce using rule 59 (empty -> .) ]

    statements                     shift and go to state 102
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    expression                     shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    function_declaration           shift and go to state 9
    variable_declaration           shift and go to state 10
    array_declaration              shift and go to state 11
    class_declaration              shift and go to state 12
    main_function                  shift and go to state 13
    inline_if_statement            shift and go to state 14
    for_statement                  shift and go to state 15
    while_statement                shift and go to state 16
    token                          shift and go to state 18
    data                           shift and go to state 19
    type                           shift and go to state 24
    bool                           shift and go to state 34

state 94

    (23) inline_if_statement -> IF LPAREN expression RPAREN . COLON statements ENDIF
    (24) inline_if_statement -> IF LPAREN expression RPAREN . COLON statements ELSE COLON statements ENDIF

    COLON           shift and go to state 103


state 95

    (25) for_statement -> FOR expression IN range_expression .

    IDENTIFIER      reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    PRINT           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    FUNC            reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    ARRAY           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    CLASS           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    MAIN            reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    IF              reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    FOR             reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    WHILE           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    COLON           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    EQUAL           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    INTEGER         reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    FLOAT           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    STRING          reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    INT             reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    FLT             reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    STR             reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    TRUE            reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    FALSE           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    $end            reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    CLOSECLASS      reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    ENDIF           reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    ELSE            reduce using rule 25 (for_statement -> FOR expression IN range_expression .)
    CLOSEFUNC       reduce using rule 25 (for_statement -> FOR expression IN range_expression .)


state 96

    (26) range_expression -> RANGE . expression COMMA expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 104
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 97

    (27) while_statement -> WHILE expression COLON statements .

    IDENTIFIER      reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    PRINT           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    FUNC            reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    ARRAY           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    CLASS           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    MAIN            reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    IF              reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    FOR             reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    WHILE           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    COLON           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    EQUAL           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    INTEGER         reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    FLOAT           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    STRING          reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    INT             reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    FLT             reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    STR             reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    TRUE            reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    FALSE           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    $end            reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    CLOSECLASS      reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    ENDIF           reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    ELSE            reduce using rule 27 (while_statement -> WHILE expression COLON statements .)
    CLOSEFUNC       reduce using rule 27 (while_statement -> WHILE expression COLON statements .)


state 98

    (53) argument_list -> type IDENTIFIER COMMA . argument_list
    (53) argument_list -> . type IDENTIFIER COMMA argument_list
    (54) argument_list -> . type IDENTIFIER
    (55) argument_list -> . empty
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (59) empty -> .

    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    RPAREN          reduce using rule 59 (empty -> .)

    type                           shift and go to state 77
    argument_list                  shift and go to state 105
    empty                          shift and go to state 78

state 99

    (21) function_declaration -> FUNC type IDENTIFIER LPAREN argument_list . RPAREN COLON statements CLOSEFUNC

    RPAREN          shift and go to state 106


state 100

    (20) array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER . RSQUAREDBRACKET

    RSQUAREDBRACKET shift and go to state 107


state 101

    (22) class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .

    IDENTIFIER      reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    PRINT           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    FUNC            reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    ARRAY           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    CLASS           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    MAIN            reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    IF              reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    FOR             reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    WHILE           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    COLON           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    EQUAL           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    INTEGER         reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    FLOAT           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    STRING          reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    INT             reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    FLT             reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    STR             reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    TRUE            reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    FALSE           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    $end            reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    CLOSECLASS      reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    ENDIF           reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    ELSE            reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)
    CLOSEFUNC       reduce using rule 22 (class_declaration -> CLASS IDENTIFIER COLON statements CLOSECLASS .)


state 102

    (15) main_function -> MAIN LPAREN RPAREN COLON statements .

    IDENTIFIER      reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    PRINT           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    FUNC            reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    ARRAY           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    CLASS           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    MAIN            reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    IF              reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    FOR             reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    WHILE           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    COLON           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    EQUAL           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    INTEGER         reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    FLOAT           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    STRING          reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    INT             reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    FLT             reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    STR             reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    TRUE            reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    FALSE           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    $end            reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    CLOSECLASS      reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    ENDIF           reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    ELSE            reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)
    CLOSEFUNC       reduce using rule 15 (main_function -> MAIN LPAREN RPAREN COLON statements .)


state 103

    (23) inline_if_statement -> IF LPAREN expression RPAREN COLON . statements ENDIF
    (24) inline_if_statement -> IF LPAREN expression RPAREN COLON . statements ELSE COLON statements ENDIF
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . function_declaration
    (10) statement -> . variable_declaration
    (11) statement -> . array_declaration
    (12) statement -> . class_declaration
    (13) statement -> . main_function
    (14) statement -> . empty
    (59) empty -> .
    (16) conditional -> . inline_if_statement
    (17) conditional -> . for_statement
    (18) conditional -> . while_statement
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (51) assignment_statement -> . IDENTIFIER EQUAL expression
    (52) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (30) print_statement -> . PRINT LPAREN STRING RPAREN
    (21) function_declaration -> . FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (19) variable_declaration -> . type IDENTIFIER
    (20) array_declaration -> . ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (22) class_declaration -> . CLASS IDENTIFIER COLON statements CLOSECLASS
    (15) main_function -> . MAIN LPAREN RPAREN COLON statements
    (23) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
    (25) for_statement -> . FOR expression IN range_expression
    (27) while_statement -> . WHILE expression COLON statements
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (28) bool -> . TRUE
    (29) bool -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    ENDIF           reduce using rule 59 (empty -> .)
    ELSE            reduce using rule 59 (empty -> .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    FUNC            shift and go to state 23
    ARRAY           shift and go to state 26
    CLASS           shift and go to state 28
    MAIN            shift and go to state 29
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 59 (empty -> .) ]
  ! PRINT           [ reduce using rule 59 (empty -> .) ]
  ! FUNC            [ reduce using rule 59 (empty -> .) ]
  ! ARRAY           [ reduce using rule 59 (empty -> .) ]
  ! CLASS           [ reduce using rule 59 (empty -> .) ]
  ! MAIN            [ reduce using rule 59 (empty -> .) ]
  ! IF              [ reduce using rule 59 (empty -> .) ]
  ! FOR             [ reduce using rule 59 (empty -> .) ]
  ! WHILE           [ reduce using rule 59 (empty -> .) ]
  ! COLON           [ reduce using rule 59 (empty -> .) ]
  ! EQUAL           [ reduce using rule 59 (empty -> .) ]
  ! INTEGER         [ reduce using rule 59 (empty -> .) ]
  ! FLOAT           [ reduce using rule 59 (empty -> .) ]
  ! STRING          [ reduce using rule 59 (empty -> .) ]
  ! INT             [ reduce using rule 59 (empty -> .) ]
  ! FLT             [ reduce using rule 59 (empty -> .) ]
  ! STR             [ reduce using rule 59 (empty -> .) ]
  ! TRUE            [ reduce using rule 59 (empty -> .) ]
  ! FALSE           [ reduce using rule 59 (empty -> .) ]

    expression                     shift and go to state 5
    statements                     shift and go to state 108
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    function_declaration           shift and go to state 9
    variable_declaration           shift and go to state 10
    array_declaration              shift and go to state 11
    class_declaration              shift and go to state 12
    main_function                  shift and go to state 13
    inline_if_statement            shift and go to state 14
    for_statement                  shift and go to state 15
    while_statement                shift and go to state 16
    token                          shift and go to state 18
    data                           shift and go to state 19
    type                           shift and go to state 24
    bool                           shift and go to state 34

state 104

    (26) range_expression -> RANGE expression . COMMA expression
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

    COMMA           shift and go to state 109
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51


state 105

    (53) argument_list -> type IDENTIFIER COMMA argument_list .

    RPAREN          reduce using rule 53 (argument_list -> type IDENTIFIER COMMA argument_list .)


state 106

    (21) function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN . COLON statements CLOSEFUNC

    COLON           shift and go to state 110


state 107

    (20) array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .

    IDENTIFIER      reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    PRINT           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    FUNC            reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    ARRAY           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    CLASS           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    MAIN            reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    IF              reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    FOR             reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    WHILE           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    COLON           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    EQUAL           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    INTEGER         reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    FLOAT           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    STRING          reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    INT             reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    FLT             reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    STR             reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    TRUE            reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    FALSE           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    $end            reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    CLOSECLASS      reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    ENDIF           reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    ELSE            reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)
    CLOSEFUNC       reduce using rule 20 (array_declaration -> ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET .)


state 108

    (23) inline_if_statement -> IF LPAREN expression RPAREN COLON statements . ENDIF
    (24) inline_if_statement -> IF LPAREN expression RPAREN COLON statements . ELSE COLON statements ENDIF

    ENDIF           shift and go to state 111
    ELSE            shift and go to state 112


state 109

    (26) range_expression -> RANGE expression COMMA . expression
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (28) bool -> . TRUE
    (29) bool -> . FALSE

    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    IDENTIFIER      shift and go to state 62
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 113
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 110

    (21) function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON . statements CLOSEFUNC
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . function_declaration
    (10) statement -> . variable_declaration
    (11) statement -> . array_declaration
    (12) statement -> . class_declaration
    (13) statement -> . main_function
    (14) statement -> . empty
    (59) empty -> .
    (16) conditional -> . inline_if_statement
    (17) conditional -> . for_statement
    (18) conditional -> . while_statement
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (51) assignment_statement -> . IDENTIFIER EQUAL expression
    (52) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (30) print_statement -> . PRINT LPAREN STRING RPAREN
    (21) function_declaration -> . FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (19) variable_declaration -> . type IDENTIFIER
    (20) array_declaration -> . ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (22) class_declaration -> . CLASS IDENTIFIER COLON statements CLOSECLASS
    (15) main_function -> . MAIN LPAREN RPAREN COLON statements
    (23) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
    (25) for_statement -> . FOR expression IN range_expression
    (27) while_statement -> . WHILE expression COLON statements
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (28) bool -> . TRUE
    (29) bool -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    CLOSEFUNC       reduce using rule 59 (empty -> .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    FUNC            shift and go to state 23
    ARRAY           shift and go to state 26
    CLASS           shift and go to state 28
    MAIN            shift and go to state 29
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 59 (empty -> .) ]
  ! PRINT           [ reduce using rule 59 (empty -> .) ]
  ! FUNC            [ reduce using rule 59 (empty -> .) ]
  ! ARRAY           [ reduce using rule 59 (empty -> .) ]
  ! CLASS           [ reduce using rule 59 (empty -> .) ]
  ! MAIN            [ reduce using rule 59 (empty -> .) ]
  ! IF              [ reduce using rule 59 (empty -> .) ]
  ! FOR             [ reduce using rule 59 (empty -> .) ]
  ! WHILE           [ reduce using rule 59 (empty -> .) ]
  ! COLON           [ reduce using rule 59 (empty -> .) ]
  ! EQUAL           [ reduce using rule 59 (empty -> .) ]
  ! INTEGER         [ reduce using rule 59 (empty -> .) ]
  ! FLOAT           [ reduce using rule 59 (empty -> .) ]
  ! STRING          [ reduce using rule 59 (empty -> .) ]
  ! INT             [ reduce using rule 59 (empty -> .) ]
  ! FLT             [ reduce using rule 59 (empty -> .) ]
  ! STR             [ reduce using rule 59 (empty -> .) ]
  ! TRUE            [ reduce using rule 59 (empty -> .) ]
  ! FALSE           [ reduce using rule 59 (empty -> .) ]

    type                           shift and go to state 24
    statements                     shift and go to state 114
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    expression                     shift and go to state 5
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    function_declaration           shift and go to state 9
    variable_declaration           shift and go to state 10
    array_declaration              shift and go to state 11
    class_declaration              shift and go to state 12
    main_function                  shift and go to state 13
    inline_if_statement            shift and go to state 14
    for_statement                  shift and go to state 15
    while_statement                shift and go to state 16
    token                          shift and go to state 18
    data                           shift and go to state 19
    bool                           shift and go to state 34

state 111

    (23) inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .

    IDENTIFIER      reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    PRINT           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    FUNC            reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    ARRAY           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    CLASS           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    MAIN            reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    IF              reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    FOR             reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    WHILE           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    COLON           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    EQUAL           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    INTEGER         reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    FLOAT           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    STRING          reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    INT             reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    FLT             reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    STR             reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    TRUE            reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    FALSE           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    $end            reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    CLOSECLASS      reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    ENDIF           reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    ELSE            reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)
    CLOSEFUNC       reduce using rule 23 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ENDIF .)


state 112

    (24) inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE . COLON statements ENDIF

    COLON           shift and go to state 115


state 113

    (26) range_expression -> RANGE expression COMMA expression .
    (31) expression -> expression . GREATERTHAN expression
    (32) expression -> expression . LESSTHAN expression
    (33) expression -> expression . GREATEREQUAL expression
    (34) expression -> expression . LESSEQUAL expression
    (35) expression -> expression . EQUALEQUAL expression
    (36) expression -> expression . NOTEQUAL expression
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . TIMES expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . EQUAL expression

  ! shift/reduce conflict for EQUAL resolved as shift
    IDENTIFIER      reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    PRINT           reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    FUNC            reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    ARRAY           reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    CLASS           reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    MAIN            reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    IF              reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    FOR             reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    WHILE           reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    COLON           reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    INTEGER         reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    FLOAT           reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    STRING          reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    INT             reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    FLT             reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    STR             reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    TRUE            reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    FALSE           reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    $end            reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    CLOSECLASS      reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    ENDIF           reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    ELSE            reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    CLOSEFUNC       reduce using rule 26 (range_expression -> RANGE expression COMMA expression .)
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    GREATEREQUAL    shift and go to state 43
    LESSEQUAL       shift and go to state 44
    EQUALEQUAL      shift and go to state 45
    NOTEQUAL        shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    EQUAL           shift and go to state 51

  ! EQUAL           [ reduce using rule 26 (range_expression -> RANGE expression COMMA expression .) ]


state 114

    (21) function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements . CLOSEFUNC

    CLOSEFUNC       shift and go to state 116


state 115

    (24) inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON . statements ENDIF
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statements -> . empty
    (4) statement -> . conditional
    (5) statement -> . expression
    (6) statement -> . assignment_statement
    (7) statement -> . function_call
    (8) statement -> . print_statement
    (9) statement -> . function_declaration
    (10) statement -> . variable_declaration
    (11) statement -> . array_declaration
    (12) statement -> . class_declaration
    (13) statement -> . main_function
    (14) statement -> . empty
    (59) empty -> .
    (16) conditional -> . inline_if_statement
    (17) conditional -> . for_statement
    (18) conditional -> . while_statement
    (31) expression -> . expression GREATERTHAN expression
    (32) expression -> . expression LESSTHAN expression
    (33) expression -> . expression GREATEREQUAL expression
    (34) expression -> . expression LESSEQUAL expression
    (35) expression -> . expression EQUALEQUAL expression
    (36) expression -> . expression NOTEQUAL expression
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression TIMES expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression EQUAL expression
    (42) expression -> . token
    (43) expression -> . data
    (51) assignment_statement -> . IDENTIFIER EQUAL expression
    (52) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (30) print_statement -> . PRINT LPAREN STRING RPAREN
    (21) function_declaration -> . FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC
    (19) variable_declaration -> . type IDENTIFIER
    (20) array_declaration -> . ARRAY type IDENTIFIER LSQUAREDBRACKET INTEGER RSQUAREDBRACKET
    (22) class_declaration -> . CLASS IDENTIFIER COLON statements CLOSECLASS
    (15) main_function -> . MAIN LPAREN RPAREN COLON statements
    (23) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ENDIF
    (24) inline_if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF
    (25) for_statement -> . FOR expression IN range_expression
    (27) while_statement -> . WHILE expression COLON statements
    (49) token -> . COLON
    (50) token -> . EQUAL
    (44) data -> . INTEGER
    (45) data -> . FLOAT
    (46) data -> . STRING
    (47) data -> . IDENTIFIER
    (48) data -> . bool
    (56) type -> . INT
    (57) type -> . FLT
    (58) type -> . STR
    (28) bool -> . TRUE
    (29) bool -> . FALSE

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    ENDIF           reduce using rule 59 (empty -> .)
    IDENTIFIER      shift and go to state 20
    PRINT           shift and go to state 21
    FUNC            shift and go to state 23
    ARRAY           shift and go to state 26
    CLASS           shift and go to state 28
    MAIN            shift and go to state 29
    IF              shift and go to state 30
    FOR             shift and go to state 31
    WHILE           shift and go to state 32
    COLON           shift and go to state 25
    EQUAL           shift and go to state 17
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 33
    STRING          shift and go to state 22
    INT             shift and go to state 35
    FLT             shift and go to state 36
    STR             shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

  ! IDENTIFIER      [ reduce using rule 59 (empty -> .) ]
  ! PRINT           [ reduce using rule 59 (empty -> .) ]
  ! FUNC            [ reduce using rule 59 (empty -> .) ]
  ! ARRAY           [ reduce using rule 59 (empty -> .) ]
  ! CLASS           [ reduce using rule 59 (empty -> .) ]
  ! MAIN            [ reduce using rule 59 (empty -> .) ]
  ! IF              [ reduce using rule 59 (empty -> .) ]
  ! FOR             [ reduce using rule 59 (empty -> .) ]
  ! WHILE           [ reduce using rule 59 (empty -> .) ]
  ! COLON           [ reduce using rule 59 (empty -> .) ]
  ! EQUAL           [ reduce using rule 59 (empty -> .) ]
  ! INTEGER         [ reduce using rule 59 (empty -> .) ]
  ! FLOAT           [ reduce using rule 59 (empty -> .) ]
  ! STRING          [ reduce using rule 59 (empty -> .) ]
  ! INT             [ reduce using rule 59 (empty -> .) ]
  ! FLT             [ reduce using rule 59 (empty -> .) ]
  ! STR             [ reduce using rule 59 (empty -> .) ]
  ! TRUE            [ reduce using rule 59 (empty -> .) ]
  ! FALSE           [ reduce using rule 59 (empty -> .) ]

    expression                     shift and go to state 5
    statements                     shift and go to state 117
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    conditional                    shift and go to state 4
    assignment_statement           shift and go to state 6
    function_call                  shift and go to state 7
    print_statement                shift and go to state 8
    function_declaration           shift and go to state 9
    variable_declaration           shift and go to state 10
    array_declaration              shift and go to state 11
    class_declaration              shift and go to state 12
    main_function                  shift and go to state 13
    inline_if_statement            shift and go to state 14
    for_statement                  shift and go to state 15
    while_statement                shift and go to state 16
    token                          shift and go to state 18
    data                           shift and go to state 19
    type                           shift and go to state 24
    bool                           shift and go to state 34

state 116

    (21) function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .

    IDENTIFIER      reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    PRINT           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    FUNC            reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    ARRAY           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    CLASS           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    MAIN            reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    IF              reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    FOR             reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    WHILE           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    COLON           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    EQUAL           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    INTEGER         reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    FLOAT           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    STRING          reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    INT             reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    FLT             reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    STR             reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    TRUE            reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    FALSE           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    $end            reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    CLOSECLASS      reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    ENDIF           reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    ELSE            reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)
    CLOSEFUNC       reduce using rule 21 (function_declaration -> FUNC type IDENTIFIER LPAREN argument_list RPAREN COLON statements CLOSEFUNC .)


state 117

    (24) inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements . ENDIF

    ENDIF           shift and go to state 118


state 118

    (24) inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .

    IDENTIFIER      reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    PRINT           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    FUNC            reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    ARRAY           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    CLASS           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    MAIN            reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    IF              reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    FOR             reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    WHILE           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    COLON           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    EQUAL           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    INTEGER         reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    FLOAT           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    STRING          reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    INT             reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    FLT             reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    STR             reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    TRUE            reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    FALSE           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    $end            reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    CLOSECLASS      reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    ENDIF           reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    ELSE            reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)
    CLOSEFUNC       reduce using rule 24 (inline_if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements ENDIF .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 0 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for COLON in state 0 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 0 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for FLT in state 0 resolved as shift
WARNING: shift/reduce conflict for STR in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 2 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for COLON in state 2 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 2 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLT in state 2 resolved as shift
WARNING: shift/reduce conflict for STR in state 2 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 2 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 2 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 5 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 20 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 64 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 65 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 66 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 66 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 67 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 67 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 68 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 68 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 69 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 69 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 70 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 70 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 71 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 71 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 72 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 72 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 73 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 73 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 74 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 74 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 82 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 82 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 82 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 82 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 82 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 82 resolved as shift
WARNING: shift/reduce conflict for IF in state 82 resolved as shift
WARNING: shift/reduce conflict for FOR in state 82 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 82 resolved as shift
WARNING: shift/reduce conflict for COLON in state 82 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 82 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 82 resolved as shift
WARNING: shift/reduce conflict for STRING in state 82 resolved as shift
WARNING: shift/reduce conflict for INT in state 82 resolved as shift
WARNING: shift/reduce conflict for FLT in state 82 resolved as shift
WARNING: shift/reduce conflict for STR in state 82 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 82 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 82 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 86 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 86 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 86 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 86 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 86 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 86 resolved as shift
WARNING: shift/reduce conflict for IF in state 86 resolved as shift
WARNING: shift/reduce conflict for FOR in state 86 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 86 resolved as shift
WARNING: shift/reduce conflict for COLON in state 86 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 86 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 86 resolved as shift
WARNING: shift/reduce conflict for STRING in state 86 resolved as shift
WARNING: shift/reduce conflict for INT in state 86 resolved as shift
WARNING: shift/reduce conflict for FLT in state 86 resolved as shift
WARNING: shift/reduce conflict for STR in state 86 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 86 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 86 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 93 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 93 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 93 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 93 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 93 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 93 resolved as shift
WARNING: shift/reduce conflict for IF in state 93 resolved as shift
WARNING: shift/reduce conflict for FOR in state 93 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 93 resolved as shift
WARNING: shift/reduce conflict for COLON in state 93 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 93 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 93 resolved as shift
WARNING: shift/reduce conflict for STRING in state 93 resolved as shift
WARNING: shift/reduce conflict for INT in state 93 resolved as shift
WARNING: shift/reduce conflict for FLT in state 93 resolved as shift
WARNING: shift/reduce conflict for STR in state 93 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 93 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 93 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 103 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 103 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 103 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 103 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 103 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 103 resolved as shift
WARNING: shift/reduce conflict for IF in state 103 resolved as shift
WARNING: shift/reduce conflict for FOR in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for COLON in state 103 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 103 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 103 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 103 resolved as shift
WARNING: shift/reduce conflict for STRING in state 103 resolved as shift
WARNING: shift/reduce conflict for INT in state 103 resolved as shift
WARNING: shift/reduce conflict for FLT in state 103 resolved as shift
WARNING: shift/reduce conflict for STR in state 103 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 103 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 103 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 110 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 110 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 110 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 110 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 110 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 110 resolved as shift
WARNING: shift/reduce conflict for IF in state 110 resolved as shift
WARNING: shift/reduce conflict for FOR in state 110 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 110 resolved as shift
WARNING: shift/reduce conflict for COLON in state 110 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 110 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 110 resolved as shift
WARNING: shift/reduce conflict for STRING in state 110 resolved as shift
WARNING: shift/reduce conflict for INT in state 110 resolved as shift
WARNING: shift/reduce conflict for FLT in state 110 resolved as shift
WARNING: shift/reduce conflict for STR in state 110 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 110 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 110 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 113 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 115 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 115 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 115 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 115 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 115 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 115 resolved as shift
WARNING: shift/reduce conflict for IF in state 115 resolved as shift
WARNING: shift/reduce conflict for FOR in state 115 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 115 resolved as shift
WARNING: shift/reduce conflict for COLON in state 115 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 115 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 115 resolved as shift
WARNING: shift/reduce conflict for STRING in state 115 resolved as shift
WARNING: shift/reduce conflict for INT in state 115 resolved as shift
WARNING: shift/reduce conflict for FLT in state 115 resolved as shift
WARNING: shift/reduce conflict for STR in state 115 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 115 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 115 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (statements -> statement)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (statements -> empty)
WARNING: rejected rule (statement -> empty) in state 3
WARNING: Rule (statement -> empty) is never reduced
